// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: project.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Gooseai {

  /// <summary>Holder for reflection information generated from project.proto</summary>
  public static partial class ProjectReflection {

    #region Descriptor
    /// <summary>File descriptor for project.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProjectReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1wcm9qZWN0LnByb3RvEgdnb29zZWFpGhBnZW5lcmF0aW9uLnByb3RvIu4B",
            "CgxQcm9qZWN0QXNzZXQSDgoCaWQYASABKAlSAmlkEhAKA3VyaRgCIAEoCVID",
            "dXJpEioKA3VzZRgDIAEoDjIYLmdvb3NlYWkuUHJvamVjdEFzc2V0VXNlUgN1",
            "c2USEgoEbmFtZRgEIAEoCVIEbmFtZRISCgRzaXplGAUgASgEUgRzaXplEh0K",
            "CmNyZWF0ZWRfYXQYBiABKARSCWNyZWF0ZWRBdBIdCgp1cGRhdGVkX2F0GAcg",
            "ASgEUgl1cGRhdGVkQXQSKgoHcmVxdWVzdBgIIAEoCzIQLmdvb3NlYWkuUmVx",
            "dWVzdFIHcmVxdWVzdCLWAgoHUHJvamVjdBIOCgJpZBgBIAEoCVICaWQSFAoF",
            "dGl0bGUYAiABKAlSBXRpdGxlEhkKCG93bmVyX2lkGAMgASgJUgdvd25lcklk",
            "Ei4KBmFjY2VzcxgEIAEoDjIWLmdvb3NlYWkuUHJvamVjdEFjY2Vzc1IGYWNj",
            "ZXNzEi4KBnN0YXR1cxgFIAEoDjIWLmdvb3NlYWkuUHJvamVjdFN0YXR1c1IG",
            "c3RhdHVzEhIKBHNpemUYBiABKARSBHNpemUSKQoEZmlsZRgHIAEoCzIVLmdv",
            "b3NlYWkuUHJvamVjdEFzc2V0UgRmaWxlEh0KCmNyZWF0ZWRfYXQYCCABKARS",
            "CWNyZWF0ZWRBdBIdCgp1cGRhdGVkX2F0GAkgASgEUgl1cGRhdGVkQXQSLQoG",
            "YXNzZXRzGAogAygLMhUuZ29vc2VhaS5Qcm9qZWN0QXNzZXRSBmFzc2V0cyLy",
            "AQoUQ3JlYXRlUHJvamVjdFJlcXVlc3QSFAoFdGl0bGUYASABKAlSBXRpdGxl",
            "Eh4KCG93bmVyX2lkGAIgASgJSABSB293bmVySWSIAQESLgoGYWNjZXNzGAMg",
            "ASgOMhYuZ29vc2VhaS5Qcm9qZWN0QWNjZXNzUgZhY2Nlc3MSLgoGc3RhdHVz",
            "GAQgASgOMhYuZ29vc2VhaS5Qcm9qZWN0U3RhdHVzUgZzdGF0dXMSLgoEZmls",
            "ZRgFIAEoCzIVLmdvb3NlYWkuUHJvamVjdEFzc2V0SAFSBGZpbGWIAQFCCwoJ",
            "X293bmVyX2lkQgcKBV9maWxlIrECChRVcGRhdGVQcm9qZWN0UmVxdWVzdBIO",
            "CgJpZBgBIAEoCVICaWQSHgoIb3duZXJfaWQYAiABKAlIAFIHb3duZXJJZIgB",
            "ARIZCgV0aXRsZRgDIAEoCUgBUgV0aXRsZYgBARIzCgZhY2Nlc3MYBCABKA4y",
            "Fi5nb29zZWFpLlByb2plY3RBY2Nlc3NIAlIGYWNjZXNziAEBEjMKBnN0YXR1",
            "cxgFIAEoDjIWLmdvb3NlYWkuUHJvamVjdFN0YXR1c0gDUgZzdGF0dXOIAQES",
            "LgoEZmlsZRgGIAEoCzIVLmdvb3NlYWkuUHJvamVjdEFzc2V0SARSBGZpbGWI",
            "AQFCCwoJX293bmVyX2lkQggKBl90aXRsZUIJCgdfYWNjZXNzQgkKB19zdGF0",
            "dXNCBwoFX2ZpbGUiQQoSTGlzdFByb2plY3RSZXF1ZXN0Eh4KCG93bmVyX2lk",
            "GAEgASgJSABSB293bmVySWSIAQFCCwoJX293bmVyX2lkIlAKEUdldFByb2pl",
            "Y3RSZXF1ZXN0Eg4KAmlkGAEgASgJUgJpZBIeCghvd25lcl9pZBgCIAEoCUgA",
            "Ugdvd25lcklkiAEBQgsKCV9vd25lcl9pZCJTChREZWxldGVQcm9qZWN0UmVx",
            "dWVzdBIOCgJpZBgBIAEoCVICaWQSHgoIb3duZXJfaWQYAiABKAlIAFIHb3du",
            "ZXJJZIgBAUILCglfb3duZXJfaWQi0AIKElF1ZXJ5QXNzZXRzUmVxdWVzdBIO",
            "CgJpZBgBIAEoCVICaWQSHgoIb3duZXJfaWQYAiABKAlIAFIHb3duZXJJZIgB",
            "ARIZCgVzaW5jZRgDIAEoBEgBUgVzaW5jZYgBARIZCgV1bnRpbBgEIAEoBEgC",
            "UgV1bnRpbIgBARIZCgVsaW1pdBgFIAEoBEgDUgVsaW1pdIgBARIgCglzdGFy",
            "dF9rZXkYBiABKAlIBFIIc3RhcnRLZXmIAQESKgoDdXNlGAcgAygOMhguZ29v",
            "c2VhaS5Qcm9qZWN0QXNzZXRVc2VSA3VzZRIyCghzb3J0X2RpchgIIAEoDjIX",
            "Lmdvb3NlYWkuUHJvamVjdFNvcnREaXJSB3NvcnREaXJCCwoJX293bmVyX2lk",
            "QggKBl9zaW5jZUIICgZfdW50aWxCCAoGX2xpbWl0QgwKCl9zdGFydF9rZXki",
            "cQoTUXVlcnlBc3NldHNSZXNwb25zZRItCgZhc3NldHMYASADKAsyFS5nb29z",
            "ZWFpLlByb2plY3RBc3NldFIGYXNzZXRzEh4KCGxhc3Rfa2V5GAIgASgJSABS",
            "B2xhc3RLZXmIAQFCCwoJX2xhc3Rfa2V5KkYKDVByb2plY3RBY2Nlc3MSGgoW",
            "UFJPSkVDVF9BQ0NFU1NfUFJJVkFURRAAEhkKFVBST0pFQ1RfQUNDRVNTX1BV",
            "QkxJQxABKmMKDVByb2plY3RTdGF0dXMSGwoXUFJPSkVDVF9TVEFUVVNfSU5B",
            "Q1RJVkUQABIZChVQUk9KRUNUX1NUQVRVU19BQ1RJVkUQARIaChZQUk9KRUNU",
            "X1NUQVRVU19ERUxFVEVEEAIqsAEKD1Byb2plY3RBc3NldFVzZRIfChtQUk9K",
            "RUNUX0FTU0VUX1VTRV9VTkRFRklORUQQABIbChdQUk9KRUNUX0FTU0VUX1VT",
            "RV9JTlBVVBABEhwKGFBST0pFQ1RfQVNTRVRfVVNFX09VVFBVVBACEiIKHlBS",
            "T0pFQ1RfQVNTRVRfVVNFX0lOVEVSTUVESUFURRADEh0KGVBST0pFQ1RfQVNT",
            "RVRfVVNFX1BST0pFQ1QQBCpnCg5Qcm9qZWN0U29ydERpchIgChxQUk9KRUNU",
            "X1NPUlRfRElSX1VOU1BFQ0lGSUVEEAASGAoUUFJPSkVDVF9TT1JUX0RJUl9B",
            "U0MQARIZChVQUk9KRUNUX1NPUlRfRElSX0RFU0MQAjKFAwoOUHJvamVjdFNl",
            "cnZpY2USOwoGQ3JlYXRlEh0uZ29vc2VhaS5DcmVhdGVQcm9qZWN0UmVxdWVz",
            "dBoQLmdvb3NlYWkuUHJvamVjdCIAEjsKBlVwZGF0ZRIdLmdvb3NlYWkuVXBk",
            "YXRlUHJvamVjdFJlcXVlc3QaEC5nb29zZWFpLlByb2plY3QiABI5CgRMaXN0",
            "EhsuZ29vc2VhaS5MaXN0UHJvamVjdFJlcXVlc3QaEC5nb29zZWFpLlByb2pl",
            "Y3QiADABEjUKA0dldBIaLmdvb3NlYWkuR2V0UHJvamVjdFJlcXVlc3QaEC5n",
            "b29zZWFpLlByb2plY3QiABI7CgZEZWxldGUSHS5nb29zZWFpLkRlbGV0ZVBy",
            "b2plY3RSZXF1ZXN0GhAuZ29vc2VhaS5Qcm9qZWN0IgASSgoLUXVlcnlBc3Nl",
            "dHMSGy5nb29zZWFpLlF1ZXJ5QXNzZXRzUmVxdWVzdBocLmdvb3NlYWkuUXVl",
            "cnlBc3NldHNSZXNwb25zZSIAQjhaNmdpdGh1Yi5jb20vc3RhYmlsaXR5LWFp",
            "L2FwaS1pbnRlcmZhY2VzL2dvb3NlYWkvcHJvamVjdGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Gooseai.GenerationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Gooseai.ProjectAccess), typeof(global::Gooseai.ProjectStatus), typeof(global::Gooseai.ProjectAssetUse), typeof(global::Gooseai.ProjectSortDir), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Gooseai.ProjectAsset), global::Gooseai.ProjectAsset.Parser, new[]{ "Id", "Uri", "Use", "Name", "Size", "CreatedAt", "UpdatedAt", "Request" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gooseai.Project), global::Gooseai.Project.Parser, new[]{ "Id", "Title", "OwnerId", "Access", "Status", "Size", "File", "CreatedAt", "UpdatedAt", "Assets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gooseai.CreateProjectRequest), global::Gooseai.CreateProjectRequest.Parser, new[]{ "Title", "OwnerId", "Access", "Status", "File" }, new[]{ "OwnerId", "File" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gooseai.UpdateProjectRequest), global::Gooseai.UpdateProjectRequest.Parser, new[]{ "Id", "OwnerId", "Title", "Access", "Status", "File" }, new[]{ "OwnerId", "Title", "Access", "Status", "File" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gooseai.ListProjectRequest), global::Gooseai.ListProjectRequest.Parser, new[]{ "OwnerId" }, new[]{ "OwnerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gooseai.GetProjectRequest), global::Gooseai.GetProjectRequest.Parser, new[]{ "Id", "OwnerId" }, new[]{ "OwnerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gooseai.DeleteProjectRequest), global::Gooseai.DeleteProjectRequest.Parser, new[]{ "Id", "OwnerId" }, new[]{ "OwnerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gooseai.QueryAssetsRequest), global::Gooseai.QueryAssetsRequest.Parser, new[]{ "Id", "OwnerId", "Since", "Until", "Limit", "StartKey", "Use", "SortDir" }, new[]{ "OwnerId", "Since", "Until", "Limit", "StartKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gooseai.QueryAssetsResponse), global::Gooseai.QueryAssetsResponse.Parser, new[]{ "Assets", "LastKey" }, new[]{ "LastKey" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ProjectAccess {
    /// <summary>
    /// Private access, only owner organization can access
    /// </summary>
    [pbr::OriginalName("PROJECT_ACCESS_PRIVATE")] Private = 0,
    /// <summary>
    /// Public access, anyone can access
    /// </summary>
    [pbr::OriginalName("PROJECT_ACCESS_PUBLIC")] Public = 1,
  }

  public enum ProjectStatus {
    /// <summary>
    /// Inactive project
    /// </summary>
    [pbr::OriginalName("PROJECT_STATUS_INACTIVE")] Inactive = 0,
    /// <summary>
    /// Active project
    /// </summary>
    [pbr::OriginalName("PROJECT_STATUS_ACTIVE")] Active = 1,
    /// <summary>
    /// Deleted project, only set by delete endpoint
    /// </summary>
    [pbr::OriginalName("PROJECT_STATUS_DELETED")] Deleted = 2,
  }

  public enum ProjectAssetUse {
    /// <summary>
    /// Asset does not have use defined
    /// </summary>
    [pbr::OriginalName("PROJECT_ASSET_USE_UNDEFINED")] Undefined = 0,
    /// <summary>
    /// Asset is used as an input for the project
    /// </summary>
    [pbr::OriginalName("PROJECT_ASSET_USE_INPUT")] Input = 1,
    /// <summary>
    /// Asset is an output from the project
    /// </summary>
    [pbr::OriginalName("PROJECT_ASSET_USE_OUTPUT")] Output = 2,
    /// <summary>
    /// Asset is an output from an intermediate step of the project
    /// </summary>
    [pbr::OriginalName("PROJECT_ASSET_USE_INTERMEDIATE")] Intermediate = 3,
    /// <summary>
    /// Asset is used as the project file for the project
    /// </summary>
    [pbr::OriginalName("PROJECT_ASSET_USE_PROJECT")] Project = 4,
  }

  public enum ProjectSortDir {
    /// <summary>
    /// Sort direction is not specified, uses default
    /// </summary>
    [pbr::OriginalName("PROJECT_SORT_DIR_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Sort in ascending order
    /// </summary>
    [pbr::OriginalName("PROJECT_SORT_DIR_ASC")] Asc = 1,
    /// <summary>
    /// Sort in descending order
    /// </summary>
    [pbr::OriginalName("PROJECT_SORT_DIR_DESC")] Desc = 2,
  }

  #endregion

  #region Messages
  public sealed partial class ProjectAsset : pb::IMessage<ProjectAsset>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProjectAsset> _parser = new pb::MessageParser<ProjectAsset>(() => new ProjectAsset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProjectAsset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gooseai.ProjectReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProjectAsset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProjectAsset(ProjectAsset other) : this() {
      id_ = other.id_;
      uri_ = other.uri_;
      use_ = other.use_;
      name_ = other.name_;
      size_ = other.size_;
      createdAt_ = other.createdAt_;
      updatedAt_ = other.updatedAt_;
      request_ = other.request_ != null ? other.request_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProjectAsset Clone() {
      return new ProjectAsset(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// ID of the asset, UUIDv4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 2;
    private string uri_ = "";
    /// <summary>
    /// The URI to the asset
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uri {
      get { return uri_; }
      set {
        uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "use" field.</summary>
    public const int UseFieldNumber = 3;
    private global::Gooseai.ProjectAssetUse use_ = global::Gooseai.ProjectAssetUse.Undefined;
    /// <summary>
    /// The use of the asset with respect to the project
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Gooseai.ProjectAssetUse Use {
      get { return use_; }
      set {
        use_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// The name of the asset
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 5;
    private ulong size_;
    /// <summary>
    /// The asset size in bytes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 6;
    private ulong createdAt_;
    /// <summary>
    /// Time of asset creation (UTC seconds epoch)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "updated_at" field.</summary>
    public const int UpdatedAtFieldNumber = 7;
    private ulong updatedAt_;
    /// <summary>
    /// Time of last asset update (UTC seconds epoch)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong UpdatedAt {
      get { return updatedAt_; }
      set {
        updatedAt_ = value;
      }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 8;
    private global::Gooseai.Request request_;
    /// <summary>
    /// The request object that is associated with the artifact
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Gooseai.Request Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProjectAsset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProjectAsset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Uri != other.Uri) return false;
      if (Use != other.Use) return false;
      if (Name != other.Name) return false;
      if (Size != other.Size) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (UpdatedAt != other.UpdatedAt) return false;
      if (!object.Equals(Request, other.Request)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Uri.Length != 0) hash ^= Uri.GetHashCode();
      if (Use != global::Gooseai.ProjectAssetUse.Undefined) hash ^= Use.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Size != 0UL) hash ^= Size.GetHashCode();
      if (CreatedAt != 0UL) hash ^= CreatedAt.GetHashCode();
      if (UpdatedAt != 0UL) hash ^= UpdatedAt.GetHashCode();
      if (request_ != null) hash ^= Request.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Uri.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uri);
      }
      if (Use != global::Gooseai.ProjectAssetUse.Undefined) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Use);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Size != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(Size);
      }
      if (CreatedAt != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(CreatedAt);
      }
      if (UpdatedAt != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(UpdatedAt);
      }
      if (request_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Request);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Uri.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uri);
      }
      if (Use != global::Gooseai.ProjectAssetUse.Undefined) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Use);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Size != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(Size);
      }
      if (CreatedAt != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(CreatedAt);
      }
      if (UpdatedAt != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(UpdatedAt);
      }
      if (request_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Request);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Uri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (Use != global::Gooseai.ProjectAssetUse.Undefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Use);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Size != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Size);
      }
      if (CreatedAt != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CreatedAt);
      }
      if (UpdatedAt != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UpdatedAt);
      }
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProjectAsset other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Uri.Length != 0) {
        Uri = other.Uri;
      }
      if (other.Use != global::Gooseai.ProjectAssetUse.Undefined) {
        Use = other.Use;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Size != 0UL) {
        Size = other.Size;
      }
      if (other.CreatedAt != 0UL) {
        CreatedAt = other.CreatedAt;
      }
      if (other.UpdatedAt != 0UL) {
        UpdatedAt = other.UpdatedAt;
      }
      if (other.request_ != null) {
        if (request_ == null) {
          Request = new global::Gooseai.Request();
        }
        Request.MergeFrom(other.Request);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Uri = input.ReadString();
            break;
          }
          case 24: {
            Use = (global::Gooseai.ProjectAssetUse) input.ReadEnum();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            Size = input.ReadUInt64();
            break;
          }
          case 48: {
            CreatedAt = input.ReadUInt64();
            break;
          }
          case 56: {
            UpdatedAt = input.ReadUInt64();
            break;
          }
          case 66: {
            if (request_ == null) {
              Request = new global::Gooseai.Request();
            }
            input.ReadMessage(Request);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Uri = input.ReadString();
            break;
          }
          case 24: {
            Use = (global::Gooseai.ProjectAssetUse) input.ReadEnum();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            Size = input.ReadUInt64();
            break;
          }
          case 48: {
            CreatedAt = input.ReadUInt64();
            break;
          }
          case 56: {
            UpdatedAt = input.ReadUInt64();
            break;
          }
          case 66: {
            if (request_ == null) {
              Request = new global::Gooseai.Request();
            }
            input.ReadMessage(Request);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Project : pb::IMessage<Project>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Project> _parser = new pb::MessageParser<Project>(() => new Project());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Project> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gooseai.ProjectReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Project() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Project(Project other) : this() {
      id_ = other.id_;
      title_ = other.title_;
      ownerId_ = other.ownerId_;
      access_ = other.access_;
      status_ = other.status_;
      size_ = other.size_;
      file_ = other.file_ != null ? other.file_.Clone() : null;
      createdAt_ = other.createdAt_;
      updatedAt_ = other.updatedAt_;
      assets_ = other.assets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Project Clone() {
      return new Project(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// ID of the project, UUIDv4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    /// <summary>
    /// Title of the project
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner_id" field.</summary>
    public const int OwnerIdFieldNumber = 3;
    private string ownerId_ = "";
    /// <summary>
    /// The ID of the organization owning the project
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerId {
      get { return ownerId_; }
      set {
        ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "access" field.</summary>
    public const int AccessFieldNumber = 4;
    private global::Gooseai.ProjectAccess access_ = global::Gooseai.ProjectAccess.Private;
    /// <summary>
    /// The access of the project (such as public vs private)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Gooseai.ProjectAccess Access {
      get { return access_; }
      set {
        access_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private global::Gooseai.ProjectStatus status_ = global::Gooseai.ProjectStatus.Inactive;
    /// <summary>
    /// The status of the project (such as active vs inactive)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Gooseai.ProjectStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 6;
    private ulong size_;
    /// <summary>
    /// The size of the project in bytes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 7;
    private global::Gooseai.ProjectAsset file_;
    /// <summary>
    /// Project file for the project
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Gooseai.ProjectAsset File {
      get { return file_; }
      set {
        file_ = value;
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 8;
    private ulong createdAt_;
    /// <summary>
    /// Time of project creation (UTC seconds epoch)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "updated_at" field.</summary>
    public const int UpdatedAtFieldNumber = 9;
    private ulong updatedAt_;
    /// <summary>
    /// Time of last project update (UTC seconds epoch)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong UpdatedAt {
      get { return updatedAt_; }
      set {
        updatedAt_ = value;
      }
    }

    /// <summary>Field number for the "assets" field.</summary>
    public const int AssetsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Gooseai.ProjectAsset> _repeated_assets_codec
        = pb::FieldCodec.ForMessage(82, global::Gooseai.ProjectAsset.Parser);
    private readonly pbc::RepeatedField<global::Gooseai.ProjectAsset> assets_ = new pbc::RepeatedField<global::Gooseai.ProjectAsset>();
    /// <summary>
    /// The listing of all assets associated with the project
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Gooseai.ProjectAsset> Assets {
      get { return assets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Project);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Project other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Title != other.Title) return false;
      if (OwnerId != other.OwnerId) return false;
      if (Access != other.Access) return false;
      if (Status != other.Status) return false;
      if (Size != other.Size) return false;
      if (!object.Equals(File, other.File)) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (UpdatedAt != other.UpdatedAt) return false;
      if(!assets_.Equals(other.assets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
      if (Access != global::Gooseai.ProjectAccess.Private) hash ^= Access.GetHashCode();
      if (Status != global::Gooseai.ProjectStatus.Inactive) hash ^= Status.GetHashCode();
      if (Size != 0UL) hash ^= Size.GetHashCode();
      if (file_ != null) hash ^= File.GetHashCode();
      if (CreatedAt != 0UL) hash ^= CreatedAt.GetHashCode();
      if (UpdatedAt != 0UL) hash ^= UpdatedAt.GetHashCode();
      hash ^= assets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (OwnerId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OwnerId);
      }
      if (Access != global::Gooseai.ProjectAccess.Private) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Access);
      }
      if (Status != global::Gooseai.ProjectStatus.Inactive) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Status);
      }
      if (Size != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(Size);
      }
      if (file_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(File);
      }
      if (CreatedAt != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(CreatedAt);
      }
      if (UpdatedAt != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(UpdatedAt);
      }
      assets_.WriteTo(output, _repeated_assets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (OwnerId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OwnerId);
      }
      if (Access != global::Gooseai.ProjectAccess.Private) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Access);
      }
      if (Status != global::Gooseai.ProjectStatus.Inactive) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Status);
      }
      if (Size != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(Size);
      }
      if (file_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(File);
      }
      if (CreatedAt != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(CreatedAt);
      }
      if (UpdatedAt != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(UpdatedAt);
      }
      assets_.WriteTo(ref output, _repeated_assets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (OwnerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
      }
      if (Access != global::Gooseai.ProjectAccess.Private) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Access);
      }
      if (Status != global::Gooseai.ProjectStatus.Inactive) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Size != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Size);
      }
      if (file_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(File);
      }
      if (CreatedAt != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CreatedAt);
      }
      if (UpdatedAt != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UpdatedAt);
      }
      size += assets_.CalculateSize(_repeated_assets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Project other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.OwnerId.Length != 0) {
        OwnerId = other.OwnerId;
      }
      if (other.Access != global::Gooseai.ProjectAccess.Private) {
        Access = other.Access;
      }
      if (other.Status != global::Gooseai.ProjectStatus.Inactive) {
        Status = other.Status;
      }
      if (other.Size != 0UL) {
        Size = other.Size;
      }
      if (other.file_ != null) {
        if (file_ == null) {
          File = new global::Gooseai.ProjectAsset();
        }
        File.MergeFrom(other.File);
      }
      if (other.CreatedAt != 0UL) {
        CreatedAt = other.CreatedAt;
      }
      if (other.UpdatedAt != 0UL) {
        UpdatedAt = other.UpdatedAt;
      }
      assets_.Add(other.assets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            OwnerId = input.ReadString();
            break;
          }
          case 32: {
            Access = (global::Gooseai.ProjectAccess) input.ReadEnum();
            break;
          }
          case 40: {
            Status = (global::Gooseai.ProjectStatus) input.ReadEnum();
            break;
          }
          case 48: {
            Size = input.ReadUInt64();
            break;
          }
          case 58: {
            if (file_ == null) {
              File = new global::Gooseai.ProjectAsset();
            }
            input.ReadMessage(File);
            break;
          }
          case 64: {
            CreatedAt = input.ReadUInt64();
            break;
          }
          case 72: {
            UpdatedAt = input.ReadUInt64();
            break;
          }
          case 82: {
            assets_.AddEntriesFrom(input, _repeated_assets_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            OwnerId = input.ReadString();
            break;
          }
          case 32: {
            Access = (global::Gooseai.ProjectAccess) input.ReadEnum();
            break;
          }
          case 40: {
            Status = (global::Gooseai.ProjectStatus) input.ReadEnum();
            break;
          }
          case 48: {
            Size = input.ReadUInt64();
            break;
          }
          case 58: {
            if (file_ == null) {
              File = new global::Gooseai.ProjectAsset();
            }
            input.ReadMessage(File);
            break;
          }
          case 64: {
            CreatedAt = input.ReadUInt64();
            break;
          }
          case 72: {
            UpdatedAt = input.ReadUInt64();
            break;
          }
          case 82: {
            assets_.AddEntriesFrom(ref input, _repeated_assets_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateProjectRequest : pb::IMessage<CreateProjectRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateProjectRequest> _parser = new pb::MessageParser<CreateProjectRequest>(() => new CreateProjectRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateProjectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gooseai.ProjectReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateProjectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateProjectRequest(CreateProjectRequest other) : this() {
      title_ = other.title_;
      ownerId_ = other.ownerId_;
      access_ = other.access_;
      status_ = other.status_;
      file_ = other.file_ != null ? other.file_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateProjectRequest Clone() {
      return new CreateProjectRequest(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private string title_ = "";
    /// <summary>
    /// title of the project
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner_id" field.</summary>
    public const int OwnerIdFieldNumber = 2;
    private string ownerId_;
    /// <summary>
    /// The ID of the organization owning the project, empty for default org for user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerId {
      get { return ownerId_ ?? ""; }
      set {
        ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerId {
      get { return ownerId_ != null; }
    }
    /// <summary>Clears the value of the "owner_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerId() {
      ownerId_ = null;
    }

    /// <summary>Field number for the "access" field.</summary>
    public const int AccessFieldNumber = 3;
    private global::Gooseai.ProjectAccess access_ = global::Gooseai.ProjectAccess.Private;
    /// <summary>
    /// The access of the project (such as public vs private)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Gooseai.ProjectAccess Access {
      get { return access_; }
      set {
        access_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::Gooseai.ProjectStatus status_ = global::Gooseai.ProjectStatus.Inactive;
    /// <summary>
    /// The status of the project (such as active vs inactive)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Gooseai.ProjectStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 5;
    private global::Gooseai.ProjectAsset file_;
    /// <summary>
    /// Project file for the project (if existing, else will create)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Gooseai.ProjectAsset File {
      get { return file_; }
      set {
        file_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateProjectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateProjectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (OwnerId != other.OwnerId) return false;
      if (Access != other.Access) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(File, other.File)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (HasOwnerId) hash ^= OwnerId.GetHashCode();
      if (Access != global::Gooseai.ProjectAccess.Private) hash ^= Access.GetHashCode();
      if (Status != global::Gooseai.ProjectStatus.Inactive) hash ^= Status.GetHashCode();
      if (file_ != null) hash ^= File.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Title.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (HasOwnerId) {
        output.WriteRawTag(18);
        output.WriteString(OwnerId);
      }
      if (Access != global::Gooseai.ProjectAccess.Private) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Access);
      }
      if (Status != global::Gooseai.ProjectStatus.Inactive) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (file_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(File);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Title.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (HasOwnerId) {
        output.WriteRawTag(18);
        output.WriteString(OwnerId);
      }
      if (Access != global::Gooseai.ProjectAccess.Private) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Access);
      }
      if (Status != global::Gooseai.ProjectStatus.Inactive) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (file_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(File);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasOwnerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
      }
      if (Access != global::Gooseai.ProjectAccess.Private) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Access);
      }
      if (Status != global::Gooseai.ProjectStatus.Inactive) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (file_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(File);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateProjectRequest other) {
      if (other == null) {
        return;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.HasOwnerId) {
        OwnerId = other.OwnerId;
      }
      if (other.Access != global::Gooseai.ProjectAccess.Private) {
        Access = other.Access;
      }
      if (other.Status != global::Gooseai.ProjectStatus.Inactive) {
        Status = other.Status;
      }
      if (other.file_ != null) {
        if (file_ == null) {
          File = new global::Gooseai.ProjectAsset();
        }
        File.MergeFrom(other.File);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            OwnerId = input.ReadString();
            break;
          }
          case 24: {
            Access = (global::Gooseai.ProjectAccess) input.ReadEnum();
            break;
          }
          case 32: {
            Status = (global::Gooseai.ProjectStatus) input.ReadEnum();
            break;
          }
          case 42: {
            if (file_ == null) {
              File = new global::Gooseai.ProjectAsset();
            }
            input.ReadMessage(File);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            OwnerId = input.ReadString();
            break;
          }
          case 24: {
            Access = (global::Gooseai.ProjectAccess) input.ReadEnum();
            break;
          }
          case 32: {
            Status = (global::Gooseai.ProjectStatus) input.ReadEnum();
            break;
          }
          case 42: {
            if (file_ == null) {
              File = new global::Gooseai.ProjectAsset();
            }
            input.ReadMessage(File);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UpdateProjectRequest : pb::IMessage<UpdateProjectRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateProjectRequest> _parser = new pb::MessageParser<UpdateProjectRequest>(() => new UpdateProjectRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateProjectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gooseai.ProjectReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateProjectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateProjectRequest(UpdateProjectRequest other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      ownerId_ = other.ownerId_;
      title_ = other.title_;
      access_ = other.access_;
      status_ = other.status_;
      file_ = other.file_ != null ? other.file_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateProjectRequest Clone() {
      return new UpdateProjectRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// ID of the project, UUIDv4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner_id" field.</summary>
    public const int OwnerIdFieldNumber = 2;
    private string ownerId_;
    /// <summary>
    /// The ID of the organization owning the project, empty for default org for user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerId {
      get { return ownerId_ ?? ""; }
      set {
        ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerId {
      get { return ownerId_ != null; }
    }
    /// <summary>Clears the value of the "owner_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerId() {
      ownerId_ = null;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 3;
    private string title_;
    /// <summary>
    /// Title of the project
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Title {
      get { return title_ ?? ""; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "access" field.</summary>
    public const int AccessFieldNumber = 4;
    private global::Gooseai.ProjectAccess access_;
    /// <summary>
    /// The access of the project (such as public vs private)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Gooseai.ProjectAccess Access {
      get { if ((_hasBits0 & 1) != 0) { return access_; } else { return global::Gooseai.ProjectAccess.Private; } }
      set {
        _hasBits0 |= 1;
        access_ = value;
      }
    }
    /// <summary>Gets whether the "access" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccess {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "access" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccess() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private global::Gooseai.ProjectStatus status_;
    /// <summary>
    /// The status of the project (such as active vs inactive)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Gooseai.ProjectStatus Status {
      get { if ((_hasBits0 & 2) != 0) { return status_; } else { return global::Gooseai.ProjectStatus.Inactive; } }
      set {
        _hasBits0 |= 2;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatus {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatus() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 6;
    private global::Gooseai.ProjectAsset file_;
    /// <summary>
    /// Project file for the project
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Gooseai.ProjectAsset File {
      get { return file_; }
      set {
        file_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateProjectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateProjectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (OwnerId != other.OwnerId) return false;
      if (Title != other.Title) return false;
      if (Access != other.Access) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(File, other.File)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (HasOwnerId) hash ^= OwnerId.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasAccess) hash ^= Access.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (file_ != null) hash ^= File.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasOwnerId) {
        output.WriteRawTag(18);
        output.WriteString(OwnerId);
      }
      if (HasTitle) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (HasAccess) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Access);
      }
      if (HasStatus) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Status);
      }
      if (file_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(File);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasOwnerId) {
        output.WriteRawTag(18);
        output.WriteString(OwnerId);
      }
      if (HasTitle) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (HasAccess) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Access);
      }
      if (HasStatus) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Status);
      }
      if (file_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(File);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasOwnerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasAccess) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Access);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (file_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(File);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateProjectRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.HasOwnerId) {
        OwnerId = other.OwnerId;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasAccess) {
        Access = other.Access;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.file_ != null) {
        if (file_ == null) {
          File = new global::Gooseai.ProjectAsset();
        }
        File.MergeFrom(other.File);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            OwnerId = input.ReadString();
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 32: {
            Access = (global::Gooseai.ProjectAccess) input.ReadEnum();
            break;
          }
          case 40: {
            Status = (global::Gooseai.ProjectStatus) input.ReadEnum();
            break;
          }
          case 50: {
            if (file_ == null) {
              File = new global::Gooseai.ProjectAsset();
            }
            input.ReadMessage(File);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            OwnerId = input.ReadString();
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 32: {
            Access = (global::Gooseai.ProjectAccess) input.ReadEnum();
            break;
          }
          case 40: {
            Status = (global::Gooseai.ProjectStatus) input.ReadEnum();
            break;
          }
          case 50: {
            if (file_ == null) {
              File = new global::Gooseai.ProjectAsset();
            }
            input.ReadMessage(File);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListProjectRequest : pb::IMessage<ListProjectRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListProjectRequest> _parser = new pb::MessageParser<ListProjectRequest>(() => new ListProjectRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListProjectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gooseai.ProjectReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListProjectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListProjectRequest(ListProjectRequest other) : this() {
      ownerId_ = other.ownerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListProjectRequest Clone() {
      return new ListProjectRequest(this);
    }

    /// <summary>Field number for the "owner_id" field.</summary>
    public const int OwnerIdFieldNumber = 1;
    private string ownerId_;
    /// <summary>
    /// The ID of the organization owning the project, empty for default org for user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerId {
      get { return ownerId_ ?? ""; }
      set {
        ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerId {
      get { return ownerId_ != null; }
    }
    /// <summary>Clears the value of the "owner_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerId() {
      ownerId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListProjectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListProjectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerId != other.OwnerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOwnerId) hash ^= OwnerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOwnerId) {
        output.WriteRawTag(10);
        output.WriteString(OwnerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOwnerId) {
        output.WriteRawTag(10);
        output.WriteString(OwnerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasOwnerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListProjectRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasOwnerId) {
        OwnerId = other.OwnerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            OwnerId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetProjectRequest : pb::IMessage<GetProjectRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetProjectRequest> _parser = new pb::MessageParser<GetProjectRequest>(() => new GetProjectRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetProjectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gooseai.ProjectReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetProjectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetProjectRequest(GetProjectRequest other) : this() {
      id_ = other.id_;
      ownerId_ = other.ownerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetProjectRequest Clone() {
      return new GetProjectRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// ID of the project to request, UUIDv4, empty string uses default project
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner_id" field.</summary>
    public const int OwnerIdFieldNumber = 2;
    private string ownerId_;
    /// <summary>
    /// The ID of the organization owning the project, empty for default org for user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerId {
      get { return ownerId_ ?? ""; }
      set {
        ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerId {
      get { return ownerId_ != null; }
    }
    /// <summary>Clears the value of the "owner_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerId() {
      ownerId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetProjectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetProjectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (OwnerId != other.OwnerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (HasOwnerId) hash ^= OwnerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasOwnerId) {
        output.WriteRawTag(18);
        output.WriteString(OwnerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasOwnerId) {
        output.WriteRawTag(18);
        output.WriteString(OwnerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasOwnerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetProjectRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.HasOwnerId) {
        OwnerId = other.OwnerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            OwnerId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            OwnerId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeleteProjectRequest : pb::IMessage<DeleteProjectRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteProjectRequest> _parser = new pb::MessageParser<DeleteProjectRequest>(() => new DeleteProjectRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteProjectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gooseai.ProjectReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteProjectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteProjectRequest(DeleteProjectRequest other) : this() {
      id_ = other.id_;
      ownerId_ = other.ownerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteProjectRequest Clone() {
      return new DeleteProjectRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// ID of the project to request, UUIDv4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner_id" field.</summary>
    public const int OwnerIdFieldNumber = 2;
    private string ownerId_;
    /// <summary>
    /// The ID of the organization owning the project, empty for default org for user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerId {
      get { return ownerId_ ?? ""; }
      set {
        ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerId {
      get { return ownerId_ != null; }
    }
    /// <summary>Clears the value of the "owner_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerId() {
      ownerId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteProjectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteProjectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (OwnerId != other.OwnerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (HasOwnerId) hash ^= OwnerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasOwnerId) {
        output.WriteRawTag(18);
        output.WriteString(OwnerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasOwnerId) {
        output.WriteRawTag(18);
        output.WriteString(OwnerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasOwnerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteProjectRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.HasOwnerId) {
        OwnerId = other.OwnerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            OwnerId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            OwnerId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class QueryAssetsRequest : pb::IMessage<QueryAssetsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QueryAssetsRequest> _parser = new pb::MessageParser<QueryAssetsRequest>(() => new QueryAssetsRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<QueryAssetsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gooseai.ProjectReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QueryAssetsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QueryAssetsRequest(QueryAssetsRequest other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      ownerId_ = other.ownerId_;
      since_ = other.since_;
      until_ = other.until_;
      limit_ = other.limit_;
      startKey_ = other.startKey_;
      use_ = other.use_.Clone();
      sortDir_ = other.sortDir_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QueryAssetsRequest Clone() {
      return new QueryAssetsRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// ID of the project to request, UUIDv4, empty string uses default project
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner_id" field.</summary>
    public const int OwnerIdFieldNumber = 2;
    private string ownerId_;
    /// <summary>
    /// The ID of the organization owning the assets, unset for default org for user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerId {
      get { return ownerId_ ?? ""; }
      set {
        ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerId {
      get { return ownerId_ != null; }
    }
    /// <summary>Clears the value of the "owner_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerId() {
      ownerId_ = null;
    }

    /// <summary>Field number for the "since" field.</summary>
    public const int SinceFieldNumber = 3;
    private ulong since_;
    /// <summary>
    /// The time (UTC seconds epoch) to start listing assets from, unset for no restriction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Since {
      get { if ((_hasBits0 & 1) != 0) { return since_; } else { return 0UL; } }
      set {
        _hasBits0 |= 1;
        since_ = value;
      }
    }
    /// <summary>Gets whether the "since" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSince {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "since" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSince() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "until" field.</summary>
    public const int UntilFieldNumber = 4;
    private ulong until_;
    /// <summary>
    /// The time (UTC seconds epoch) to stop listing assets at, unset for no restriction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Until {
      get { if ((_hasBits0 & 2) != 0) { return until_; } else { return 0UL; } }
      set {
        _hasBits0 |= 2;
        until_ = value;
      }
    }
    /// <summary>Gets whether the "until" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUntil {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "until" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUntil() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 5;
    private ulong limit_;
    /// <summary>
    /// The maximum number of assets to return, unset for no limit
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Limit {
      get { if ((_hasBits0 & 4) != 0) { return limit_; } else { return 0UL; } }
      set {
        _hasBits0 |= 4;
        limit_ = value;
      }
    }
    /// <summary>Gets whether the "limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimit {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimit() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "start_key" field.</summary>
    public const int StartKeyFieldNumber = 6;
    private string startKey_;
    /// <summary>
    /// The key to start from, used to paginate results, unset for no offset
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StartKey {
      get { return startKey_ ?? ""; }
      set {
        startKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "start_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartKey {
      get { return startKey_ != null; }
    }
    /// <summary>Clears the value of the "start_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartKey() {
      startKey_ = null;
    }

    /// <summary>Field number for the "use" field.</summary>
    public const int UseFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Gooseai.ProjectAssetUse> _repeated_use_codec
        = pb::FieldCodec.ForEnum(58, x => (int) x, x => (global::Gooseai.ProjectAssetUse) x);
    private readonly pbc::RepeatedField<global::Gooseai.ProjectAssetUse> use_ = new pbc::RepeatedField<global::Gooseai.ProjectAssetUse>();
    /// <summary>
    /// The asset usage to filter the assets returned, empty for no filter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Gooseai.ProjectAssetUse> Use {
      get { return use_; }
    }

    /// <summary>Field number for the "sort_dir" field.</summary>
    public const int SortDirFieldNumber = 8;
    private global::Gooseai.ProjectSortDir sortDir_ = global::Gooseai.ProjectSortDir.Unspecified;
    /// <summary>
    /// The sort direction based on asset creation time, default is descending
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Gooseai.ProjectSortDir SortDir {
      get { return sortDir_; }
      set {
        sortDir_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as QueryAssetsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(QueryAssetsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (OwnerId != other.OwnerId) return false;
      if (Since != other.Since) return false;
      if (Until != other.Until) return false;
      if (Limit != other.Limit) return false;
      if (StartKey != other.StartKey) return false;
      if(!use_.Equals(other.use_)) return false;
      if (SortDir != other.SortDir) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (HasOwnerId) hash ^= OwnerId.GetHashCode();
      if (HasSince) hash ^= Since.GetHashCode();
      if (HasUntil) hash ^= Until.GetHashCode();
      if (HasLimit) hash ^= Limit.GetHashCode();
      if (HasStartKey) hash ^= StartKey.GetHashCode();
      hash ^= use_.GetHashCode();
      if (SortDir != global::Gooseai.ProjectSortDir.Unspecified) hash ^= SortDir.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasOwnerId) {
        output.WriteRawTag(18);
        output.WriteString(OwnerId);
      }
      if (HasSince) {
        output.WriteRawTag(24);
        output.WriteUInt64(Since);
      }
      if (HasUntil) {
        output.WriteRawTag(32);
        output.WriteUInt64(Until);
      }
      if (HasLimit) {
        output.WriteRawTag(40);
        output.WriteUInt64(Limit);
      }
      if (HasStartKey) {
        output.WriteRawTag(50);
        output.WriteString(StartKey);
      }
      use_.WriteTo(output, _repeated_use_codec);
      if (SortDir != global::Gooseai.ProjectSortDir.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) SortDir);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasOwnerId) {
        output.WriteRawTag(18);
        output.WriteString(OwnerId);
      }
      if (HasSince) {
        output.WriteRawTag(24);
        output.WriteUInt64(Since);
      }
      if (HasUntil) {
        output.WriteRawTag(32);
        output.WriteUInt64(Until);
      }
      if (HasLimit) {
        output.WriteRawTag(40);
        output.WriteUInt64(Limit);
      }
      if (HasStartKey) {
        output.WriteRawTag(50);
        output.WriteString(StartKey);
      }
      use_.WriteTo(ref output, _repeated_use_codec);
      if (SortDir != global::Gooseai.ProjectSortDir.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) SortDir);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasOwnerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
      }
      if (HasSince) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Since);
      }
      if (HasUntil) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Until);
      }
      if (HasLimit) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Limit);
      }
      if (HasStartKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartKey);
      }
      size += use_.CalculateSize(_repeated_use_codec);
      if (SortDir != global::Gooseai.ProjectSortDir.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SortDir);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(QueryAssetsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.HasOwnerId) {
        OwnerId = other.OwnerId;
      }
      if (other.HasSince) {
        Since = other.Since;
      }
      if (other.HasUntil) {
        Until = other.Until;
      }
      if (other.HasLimit) {
        Limit = other.Limit;
      }
      if (other.HasStartKey) {
        StartKey = other.StartKey;
      }
      use_.Add(other.use_);
      if (other.SortDir != global::Gooseai.ProjectSortDir.Unspecified) {
        SortDir = other.SortDir;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            OwnerId = input.ReadString();
            break;
          }
          case 24: {
            Since = input.ReadUInt64();
            break;
          }
          case 32: {
            Until = input.ReadUInt64();
            break;
          }
          case 40: {
            Limit = input.ReadUInt64();
            break;
          }
          case 50: {
            StartKey = input.ReadString();
            break;
          }
          case 58:
          case 56: {
            use_.AddEntriesFrom(input, _repeated_use_codec);
            break;
          }
          case 64: {
            SortDir = (global::Gooseai.ProjectSortDir) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            OwnerId = input.ReadString();
            break;
          }
          case 24: {
            Since = input.ReadUInt64();
            break;
          }
          case 32: {
            Until = input.ReadUInt64();
            break;
          }
          case 40: {
            Limit = input.ReadUInt64();
            break;
          }
          case 50: {
            StartKey = input.ReadString();
            break;
          }
          case 58:
          case 56: {
            use_.AddEntriesFrom(ref input, _repeated_use_codec);
            break;
          }
          case 64: {
            SortDir = (global::Gooseai.ProjectSortDir) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class QueryAssetsResponse : pb::IMessage<QueryAssetsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QueryAssetsResponse> _parser = new pb::MessageParser<QueryAssetsResponse>(() => new QueryAssetsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<QueryAssetsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gooseai.ProjectReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QueryAssetsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QueryAssetsResponse(QueryAssetsResponse other) : this() {
      assets_ = other.assets_.Clone();
      lastKey_ = other.lastKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QueryAssetsResponse Clone() {
      return new QueryAssetsResponse(this);
    }

    /// <summary>Field number for the "assets" field.</summary>
    public const int AssetsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Gooseai.ProjectAsset> _repeated_assets_codec
        = pb::FieldCodec.ForMessage(10, global::Gooseai.ProjectAsset.Parser);
    private readonly pbc::RepeatedField<global::Gooseai.ProjectAsset> assets_ = new pbc::RepeatedField<global::Gooseai.ProjectAsset>();
    /// <summary>
    /// The assets returned by the query
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Gooseai.ProjectAsset> Assets {
      get { return assets_; }
    }

    /// <summary>Field number for the "last_key" field.</summary>
    public const int LastKeyFieldNumber = 2;
    private string lastKey_;
    /// <summary>
    /// The last asset key returned when the results were limited, unset when not limited
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LastKey {
      get { return lastKey_ ?? ""; }
      set {
        lastKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "last_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLastKey {
      get { return lastKey_ != null; }
    }
    /// <summary>Clears the value of the "last_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLastKey() {
      lastKey_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as QueryAssetsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(QueryAssetsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!assets_.Equals(other.assets_)) return false;
      if (LastKey != other.LastKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= assets_.GetHashCode();
      if (HasLastKey) hash ^= LastKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      assets_.WriteTo(output, _repeated_assets_codec);
      if (HasLastKey) {
        output.WriteRawTag(18);
        output.WriteString(LastKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      assets_.WriteTo(ref output, _repeated_assets_codec);
      if (HasLastKey) {
        output.WriteRawTag(18);
        output.WriteString(LastKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += assets_.CalculateSize(_repeated_assets_codec);
      if (HasLastKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(QueryAssetsResponse other) {
      if (other == null) {
        return;
      }
      assets_.Add(other.assets_);
      if (other.HasLastKey) {
        LastKey = other.LastKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            assets_.AddEntriesFrom(input, _repeated_assets_codec);
            break;
          }
          case 18: {
            LastKey = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            assets_.AddEntriesFrom(ref input, _repeated_assets_codec);
            break;
          }
          case 18: {
            LastKey = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code

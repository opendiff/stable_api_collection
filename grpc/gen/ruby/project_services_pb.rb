# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: project.proto for package 'gooseai'

require 'grpc'
require 'project_pb'

module Gooseai
  module ProjectService
    #
    # gRPC services
    #
    class Service

      include ::GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'gooseai.ProjectService'

      # Create a new project if it does not exist
      rpc :Create, ::Gooseai::CreateProjectRequest, ::Gooseai::Project
      # Update an existing project
      rpc :Update, ::Gooseai::UpdateProjectRequest, ::Gooseai::Project
      # List all the projects for an organization
      rpc :List, ::Gooseai::ListProjectRequest, stream(::Gooseai::Project)
      # Get a project
      rpc :Get, ::Gooseai::GetProjectRequest, ::Gooseai::Project
      # Delete a project
      rpc :Delete, ::Gooseai::DeleteProjectRequest, ::Gooseai::Project
      # Query the assets of a project, with additional filtering
      rpc :QueryAssets, ::Gooseai::QueryAssetsRequest, ::Gooseai::QueryAssetsResponse
    end

    Stub = Service.rpc_stub_class
  end
end

//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: tensors.proto

package tensors;

@kotlin.jvm.JvmName("-initializetensor")
public inline fun tensor(block: tensors.TensorKt.Dsl.() -> kotlin.Unit): tensors.Tensors.Tensor =
  tensors.TensorKt.Dsl._create(tensors.Tensors.Tensor.newBuilder()).apply { block() }._build()
public object TensorKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: tensors.Tensors.Tensor.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: tensors.Tensors.Tensor.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): tensors.Tensors.Tensor = _builder.build()

    /**
     * <code>.tensors.Dtype dtype = 1 [json_name = "dtype"];</code>
     */
    public var dtype: tensors.Tensors.Dtype
      @JvmName("getDtype")
      get() = _builder.getDtype()
      @JvmName("setDtype")
      set(value) {
        _builder.setDtype(value)
      }
    /**
     * <code>.tensors.Dtype dtype = 1 [json_name = "dtype"];</code>
     */
    public fun clearDtype() {
      _builder.clearDtype()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ShapeProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated int64 shape = 2 [json_name = "shape"];</code>
     */
     public val shape: com.google.protobuf.kotlin.DslList<kotlin.Long, ShapeProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getShapeList()
      )
    /**
     * <code>repeated int64 shape = 2 [json_name = "shape"];</code>
     * @param value The shape to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addShape")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Long, ShapeProxy>.add(value: kotlin.Long) {
      _builder.addShape(value)
    }/**
     * <code>repeated int64 shape = 2 [json_name = "shape"];</code>
     * @param value The shape to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignShape")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, ShapeProxy>.plusAssign(value: kotlin.Long) {
      add(value)
    }/**
     * <code>repeated int64 shape = 2 [json_name = "shape"];</code>
     * @param values The shape to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllShape")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Long, ShapeProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Long>) {
      _builder.addAllShape(values)
    }/**
     * <code>repeated int64 shape = 2 [json_name = "shape"];</code>
     * @param values The shape to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllShape")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, ShapeProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Long>) {
      addAll(values)
    }/**
     * <code>repeated int64 shape = 2 [json_name = "shape"];</code>
     * @param index The index to set the value at.
     * @param value The shape to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setShape")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, ShapeProxy>.set(index: kotlin.Int, value: kotlin.Long) {
      _builder.setShape(index, value)
    }/**
     * <code>repeated int64 shape = 2 [json_name = "shape"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearShape")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Long, ShapeProxy>.clear() {
      _builder.clearShape()
    }
    /**
     * <code>bytes data = 3 [json_name = "data"];</code>
     */
    public var data: com.google.protobuf.ByteString
      @JvmName("getData")
      get() = _builder.getData()
      @JvmName("setData")
      set(value) {
        _builder.setData(value)
      }
    /**
     * <code>bytes data = 3 [json_name = "data"];</code>
     */
    public fun clearData() {
      _builder.clearData()
    }

    /**
     * <code>optional .tensors.AttributeType attr_type = 4 [json_name = "attrType"];</code>
     */
    public var attrType: tensors.Tensors.AttributeType
      @JvmName("getAttrType")
      get() = _builder.getAttrType()
      @JvmName("setAttrType")
      set(value) {
        _builder.setAttrType(value)
      }
    /**
     * <code>optional .tensors.AttributeType attr_type = 4 [json_name = "attrType"];</code>
     */
    public fun clearAttrType() {
      _builder.clearAttrType()
    }
    /**
     * <code>optional .tensors.AttributeType attr_type = 4 [json_name = "attrType"];</code>
     * @return Whether the attrType field is set.
     */
    public fun hasAttrType(): kotlin.Boolean {
      return _builder.hasAttrType()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun tensors.Tensors.Tensor.copy(block: tensors.TensorKt.Dsl.() -> kotlin.Unit): tensors.Tensors.Tensor =
  tensors.TensorKt.Dsl._create(this.toBuilder()).apply { block() }._build()


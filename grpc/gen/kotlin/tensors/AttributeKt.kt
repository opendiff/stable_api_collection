//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: tensors.proto

package tensors;

@kotlin.jvm.JvmName("-initializeattribute")
public inline fun attribute(block: tensors.AttributeKt.Dsl.() -> kotlin.Unit): tensors.Tensors.Attribute =
  tensors.AttributeKt.Dsl._create(tensors.Tensors.Attribute.newBuilder()).apply { block() }._build()
public object AttributeKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: tensors.Tensors.Attribute.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: tensors.Tensors.Attribute.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): tensors.Tensors.Attribute = _builder.build()

    /**
     * <code>string name = 1 [json_name = "name"];</code>
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <code>string name = 1 [json_name = "name"];</code>
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * <code>.tensors.Module module = 3 [json_name = "module"];</code>
     */
    public var module: tensors.Tensors.Module
      @JvmName("getModule")
      get() = _builder.getModule()
      @JvmName("setModule")
      set(value) {
        _builder.setModule(value)
      }
    /**
     * <code>.tensors.Module module = 3 [json_name = "module"];</code>
     */
    public fun clearModule() {
      _builder.clearModule()
    }
    /**
     * <code>.tensors.Module module = 3 [json_name = "module"];</code>
     * @return Whether the module field is set.
     */
    public fun hasModule(): kotlin.Boolean {
      return _builder.hasModule()
    }

    /**
     * <code>.tensors.Tensor tensor = 4 [json_name = "tensor"];</code>
     */
    public var tensor: tensors.Tensors.Tensor
      @JvmName("getTensor")
      get() = _builder.getTensor()
      @JvmName("setTensor")
      set(value) {
        _builder.setTensor(value)
      }
    /**
     * <code>.tensors.Tensor tensor = 4 [json_name = "tensor"];</code>
     */
    public fun clearTensor() {
      _builder.clearTensor()
    }
    /**
     * <code>.tensors.Tensor tensor = 4 [json_name = "tensor"];</code>
     * @return Whether the tensor field is set.
     */
    public fun hasTensor(): kotlin.Boolean {
      return _builder.hasTensor()
    }

    /**
     * <code>string string = 5 [json_name = "string"];</code>
     */
    public var string: kotlin.String
      @JvmName("getString")
      get() = _builder.getString()
      @JvmName("setString")
      set(value) {
        _builder.setString(value)
      }
    /**
     * <code>string string = 5 [json_name = "string"];</code>
     */
    public fun clearString() {
      _builder.clearString()
    }
    /**
     * <code>string string = 5 [json_name = "string"];</code>
     * @return Whether the string field is set.
     */
    public fun hasString(): kotlin.Boolean {
      return _builder.hasString()
    }

    /**
     * <code>int64 int64 = 6 [json_name = "int64"];</code>
     */
    public var int64: kotlin.Long
      @JvmName("getInt64")
      get() = _builder.getInt64()
      @JvmName("setInt64")
      set(value) {
        _builder.setInt64(value)
      }
    /**
     * <code>int64 int64 = 6 [json_name = "int64"];</code>
     */
    public fun clearInt64() {
      _builder.clearInt64()
    }
    /**
     * <code>int64 int64 = 6 [json_name = "int64"];</code>
     * @return Whether the int64 field is set.
     */
    public fun hasInt64(): kotlin.Boolean {
      return _builder.hasInt64()
    }

    /**
     * <code>float float = 7 [json_name = "float"];</code>
     */
    public var float: kotlin.Float
      @JvmName("getFloat")
      get() = _builder.getFloat()
      @JvmName("setFloat")
      set(value) {
        _builder.setFloat(value)
      }
    /**
     * <code>float float = 7 [json_name = "float"];</code>
     */
    public fun clearFloat() {
      _builder.clearFloat()
    }
    /**
     * <code>float float = 7 [json_name = "float"];</code>
     * @return Whether the float field is set.
     */
    public fun hasFloat(): kotlin.Boolean {
      return _builder.hasFloat()
    }

    /**
     * <code>bool bool = 8 [json_name = "bool"];</code>
     */
    public var bool: kotlin.Boolean
      @JvmName("getBool")
      get() = _builder.getBool()
      @JvmName("setBool")
      set(value) {
        _builder.setBool(value)
      }
    /**
     * <code>bool bool = 8 [json_name = "bool"];</code>
     */
    public fun clearBool() {
      _builder.clearBool()
    }
    /**
     * <code>bool bool = 8 [json_name = "bool"];</code>
     * @return Whether the bool field is set.
     */
    public fun hasBool(): kotlin.Boolean {
      return _builder.hasBool()
    }
    public val valueCase: tensors.Tensors.Attribute.ValueCase
      @JvmName("getValueCase")
      get() = _builder.getValueCase()

    public fun clearValue() {
      _builder.clearValue()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun tensors.Tensors.Attribute.copy(block: tensors.AttributeKt.Dsl.() -> kotlin.Unit): tensors.Tensors.Attribute =
  tensors.AttributeKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val tensors.Tensors.AttributeOrBuilder.moduleOrNull: tensors.Tensors.Module?
  get() = if (hasModule()) getModule() else null

public val tensors.Tensors.AttributeOrBuilder.tensorOrNull: tensors.Tensors.Tensor?
  get() = if (hasTensor()) getTensor() else null


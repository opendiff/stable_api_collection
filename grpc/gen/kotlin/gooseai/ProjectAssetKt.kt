//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: project.proto

package gooseai;

@kotlin.jvm.JvmName("-initializeprojectAsset")
public inline fun projectAsset(block: gooseai.ProjectAssetKt.Dsl.() -> kotlin.Unit): gooseai.ProjectOuterClass.ProjectAsset =
  gooseai.ProjectAssetKt.Dsl._create(gooseai.ProjectOuterClass.ProjectAsset.newBuilder()).apply { block() }._build()
public object ProjectAssetKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: gooseai.ProjectOuterClass.ProjectAsset.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: gooseai.ProjectOuterClass.ProjectAsset.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): gooseai.ProjectOuterClass.ProjectAsset = _builder.build()

    /**
     * <pre>
     * ID of the asset, UUIDv4
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     */
    public var id: kotlin.String
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <pre>
     * ID of the asset, UUIDv4
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * <pre>
     * The URI to the asset
     * </pre>
     *
     * <code>string uri = 2 [json_name = "uri"];</code>
     */
    public var uri: kotlin.String
      @JvmName("getUri")
      get() = _builder.getUri()
      @JvmName("setUri")
      set(value) {
        _builder.setUri(value)
      }
    /**
     * <pre>
     * The URI to the asset
     * </pre>
     *
     * <code>string uri = 2 [json_name = "uri"];</code>
     */
    public fun clearUri() {
      _builder.clearUri()
    }

    /**
     * <pre>
     * The use of the asset with respect to the project
     * </pre>
     *
     * <code>.gooseai.ProjectAssetUse use = 3 [json_name = "use"];</code>
     */
    public var use: gooseai.ProjectOuterClass.ProjectAssetUse
      @JvmName("getUse")
      get() = _builder.getUse()
      @JvmName("setUse")
      set(value) {
        _builder.setUse(value)
      }
    /**
     * <pre>
     * The use of the asset with respect to the project
     * </pre>
     *
     * <code>.gooseai.ProjectAssetUse use = 3 [json_name = "use"];</code>
     */
    public fun clearUse() {
      _builder.clearUse()
    }

    /**
     * <pre>
     * The name of the asset
     * </pre>
     *
     * <code>string name = 4 [json_name = "name"];</code>
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <pre>
     * The name of the asset
     * </pre>
     *
     * <code>string name = 4 [json_name = "name"];</code>
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * <pre>
     * The asset size in bytes
     * </pre>
     *
     * <code>uint64 size = 5 [json_name = "size"];</code>
     */
    public var size: kotlin.Long
      @JvmName("getSize")
      get() = _builder.getSize()
      @JvmName("setSize")
      set(value) {
        _builder.setSize(value)
      }
    /**
     * <pre>
     * The asset size in bytes
     * </pre>
     *
     * <code>uint64 size = 5 [json_name = "size"];</code>
     */
    public fun clearSize() {
      _builder.clearSize()
    }

    /**
     * <pre>
     * Time of asset creation (UTC seconds epoch)
     * </pre>
     *
     * <code>uint64 created_at = 6 [json_name = "createdAt"];</code>
     */
    public var createdAt: kotlin.Long
      @JvmName("getCreatedAt")
      get() = _builder.getCreatedAt()
      @JvmName("setCreatedAt")
      set(value) {
        _builder.setCreatedAt(value)
      }
    /**
     * <pre>
     * Time of asset creation (UTC seconds epoch)
     * </pre>
     *
     * <code>uint64 created_at = 6 [json_name = "createdAt"];</code>
     */
    public fun clearCreatedAt() {
      _builder.clearCreatedAt()
    }

    /**
     * <pre>
     * Time of last asset update (UTC seconds epoch)
     * </pre>
     *
     * <code>uint64 updated_at = 7 [json_name = "updatedAt"];</code>
     */
    public var updatedAt: kotlin.Long
      @JvmName("getUpdatedAt")
      get() = _builder.getUpdatedAt()
      @JvmName("setUpdatedAt")
      set(value) {
        _builder.setUpdatedAt(value)
      }
    /**
     * <pre>
     * Time of last asset update (UTC seconds epoch)
     * </pre>
     *
     * <code>uint64 updated_at = 7 [json_name = "updatedAt"];</code>
     */
    public fun clearUpdatedAt() {
      _builder.clearUpdatedAt()
    }

    /**
     * <pre>
     * The request object that is associated with the artifact
     * </pre>
     *
     * <code>.gooseai.Request request = 8 [json_name = "request"];</code>
     */
    public var request: gooseai.Generation.Request
      @JvmName("getRequest")
      get() = _builder.getRequest()
      @JvmName("setRequest")
      set(value) {
        _builder.setRequest(value)
      }
    /**
     * <pre>
     * The request object that is associated with the artifact
     * </pre>
     *
     * <code>.gooseai.Request request = 8 [json_name = "request"];</code>
     */
    public fun clearRequest() {
      _builder.clearRequest()
    }
    /**
     * <pre>
     * The request object that is associated with the artifact
     * </pre>
     *
     * <code>.gooseai.Request request = 8 [json_name = "request"];</code>
     * @return Whether the request field is set.
     */
    public fun hasRequest(): kotlin.Boolean {
      return _builder.hasRequest()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun gooseai.ProjectOuterClass.ProjectAsset.copy(block: gooseai.ProjectAssetKt.Dsl.() -> kotlin.Unit): gooseai.ProjectOuterClass.ProjectAsset =
  gooseai.ProjectAssetKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val gooseai.ProjectOuterClass.ProjectAssetOrBuilder.requestOrNull: gooseai.Generation.Request?
  get() = if (hasRequest()) getRequest() else null


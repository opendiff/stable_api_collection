//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: project.proto

package gooseai;

@kotlin.jvm.JvmName("-initializequeryAssetsRequest")
public inline fun queryAssetsRequest(block: gooseai.QueryAssetsRequestKt.Dsl.() -> kotlin.Unit): gooseai.ProjectOuterClass.QueryAssetsRequest =
  gooseai.QueryAssetsRequestKt.Dsl._create(gooseai.ProjectOuterClass.QueryAssetsRequest.newBuilder()).apply { block() }._build()
public object QueryAssetsRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: gooseai.ProjectOuterClass.QueryAssetsRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: gooseai.ProjectOuterClass.QueryAssetsRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): gooseai.ProjectOuterClass.QueryAssetsRequest = _builder.build()

    /**
     * <pre>
     * ID of the project to request, UUIDv4, empty string uses default project
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     */
    public var id: kotlin.String
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <pre>
     * ID of the project to request, UUIDv4, empty string uses default project
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * <pre>
     * The ID of the organization owning the assets, unset for default org for user
     * </pre>
     *
     * <code>optional string owner_id = 2 [json_name = "ownerId"];</code>
     */
    public var ownerId: kotlin.String
      @JvmName("getOwnerId")
      get() = _builder.getOwnerId()
      @JvmName("setOwnerId")
      set(value) {
        _builder.setOwnerId(value)
      }
    /**
     * <pre>
     * The ID of the organization owning the assets, unset for default org for user
     * </pre>
     *
     * <code>optional string owner_id = 2 [json_name = "ownerId"];</code>
     */
    public fun clearOwnerId() {
      _builder.clearOwnerId()
    }
    /**
     * <pre>
     * The ID of the organization owning the assets, unset for default org for user
     * </pre>
     *
     * <code>optional string owner_id = 2 [json_name = "ownerId"];</code>
     * @return Whether the ownerId field is set.
     */
    public fun hasOwnerId(): kotlin.Boolean {
      return _builder.hasOwnerId()
    }

    /**
     * <pre>
     * The time (UTC seconds epoch) to start listing assets from, unset for no restriction
     * </pre>
     *
     * <code>optional uint64 since = 3 [json_name = "since"];</code>
     */
    public var since: kotlin.Long
      @JvmName("getSince")
      get() = _builder.getSince()
      @JvmName("setSince")
      set(value) {
        _builder.setSince(value)
      }
    /**
     * <pre>
     * The time (UTC seconds epoch) to start listing assets from, unset for no restriction
     * </pre>
     *
     * <code>optional uint64 since = 3 [json_name = "since"];</code>
     */
    public fun clearSince() {
      _builder.clearSince()
    }
    /**
     * <pre>
     * The time (UTC seconds epoch) to start listing assets from, unset for no restriction
     * </pre>
     *
     * <code>optional uint64 since = 3 [json_name = "since"];</code>
     * @return Whether the since field is set.
     */
    public fun hasSince(): kotlin.Boolean {
      return _builder.hasSince()
    }

    /**
     * <pre>
     * The time (UTC seconds epoch) to stop listing assets at, unset for no restriction
     * </pre>
     *
     * <code>optional uint64 until = 4 [json_name = "until"];</code>
     */
    public var until: kotlin.Long
      @JvmName("getUntil")
      get() = _builder.getUntil()
      @JvmName("setUntil")
      set(value) {
        _builder.setUntil(value)
      }
    /**
     * <pre>
     * The time (UTC seconds epoch) to stop listing assets at, unset for no restriction
     * </pre>
     *
     * <code>optional uint64 until = 4 [json_name = "until"];</code>
     */
    public fun clearUntil() {
      _builder.clearUntil()
    }
    /**
     * <pre>
     * The time (UTC seconds epoch) to stop listing assets at, unset for no restriction
     * </pre>
     *
     * <code>optional uint64 until = 4 [json_name = "until"];</code>
     * @return Whether the until field is set.
     */
    public fun hasUntil(): kotlin.Boolean {
      return _builder.hasUntil()
    }

    /**
     * <pre>
     * The maximum number of assets to return, unset for no limit
     * </pre>
     *
     * <code>optional uint64 limit = 5 [json_name = "limit"];</code>
     */
    public var limit: kotlin.Long
      @JvmName("getLimit")
      get() = _builder.getLimit()
      @JvmName("setLimit")
      set(value) {
        _builder.setLimit(value)
      }
    /**
     * <pre>
     * The maximum number of assets to return, unset for no limit
     * </pre>
     *
     * <code>optional uint64 limit = 5 [json_name = "limit"];</code>
     */
    public fun clearLimit() {
      _builder.clearLimit()
    }
    /**
     * <pre>
     * The maximum number of assets to return, unset for no limit
     * </pre>
     *
     * <code>optional uint64 limit = 5 [json_name = "limit"];</code>
     * @return Whether the limit field is set.
     */
    public fun hasLimit(): kotlin.Boolean {
      return _builder.hasLimit()
    }

    /**
     * <pre>
     * The key to start from, used to paginate results, unset for no offset
     * </pre>
     *
     * <code>optional string start_key = 6 [json_name = "startKey"];</code>
     */
    public var startKey: kotlin.String
      @JvmName("getStartKey")
      get() = _builder.getStartKey()
      @JvmName("setStartKey")
      set(value) {
        _builder.setStartKey(value)
      }
    /**
     * <pre>
     * The key to start from, used to paginate results, unset for no offset
     * </pre>
     *
     * <code>optional string start_key = 6 [json_name = "startKey"];</code>
     */
    public fun clearStartKey() {
      _builder.clearStartKey()
    }
    /**
     * <pre>
     * The key to start from, used to paginate results, unset for no offset
     * </pre>
     *
     * <code>optional string start_key = 6 [json_name = "startKey"];</code>
     * @return Whether the startKey field is set.
     */
    public fun hasStartKey(): kotlin.Boolean {
      return _builder.hasStartKey()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class UseProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * The asset usage to filter the assets returned, empty for no filter
     * </pre>
     *
     * <code>repeated .gooseai.ProjectAssetUse use = 7 [json_name = "use"];</code>
     */
    public val use: com.google.protobuf.kotlin.DslList<gooseai.ProjectOuterClass.ProjectAssetUse, UseProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getUseList()
      )
    /**
     * <pre>
     * The asset usage to filter the assets returned, empty for no filter
     * </pre>
     *
     * <code>repeated .gooseai.ProjectAssetUse use = 7 [json_name = "use"];</code>
     * @param value The use to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addUse")
    public fun com.google.protobuf.kotlin.DslList<gooseai.ProjectOuterClass.ProjectAssetUse, UseProxy>.add(value: gooseai.ProjectOuterClass.ProjectAssetUse) {
      _builder.addUse(value)
    }/**
     * <pre>
     * The asset usage to filter the assets returned, empty for no filter
     * </pre>
     *
     * <code>repeated .gooseai.ProjectAssetUse use = 7 [json_name = "use"];</code>
     * @param value The use to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignUse")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<gooseai.ProjectOuterClass.ProjectAssetUse, UseProxy>.plusAssign(value: gooseai.ProjectOuterClass.ProjectAssetUse) {
      add(value)
    }/**
     * <pre>
     * The asset usage to filter the assets returned, empty for no filter
     * </pre>
     *
     * <code>repeated .gooseai.ProjectAssetUse use = 7 [json_name = "use"];</code>
     * @param values The use to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllUse")
    public fun com.google.protobuf.kotlin.DslList<gooseai.ProjectOuterClass.ProjectAssetUse, UseProxy>.addAll(values: kotlin.collections.Iterable<gooseai.ProjectOuterClass.ProjectAssetUse>) {
      _builder.addAllUse(values)
    }/**
     * <pre>
     * The asset usage to filter the assets returned, empty for no filter
     * </pre>
     *
     * <code>repeated .gooseai.ProjectAssetUse use = 7 [json_name = "use"];</code>
     * @param values The use to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllUse")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<gooseai.ProjectOuterClass.ProjectAssetUse, UseProxy>.plusAssign(values: kotlin.collections.Iterable<gooseai.ProjectOuterClass.ProjectAssetUse>) {
      addAll(values)
    }/**
     * <pre>
     * The asset usage to filter the assets returned, empty for no filter
     * </pre>
     *
     * <code>repeated .gooseai.ProjectAssetUse use = 7 [json_name = "use"];</code>
     * @param index The index to set the value at.
     * @param value The use to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setUse")
    public operator fun com.google.protobuf.kotlin.DslList<gooseai.ProjectOuterClass.ProjectAssetUse, UseProxy>.set(index: kotlin.Int, value: gooseai.ProjectOuterClass.ProjectAssetUse) {
      _builder.setUse(index, value)
    }/**
     * <pre>
     * The asset usage to filter the assets returned, empty for no filter
     * </pre>
     *
     * <code>repeated .gooseai.ProjectAssetUse use = 7 [json_name = "use"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearUse")
    public fun com.google.protobuf.kotlin.DslList<gooseai.ProjectOuterClass.ProjectAssetUse, UseProxy>.clear() {
      _builder.clearUse()
    }
    /**
     * <pre>
     * The sort direction based on asset creation time, default is descending
     * </pre>
     *
     * <code>.gooseai.ProjectSortDir sort_dir = 8 [json_name = "sortDir"];</code>
     */
    public var sortDir: gooseai.ProjectOuterClass.ProjectSortDir
      @JvmName("getSortDir")
      get() = _builder.getSortDir()
      @JvmName("setSortDir")
      set(value) {
        _builder.setSortDir(value)
      }
    /**
     * <pre>
     * The sort direction based on asset creation time, default is descending
     * </pre>
     *
     * <code>.gooseai.ProjectSortDir sort_dir = 8 [json_name = "sortDir"];</code>
     */
    public fun clearSortDir() {
      _builder.clearSortDir()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun gooseai.ProjectOuterClass.QueryAssetsRequest.copy(block: gooseai.QueryAssetsRequestKt.Dsl.() -> kotlin.Unit): gooseai.ProjectOuterClass.QueryAssetsRequest =
  gooseai.QueryAssetsRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()


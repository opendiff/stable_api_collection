//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: generation.proto

package gooseai;

@kotlin.jvm.JvmName("-initializeassetParameters")
public inline fun assetParameters(block: gooseai.AssetParametersKt.Dsl.() -> kotlin.Unit): gooseai.Generation.AssetParameters =
  gooseai.AssetParametersKt.Dsl._create(gooseai.Generation.AssetParameters.newBuilder()).apply { block() }._build()
public object AssetParametersKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: gooseai.Generation.AssetParameters.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: gooseai.Generation.AssetParameters.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): gooseai.Generation.AssetParameters = _builder.build()

    /**
     * <code>.gooseai.AssetAction action = 1 [json_name = "action"];</code>
     */
    public var action: gooseai.Generation.AssetAction
      @JvmName("getAction")
      get() = _builder.getAction()
      @JvmName("setAction")
      set(value) {
        _builder.setAction(value)
      }
    /**
     * <code>.gooseai.AssetAction action = 1 [json_name = "action"];</code>
     */
    public fun clearAction() {
      _builder.clearAction()
    }

    /**
     * <code>string project_id = 2 [json_name = "projectId"];</code>
     */
    public var projectId: kotlin.String
      @JvmName("getProjectId")
      get() = _builder.getProjectId()
      @JvmName("setProjectId")
      set(value) {
        _builder.setProjectId(value)
      }
    /**
     * <code>string project_id = 2 [json_name = "projectId"];</code>
     */
    public fun clearProjectId() {
      _builder.clearProjectId()
    }

    /**
     * <code>.gooseai.AssetUse use = 3 [json_name = "use"];</code>
     */
    public var use: gooseai.Generation.AssetUse
      @JvmName("getUse")
      get() = _builder.getUse()
      @JvmName("setUse")
      set(value) {
        _builder.setUse(value)
      }
    /**
     * <code>.gooseai.AssetUse use = 3 [json_name = "use"];</code>
     */
    public fun clearUse() {
      _builder.clearUse()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun gooseai.Generation.AssetParameters.copy(block: gooseai.AssetParametersKt.Dsl.() -> kotlin.Unit): gooseai.Generation.AssetParameters =
  gooseai.AssetParametersKt.Dsl._create(this.toBuilder()).apply { block() }._build()


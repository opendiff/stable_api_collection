//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: dashboard.proto

package gooseai;

@kotlin.jvm.JvmName("-initializetotalMetricsData")
public inline fun totalMetricsData(block: gooseai.TotalMetricsDataKt.Dsl.() -> kotlin.Unit): gooseai.Dashboard.TotalMetricsData =
  gooseai.TotalMetricsDataKt.Dsl._create(gooseai.Dashboard.TotalMetricsData.newBuilder()).apply { block() }._build()
public object TotalMetricsDataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: gooseai.Dashboard.TotalMetricsData.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: gooseai.Dashboard.TotalMetricsData.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): gooseai.Dashboard.TotalMetricsData = _builder.build()

    /**
     * <code>.gooseai.CostTotal input_total = 1 [json_name = "inputTotal"];</code>
     */
    public var inputTotal: gooseai.Dashboard.CostTotal
      @JvmName("getInputTotal")
      get() = _builder.getInputTotal()
      @JvmName("setInputTotal")
      set(value) {
        _builder.setInputTotal(value)
      }
    /**
     * <code>.gooseai.CostTotal input_total = 1 [json_name = "inputTotal"];</code>
     */
    public fun clearInputTotal() {
      _builder.clearInputTotal()
    }
    /**
     * <code>.gooseai.CostTotal input_total = 1 [json_name = "inputTotal"];</code>
     * @return Whether the inputTotal field is set.
     */
    public fun hasInputTotal(): kotlin.Boolean {
      return _builder.hasInputTotal()
    }

    /**
     * <code>.gooseai.CostTotal output_total = 2 [json_name = "outputTotal"];</code>
     */
    public var outputTotal: gooseai.Dashboard.CostTotal
      @JvmName("getOutputTotal")
      get() = _builder.getOutputTotal()
      @JvmName("setOutputTotal")
      set(value) {
        _builder.setOutputTotal(value)
      }
    /**
     * <code>.gooseai.CostTotal output_total = 2 [json_name = "outputTotal"];</code>
     */
    public fun clearOutputTotal() {
      _builder.clearOutputTotal()
    }
    /**
     * <code>.gooseai.CostTotal output_total = 2 [json_name = "outputTotal"];</code>
     * @return Whether the outputTotal field is set.
     */
    public fun hasOutputTotal(): kotlin.Boolean {
      return _builder.hasOutputTotal()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun gooseai.Dashboard.TotalMetricsData.copy(block: gooseai.TotalMetricsDataKt.Dsl.() -> kotlin.Unit): gooseai.Dashboard.TotalMetricsData =
  gooseai.TotalMetricsDataKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val gooseai.Dashboard.TotalMetricsDataOrBuilder.inputTotalOrNull: gooseai.Dashboard.CostTotal?
  get() = if (hasInputTotal()) getInputTotal() else null

public val gooseai.Dashboard.TotalMetricsDataOrBuilder.outputTotalOrNull: gooseai.Dashboard.CostTotal?
  get() = if (hasOutputTotal()) getOutputTotal() else null


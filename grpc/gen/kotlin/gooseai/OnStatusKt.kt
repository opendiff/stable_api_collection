//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: generation.proto

package gooseai;

@kotlin.jvm.JvmName("-initializeonStatus")
public inline fun onStatus(block: gooseai.OnStatusKt.Dsl.() -> kotlin.Unit): gooseai.Generation.OnStatus =
  gooseai.OnStatusKt.Dsl._create(gooseai.Generation.OnStatus.newBuilder()).apply { block() }._build()
public object OnStatusKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: gooseai.Generation.OnStatus.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: gooseai.Generation.OnStatus.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): gooseai.Generation.OnStatus = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ReasonProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .gooseai.FinishReason reason = 1 [json_name = "reason"];</code>
     */
    public val reason: com.google.protobuf.kotlin.DslList<gooseai.Generation.FinishReason, ReasonProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getReasonList()
      )
    /**
     * <code>repeated .gooseai.FinishReason reason = 1 [json_name = "reason"];</code>
     * @param value The reason to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addReason")
    public fun com.google.protobuf.kotlin.DslList<gooseai.Generation.FinishReason, ReasonProxy>.add(value: gooseai.Generation.FinishReason) {
      _builder.addReason(value)
    }/**
     * <code>repeated .gooseai.FinishReason reason = 1 [json_name = "reason"];</code>
     * @param value The reason to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignReason")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<gooseai.Generation.FinishReason, ReasonProxy>.plusAssign(value: gooseai.Generation.FinishReason) {
      add(value)
    }/**
     * <code>repeated .gooseai.FinishReason reason = 1 [json_name = "reason"];</code>
     * @param values The reason to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllReason")
    public fun com.google.protobuf.kotlin.DslList<gooseai.Generation.FinishReason, ReasonProxy>.addAll(values: kotlin.collections.Iterable<gooseai.Generation.FinishReason>) {
      _builder.addAllReason(values)
    }/**
     * <code>repeated .gooseai.FinishReason reason = 1 [json_name = "reason"];</code>
     * @param values The reason to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllReason")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<gooseai.Generation.FinishReason, ReasonProxy>.plusAssign(values: kotlin.collections.Iterable<gooseai.Generation.FinishReason>) {
      addAll(values)
    }/**
     * <code>repeated .gooseai.FinishReason reason = 1 [json_name = "reason"];</code>
     * @param index The index to set the value at.
     * @param value The reason to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setReason")
    public operator fun com.google.protobuf.kotlin.DslList<gooseai.Generation.FinishReason, ReasonProxy>.set(index: kotlin.Int, value: gooseai.Generation.FinishReason) {
      _builder.setReason(index, value)
    }/**
     * <code>repeated .gooseai.FinishReason reason = 1 [json_name = "reason"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearReason")
    public fun com.google.protobuf.kotlin.DslList<gooseai.Generation.FinishReason, ReasonProxy>.clear() {
      _builder.clearReason()
    }
    /**
     * <code>optional string target = 2 [json_name = "target"];</code>
     */
    public var target: kotlin.String
      @JvmName("getTarget")
      get() = _builder.getTarget()
      @JvmName("setTarget")
      set(value) {
        _builder.setTarget(value)
      }
    /**
     * <code>optional string target = 2 [json_name = "target"];</code>
     */
    public fun clearTarget() {
      _builder.clearTarget()
    }
    /**
     * <code>optional string target = 2 [json_name = "target"];</code>
     * @return Whether the target field is set.
     */
    public fun hasTarget(): kotlin.Boolean {
      return _builder.hasTarget()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ActionProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .gooseai.StageAction action = 3 [json_name = "action"];</code>
     */
    public val action: com.google.protobuf.kotlin.DslList<gooseai.Generation.StageAction, ActionProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getActionList()
      )
    /**
     * <code>repeated .gooseai.StageAction action = 3 [json_name = "action"];</code>
     * @param value The action to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAction")
    public fun com.google.protobuf.kotlin.DslList<gooseai.Generation.StageAction, ActionProxy>.add(value: gooseai.Generation.StageAction) {
      _builder.addAction(value)
    }/**
     * <code>repeated .gooseai.StageAction action = 3 [json_name = "action"];</code>
     * @param value The action to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAction")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<gooseai.Generation.StageAction, ActionProxy>.plusAssign(value: gooseai.Generation.StageAction) {
      add(value)
    }/**
     * <code>repeated .gooseai.StageAction action = 3 [json_name = "action"];</code>
     * @param values The action to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllAction")
    public fun com.google.protobuf.kotlin.DslList<gooseai.Generation.StageAction, ActionProxy>.addAll(values: kotlin.collections.Iterable<gooseai.Generation.StageAction>) {
      _builder.addAllAction(values)
    }/**
     * <code>repeated .gooseai.StageAction action = 3 [json_name = "action"];</code>
     * @param values The action to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllAction")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<gooseai.Generation.StageAction, ActionProxy>.plusAssign(values: kotlin.collections.Iterable<gooseai.Generation.StageAction>) {
      addAll(values)
    }/**
     * <code>repeated .gooseai.StageAction action = 3 [json_name = "action"];</code>
     * @param index The index to set the value at.
     * @param value The action to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setAction")
    public operator fun com.google.protobuf.kotlin.DslList<gooseai.Generation.StageAction, ActionProxy>.set(index: kotlin.Int, value: gooseai.Generation.StageAction) {
      _builder.setAction(index, value)
    }/**
     * <code>repeated .gooseai.StageAction action = 3 [json_name = "action"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearAction")
    public fun com.google.protobuf.kotlin.DslList<gooseai.Generation.StageAction, ActionProxy>.clear() {
      _builder.clearAction()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun gooseai.Generation.OnStatus.copy(block: gooseai.OnStatusKt.Dsl.() -> kotlin.Unit): gooseai.Generation.OnStatus =
  gooseai.OnStatusKt.Dsl._create(this.toBuilder()).apply { block() }._build()


//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: generation.proto

package gooseai;

@kotlin.jvm.JvmName("-initializeanswerMeta")
public inline fun answerMeta(block: gooseai.AnswerMetaKt.Dsl.() -> kotlin.Unit): gooseai.Generation.AnswerMeta =
  gooseai.AnswerMetaKt.Dsl._create(gooseai.Generation.AnswerMeta.newBuilder()).apply { block() }._build()
public object AnswerMetaKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: gooseai.Generation.AnswerMeta.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: gooseai.Generation.AnswerMeta.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): gooseai.Generation.AnswerMeta = _builder.build()

    /**
     * <code>optional string gpu_id = 1 [json_name = "gpuId"];</code>
     */
    public var gpuId: kotlin.String
      @JvmName("getGpuId")
      get() = _builder.getGpuId()
      @JvmName("setGpuId")
      set(value) {
        _builder.setGpuId(value)
      }
    /**
     * <code>optional string gpu_id = 1 [json_name = "gpuId"];</code>
     */
    public fun clearGpuId() {
      _builder.clearGpuId()
    }
    /**
     * <code>optional string gpu_id = 1 [json_name = "gpuId"];</code>
     * @return Whether the gpuId field is set.
     */
    public fun hasGpuId(): kotlin.Boolean {
      return _builder.hasGpuId()
    }

    /**
     * <code>optional string cpu_id = 2 [json_name = "cpuId"];</code>
     */
    public var cpuId: kotlin.String
      @JvmName("getCpuId")
      get() = _builder.getCpuId()
      @JvmName("setCpuId")
      set(value) {
        _builder.setCpuId(value)
      }
    /**
     * <code>optional string cpu_id = 2 [json_name = "cpuId"];</code>
     */
    public fun clearCpuId() {
      _builder.clearCpuId()
    }
    /**
     * <code>optional string cpu_id = 2 [json_name = "cpuId"];</code>
     * @return Whether the cpuId field is set.
     */
    public fun hasCpuId(): kotlin.Boolean {
      return _builder.hasCpuId()
    }

    /**
     * <code>optional string node_id = 3 [json_name = "nodeId"];</code>
     */
    public var nodeId: kotlin.String
      @JvmName("getNodeId")
      get() = _builder.getNodeId()
      @JvmName("setNodeId")
      set(value) {
        _builder.setNodeId(value)
      }
    /**
     * <code>optional string node_id = 3 [json_name = "nodeId"];</code>
     */
    public fun clearNodeId() {
      _builder.clearNodeId()
    }
    /**
     * <code>optional string node_id = 3 [json_name = "nodeId"];</code>
     * @return Whether the nodeId field is set.
     */
    public fun hasNodeId(): kotlin.Boolean {
      return _builder.hasNodeId()
    }

    /**
     * <code>optional string engine_id = 4 [json_name = "engineId"];</code>
     */
    public var engineId: kotlin.String
      @JvmName("getEngineId")
      get() = _builder.getEngineId()
      @JvmName("setEngineId")
      set(value) {
        _builder.setEngineId(value)
      }
    /**
     * <code>optional string engine_id = 4 [json_name = "engineId"];</code>
     */
    public fun clearEngineId() {
      _builder.clearEngineId()
    }
    /**
     * <code>optional string engine_id = 4 [json_name = "engineId"];</code>
     * @return Whether the engineId field is set.
     */
    public fun hasEngineId(): kotlin.Boolean {
      return _builder.hasEngineId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun gooseai.Generation.AnswerMeta.copy(block: gooseai.AnswerMetaKt.Dsl.() -> kotlin.Unit): gooseai.Generation.AnswerMeta =
  gooseai.AnswerMetaKt.Dsl._create(this.toBuilder()).apply { block() }._build()


//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: dashboard.proto

package gooseai;

@kotlin.jvm.JvmName("-initializeorganizationMember")
public inline fun organizationMember(block: gooseai.OrganizationMemberKt.Dsl.() -> kotlin.Unit): gooseai.Dashboard.OrganizationMember =
  gooseai.OrganizationMemberKt.Dsl._create(gooseai.Dashboard.OrganizationMember.newBuilder()).apply { block() }._build()
public object OrganizationMemberKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: gooseai.Dashboard.OrganizationMember.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: gooseai.Dashboard.OrganizationMember.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): gooseai.Dashboard.OrganizationMember = _builder.build()

    /**
     * <code>.gooseai.Organization organization = 1 [json_name = "organization"];</code>
     */
    public var organization: gooseai.Dashboard.Organization
      @JvmName("getOrganization")
      get() = _builder.getOrganization()
      @JvmName("setOrganization")
      set(value) {
        _builder.setOrganization(value)
      }
    /**
     * <code>.gooseai.Organization organization = 1 [json_name = "organization"];</code>
     */
    public fun clearOrganization() {
      _builder.clearOrganization()
    }
    /**
     * <code>.gooseai.Organization organization = 1 [json_name = "organization"];</code>
     * @return Whether the organization field is set.
     */
    public fun hasOrganization(): kotlin.Boolean {
      return _builder.hasOrganization()
    }

    /**
     * <code>optional .gooseai.User user = 2 [json_name = "user"];</code>
     */
    public var user: gooseai.Dashboard.User
      @JvmName("getUser")
      get() = _builder.getUser()
      @JvmName("setUser")
      set(value) {
        _builder.setUser(value)
      }
    /**
     * <code>optional .gooseai.User user = 2 [json_name = "user"];</code>
     */
    public fun clearUser() {
      _builder.clearUser()
    }
    /**
     * <code>optional .gooseai.User user = 2 [json_name = "user"];</code>
     * @return Whether the user field is set.
     */
    public fun hasUser(): kotlin.Boolean {
      return _builder.hasUser()
    }
    public val OrganizationMemberKt.Dsl.userOrNull: gooseai.Dashboard.User?
      get() = _builder.userOrNull

    /**
     * <code>.gooseai.OrganizationRole role = 3 [json_name = "role"];</code>
     */
    public var role: gooseai.Dashboard.OrganizationRole
      @JvmName("getRole")
      get() = _builder.getRole()
      @JvmName("setRole")
      set(value) {
        _builder.setRole(value)
      }
    /**
     * <code>.gooseai.OrganizationRole role = 3 [json_name = "role"];</code>
     */
    public fun clearRole() {
      _builder.clearRole()
    }

    /**
     * <code>bool is_default = 4 [json_name = "isDefault"];</code>
     */
    public var isDefault: kotlin.Boolean
      @JvmName("getIsDefault")
      get() = _builder.getIsDefault()
      @JvmName("setIsDefault")
      set(value) {
        _builder.setIsDefault(value)
      }
    /**
     * <code>bool is_default = 4 [json_name = "isDefault"];</code>
     */
    public fun clearIsDefault() {
      _builder.clearIsDefault()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun gooseai.Dashboard.OrganizationMember.copy(block: gooseai.OrganizationMemberKt.Dsl.() -> kotlin.Unit): gooseai.Dashboard.OrganizationMember =
  gooseai.OrganizationMemberKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val gooseai.Dashboard.OrganizationMemberOrBuilder.organizationOrNull: gooseai.Dashboard.Organization?
  get() = if (hasOrganization()) getOrganization() else null

public val gooseai.Dashboard.OrganizationMemberOrBuilder.userOrNull: gooseai.Dashboard.User?
  get() = if (hasUser()) getUser() else null


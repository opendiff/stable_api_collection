//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: generation.proto

package gooseai;

@kotlin.jvm.JvmName("-initializerequest")
public inline fun request(block: gooseai.RequestKt.Dsl.() -> kotlin.Unit): gooseai.Generation.Request =
  gooseai.RequestKt.Dsl._create(gooseai.Generation.Request.newBuilder()).apply { block() }._build()
public object RequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: gooseai.Generation.Request.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: gooseai.Generation.Request.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): gooseai.Generation.Request = _builder.build()

    /**
     * <code>string engine_id = 1 [json_name = "engineId"];</code>
     */
    public var engineId: kotlin.String
      @JvmName("getEngineId")
      get() = _builder.getEngineId()
      @JvmName("setEngineId")
      set(value) {
        _builder.setEngineId(value)
      }
    /**
     * <code>string engine_id = 1 [json_name = "engineId"];</code>
     */
    public fun clearEngineId() {
      _builder.clearEngineId()
    }

    /**
     * <code>string request_id = 2 [json_name = "requestId"];</code>
     */
    public var requestId: kotlin.String
      @JvmName("getRequestId")
      get() = _builder.getRequestId()
      @JvmName("setRequestId")
      set(value) {
        _builder.setRequestId(value)
      }
    /**
     * <code>string request_id = 2 [json_name = "requestId"];</code>
     */
    public fun clearRequestId() {
      _builder.clearRequestId()
    }

    /**
     * <code>.gooseai.ArtifactType requested_type = 3 [json_name = "requestedType"];</code>
     */
    public var requestedType: gooseai.Generation.ArtifactType
      @JvmName("getRequestedType")
      get() = _builder.getRequestedType()
      @JvmName("setRequestedType")
      set(value) {
        _builder.setRequestedType(value)
      }
    /**
     * <code>.gooseai.ArtifactType requested_type = 3 [json_name = "requestedType"];</code>
     */
    public fun clearRequestedType() {
      _builder.clearRequestedType()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PromptProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .gooseai.Prompt prompt = 4 [json_name = "prompt"];</code>
     */
     public val prompt: com.google.protobuf.kotlin.DslList<gooseai.Generation.Prompt, PromptProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getPromptList()
      )
    /**
     * <code>repeated .gooseai.Prompt prompt = 4 [json_name = "prompt"];</code>
     * @param value The prompt to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addPrompt")
    public fun com.google.protobuf.kotlin.DslList<gooseai.Generation.Prompt, PromptProxy>.add(value: gooseai.Generation.Prompt) {
      _builder.addPrompt(value)
    }
    /**
     * <code>repeated .gooseai.Prompt prompt = 4 [json_name = "prompt"];</code>
     * @param value The prompt to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignPrompt")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<gooseai.Generation.Prompt, PromptProxy>.plusAssign(value: gooseai.Generation.Prompt) {
      add(value)
    }
    /**
     * <code>repeated .gooseai.Prompt prompt = 4 [json_name = "prompt"];</code>
     * @param values The prompt to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllPrompt")
    public fun com.google.protobuf.kotlin.DslList<gooseai.Generation.Prompt, PromptProxy>.addAll(values: kotlin.collections.Iterable<gooseai.Generation.Prompt>) {
      _builder.addAllPrompt(values)
    }
    /**
     * <code>repeated .gooseai.Prompt prompt = 4 [json_name = "prompt"];</code>
     * @param values The prompt to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllPrompt")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<gooseai.Generation.Prompt, PromptProxy>.plusAssign(values: kotlin.collections.Iterable<gooseai.Generation.Prompt>) {
      addAll(values)
    }
    /**
     * <code>repeated .gooseai.Prompt prompt = 4 [json_name = "prompt"];</code>
     * @param index The index to set the value at.
     * @param value The prompt to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setPrompt")
    public operator fun com.google.protobuf.kotlin.DslList<gooseai.Generation.Prompt, PromptProxy>.set(index: kotlin.Int, value: gooseai.Generation.Prompt) {
      _builder.setPrompt(index, value)
    }
    /**
     * <code>repeated .gooseai.Prompt prompt = 4 [json_name = "prompt"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearPrompt")
    public fun com.google.protobuf.kotlin.DslList<gooseai.Generation.Prompt, PromptProxy>.clear() {
      _builder.clearPrompt()
    }


    /**
     * <code>.gooseai.ImageParameters image = 5 [json_name = "image"];</code>
     */
    public var image: gooseai.Generation.ImageParameters
      @JvmName("getImage")
      get() = _builder.getImage()
      @JvmName("setImage")
      set(value) {
        _builder.setImage(value)
      }
    /**
     * <code>.gooseai.ImageParameters image = 5 [json_name = "image"];</code>
     */
    public fun clearImage() {
      _builder.clearImage()
    }
    /**
     * <code>.gooseai.ImageParameters image = 5 [json_name = "image"];</code>
     * @return Whether the image field is set.
     */
    public fun hasImage(): kotlin.Boolean {
      return _builder.hasImage()
    }

    /**
     * <code>.gooseai.ClassifierParameters classifier = 7 [json_name = "classifier"];</code>
     */
    public var classifier: gooseai.Generation.ClassifierParameters
      @JvmName("getClassifier")
      get() = _builder.getClassifier()
      @JvmName("setClassifier")
      set(value) {
        _builder.setClassifier(value)
      }
    /**
     * <code>.gooseai.ClassifierParameters classifier = 7 [json_name = "classifier"];</code>
     */
    public fun clearClassifier() {
      _builder.clearClassifier()
    }
    /**
     * <code>.gooseai.ClassifierParameters classifier = 7 [json_name = "classifier"];</code>
     * @return Whether the classifier field is set.
     */
    public fun hasClassifier(): kotlin.Boolean {
      return _builder.hasClassifier()
    }

    /**
     * <code>.gooseai.AssetParameters asset = 8 [json_name = "asset"];</code>
     */
    public var asset: gooseai.Generation.AssetParameters
      @JvmName("getAsset")
      get() = _builder.getAsset()
      @JvmName("setAsset")
      set(value) {
        _builder.setAsset(value)
      }
    /**
     * <code>.gooseai.AssetParameters asset = 8 [json_name = "asset"];</code>
     */
    public fun clearAsset() {
      _builder.clearAsset()
    }
    /**
     * <code>.gooseai.AssetParameters asset = 8 [json_name = "asset"];</code>
     * @return Whether the asset field is set.
     */
    public fun hasAsset(): kotlin.Boolean {
      return _builder.hasAsset()
    }

    /**
     * <code>optional .gooseai.ConditionerParameters conditioner = 6 [json_name = "conditioner"];</code>
     */
    public var conditioner: gooseai.Generation.ConditionerParameters
      @JvmName("getConditioner")
      get() = _builder.getConditioner()
      @JvmName("setConditioner")
      set(value) {
        _builder.setConditioner(value)
      }
    /**
     * <code>optional .gooseai.ConditionerParameters conditioner = 6 [json_name = "conditioner"];</code>
     */
    public fun clearConditioner() {
      _builder.clearConditioner()
    }
    /**
     * <code>optional .gooseai.ConditionerParameters conditioner = 6 [json_name = "conditioner"];</code>
     * @return Whether the conditioner field is set.
     */
    public fun hasConditioner(): kotlin.Boolean {
      return _builder.hasConditioner()
    }
    public val RequestKt.Dsl.conditionerOrNull: gooseai.Generation.ConditionerParameters?
      get() = _builder.conditionerOrNull
    public val paramsCase: gooseai.Generation.Request.ParamsCase
      @JvmName("getParamsCase")
      get() = _builder.getParamsCase()

    public fun clearParams() {
      _builder.clearParams()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun gooseai.Generation.Request.copy(block: gooseai.RequestKt.Dsl.() -> kotlin.Unit): gooseai.Generation.Request =
  gooseai.RequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val gooseai.Generation.RequestOrBuilder.imageOrNull: gooseai.Generation.ImageParameters?
  get() = if (hasImage()) getImage() else null

public val gooseai.Generation.RequestOrBuilder.classifierOrNull: gooseai.Generation.ClassifierParameters?
  get() = if (hasClassifier()) getClassifier() else null

public val gooseai.Generation.RequestOrBuilder.assetOrNull: gooseai.Generation.AssetParameters?
  get() = if (hasAsset()) getAsset() else null

public val gooseai.Generation.RequestOrBuilder.conditionerOrNull: gooseai.Generation.ConditionerParameters?
  get() = if (hasConditioner()) getConditioner() else null


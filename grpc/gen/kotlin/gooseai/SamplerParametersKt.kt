//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: generation.proto

package gooseai;

@kotlin.jvm.JvmName("-initializesamplerParameters")
public inline fun samplerParameters(block: gooseai.SamplerParametersKt.Dsl.() -> kotlin.Unit): gooseai.Generation.SamplerParameters =
  gooseai.SamplerParametersKt.Dsl._create(gooseai.Generation.SamplerParameters.newBuilder()).apply { block() }._build()
public object SamplerParametersKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: gooseai.Generation.SamplerParameters.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: gooseai.Generation.SamplerParameters.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): gooseai.Generation.SamplerParameters = _builder.build()

    /**
     * <code>optional float eta = 1 [json_name = "eta"];</code>
     */
    public var eta: kotlin.Float
      @JvmName("getEta")
      get() = _builder.getEta()
      @JvmName("setEta")
      set(value) {
        _builder.setEta(value)
      }
    /**
     * <code>optional float eta = 1 [json_name = "eta"];</code>
     */
    public fun clearEta() {
      _builder.clearEta()
    }
    /**
     * <code>optional float eta = 1 [json_name = "eta"];</code>
     * @return Whether the eta field is set.
     */
    public fun hasEta(): kotlin.Boolean {
      return _builder.hasEta()
    }

    /**
     * <code>optional uint64 sampling_steps = 2 [json_name = "samplingSteps"];</code>
     */
    public var samplingSteps: kotlin.Long
      @JvmName("getSamplingSteps")
      get() = _builder.getSamplingSteps()
      @JvmName("setSamplingSteps")
      set(value) {
        _builder.setSamplingSteps(value)
      }
    /**
     * <code>optional uint64 sampling_steps = 2 [json_name = "samplingSteps"];</code>
     */
    public fun clearSamplingSteps() {
      _builder.clearSamplingSteps()
    }
    /**
     * <code>optional uint64 sampling_steps = 2 [json_name = "samplingSteps"];</code>
     * @return Whether the samplingSteps field is set.
     */
    public fun hasSamplingSteps(): kotlin.Boolean {
      return _builder.hasSamplingSteps()
    }

    /**
     * <code>optional uint64 latent_channels = 3 [json_name = "latentChannels"];</code>
     */
    public var latentChannels: kotlin.Long
      @JvmName("getLatentChannels")
      get() = _builder.getLatentChannels()
      @JvmName("setLatentChannels")
      set(value) {
        _builder.setLatentChannels(value)
      }
    /**
     * <code>optional uint64 latent_channels = 3 [json_name = "latentChannels"];</code>
     */
    public fun clearLatentChannels() {
      _builder.clearLatentChannels()
    }
    /**
     * <code>optional uint64 latent_channels = 3 [json_name = "latentChannels"];</code>
     * @return Whether the latentChannels field is set.
     */
    public fun hasLatentChannels(): kotlin.Boolean {
      return _builder.hasLatentChannels()
    }

    /**
     * <code>optional uint64 downsampling_factor = 4 [json_name = "downsamplingFactor"];</code>
     */
    public var downsamplingFactor: kotlin.Long
      @JvmName("getDownsamplingFactor")
      get() = _builder.getDownsamplingFactor()
      @JvmName("setDownsamplingFactor")
      set(value) {
        _builder.setDownsamplingFactor(value)
      }
    /**
     * <code>optional uint64 downsampling_factor = 4 [json_name = "downsamplingFactor"];</code>
     */
    public fun clearDownsamplingFactor() {
      _builder.clearDownsamplingFactor()
    }
    /**
     * <code>optional uint64 downsampling_factor = 4 [json_name = "downsamplingFactor"];</code>
     * @return Whether the downsamplingFactor field is set.
     */
    public fun hasDownsamplingFactor(): kotlin.Boolean {
      return _builder.hasDownsamplingFactor()
    }

    /**
     * <code>optional float cfg_scale = 5 [json_name = "cfgScale"];</code>
     */
    public var cfgScale: kotlin.Float
      @JvmName("getCfgScale")
      get() = _builder.getCfgScale()
      @JvmName("setCfgScale")
      set(value) {
        _builder.setCfgScale(value)
      }
    /**
     * <code>optional float cfg_scale = 5 [json_name = "cfgScale"];</code>
     */
    public fun clearCfgScale() {
      _builder.clearCfgScale()
    }
    /**
     * <code>optional float cfg_scale = 5 [json_name = "cfgScale"];</code>
     * @return Whether the cfgScale field is set.
     */
    public fun hasCfgScale(): kotlin.Boolean {
      return _builder.hasCfgScale()
    }

    /**
     * <pre>
     * defaults to 0.99
     * </pre>
     *
     * <code>optional float init_noise_scale = 6 [json_name = "initNoiseScale"];</code>
     */
    public var initNoiseScale: kotlin.Float
      @JvmName("getInitNoiseScale")
      get() = _builder.getInitNoiseScale()
      @JvmName("setInitNoiseScale")
      set(value) {
        _builder.setInitNoiseScale(value)
      }
    /**
     * <pre>
     * defaults to 0.99
     * </pre>
     *
     * <code>optional float init_noise_scale = 6 [json_name = "initNoiseScale"];</code>
     */
    public fun clearInitNoiseScale() {
      _builder.clearInitNoiseScale()
    }
    /**
     * <pre>
     * defaults to 0.99
     * </pre>
     *
     * <code>optional float init_noise_scale = 6 [json_name = "initNoiseScale"];</code>
     * @return Whether the initNoiseScale field is set.
     */
    public fun hasInitNoiseScale(): kotlin.Boolean {
      return _builder.hasInitNoiseScale()
    }

    /**
     * <pre>
     * defaults to 0.99
     * </pre>
     *
     * <code>optional float step_noise_scale = 7 [json_name = "stepNoiseScale"];</code>
     */
    public var stepNoiseScale: kotlin.Float
      @JvmName("getStepNoiseScale")
      get() = _builder.getStepNoiseScale()
      @JvmName("setStepNoiseScale")
      set(value) {
        _builder.setStepNoiseScale(value)
      }
    /**
     * <pre>
     * defaults to 0.99
     * </pre>
     *
     * <code>optional float step_noise_scale = 7 [json_name = "stepNoiseScale"];</code>
     */
    public fun clearStepNoiseScale() {
      _builder.clearStepNoiseScale()
    }
    /**
     * <pre>
     * defaults to 0.99
     * </pre>
     *
     * <code>optional float step_noise_scale = 7 [json_name = "stepNoiseScale"];</code>
     * @return Whether the stepNoiseScale field is set.
     */
    public fun hasStepNoiseScale(): kotlin.Boolean {
      return _builder.hasStepNoiseScale()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun gooseai.Generation.SamplerParameters.copy(block: gooseai.SamplerParametersKt.Dsl.() -> kotlin.Unit): gooseai.Generation.SamplerParameters =
  gooseai.SamplerParametersKt.Dsl._create(this.toBuilder()).apply { block() }._build()


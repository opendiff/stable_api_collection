// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: project.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ProjectAsset;
@class Request;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum ProjectAccess

typedef GPB_ENUM(ProjectAccess) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ProjectAccess_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Private access, only owner organization can access */
  ProjectAccess_ProjectAccessPrivate = 0,

  /** Public access, anyone can access */
  ProjectAccess_ProjectAccessPublic = 1,
};

GPBEnumDescriptor *ProjectAccess_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ProjectAccess_IsValidValue(int32_t value);

#pragma mark - Enum ProjectStatus

typedef GPB_ENUM(ProjectStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ProjectStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Inactive project */
  ProjectStatus_ProjectStatusInactive = 0,

  /** Active project */
  ProjectStatus_ProjectStatusActive = 1,

  /** Deleted project, only set by delete endpoint */
  ProjectStatus_ProjectStatusDeleted = 2,
};

GPBEnumDescriptor *ProjectStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ProjectStatus_IsValidValue(int32_t value);

#pragma mark - Enum ProjectAssetUse

typedef GPB_ENUM(ProjectAssetUse) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ProjectAssetUse_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Asset does not have use defined */
  ProjectAssetUse_ProjectAssetUseUndefined = 0,

  /** Asset is used as an input for the project */
  ProjectAssetUse_ProjectAssetUseInput = 1,

  /** Asset is an output from the project */
  ProjectAssetUse_ProjectAssetUseOutput = 2,

  /** Asset is an output from an intermediate step of the project */
  ProjectAssetUse_ProjectAssetUseIntermediate = 3,

  /** Asset is used as the project file for the project */
  ProjectAssetUse_ProjectAssetUseProject = 4,
};

GPBEnumDescriptor *ProjectAssetUse_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ProjectAssetUse_IsValidValue(int32_t value);

#pragma mark - Enum ProjectSortDir

typedef GPB_ENUM(ProjectSortDir) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ProjectSortDir_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Sort direction is not specified, uses default */
  ProjectSortDir_ProjectSortDirUnspecified = 0,

  /** Sort in ascending order */
  ProjectSortDir_ProjectSortDirAsc = 1,

  /** Sort in descending order */
  ProjectSortDir_ProjectSortDirDesc = 2,
};

GPBEnumDescriptor *ProjectSortDir_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ProjectSortDir_IsValidValue(int32_t value);

#pragma mark - ProjectRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface ProjectRoot : GPBRootObject
@end

#pragma mark - ProjectAsset

typedef GPB_ENUM(ProjectAsset_FieldNumber) {
  ProjectAsset_FieldNumber_Id_p = 1,
  ProjectAsset_FieldNumber_Uri = 2,
  ProjectAsset_FieldNumber_Use = 3,
  ProjectAsset_FieldNumber_Name = 4,
  ProjectAsset_FieldNumber_Size = 5,
  ProjectAsset_FieldNumber_CreatedAt = 6,
  ProjectAsset_FieldNumber_UpdatedAt = 7,
  ProjectAsset_FieldNumber_Request = 8,
};

GPB_FINAL @interface ProjectAsset : GPBMessage

/** ID of the asset, UUIDv4 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** The URI to the asset */
@property(nonatomic, readwrite, copy, null_resettable) NSString *uri;

/** The use of the asset with respect to the project */
@property(nonatomic, readwrite) ProjectAssetUse use;

/** The name of the asset */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** The asset size in bytes */
@property(nonatomic, readwrite) uint64_t size;

/** Time of asset creation (UTC seconds epoch) */
@property(nonatomic, readwrite) uint64_t createdAt;

/** Time of last asset update (UTC seconds epoch) */
@property(nonatomic, readwrite) uint64_t updatedAt;

/** The request object that is associated with the artifact */
@property(nonatomic, readwrite, strong, null_resettable) Request *request;
/** Test to see if @c request has been set. */
@property(nonatomic, readwrite) BOOL hasRequest;

@end

/**
 * Fetches the raw value of a @c ProjectAsset's @c use property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ProjectAsset_Use_RawValue(ProjectAsset *message);
/**
 * Sets the raw value of an @c ProjectAsset's @c use property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetProjectAsset_Use_RawValue(ProjectAsset *message, int32_t value);

#pragma mark - Project

typedef GPB_ENUM(Project_FieldNumber) {
  Project_FieldNumber_Id_p = 1,
  Project_FieldNumber_Title = 2,
  Project_FieldNumber_OwnerId = 3,
  Project_FieldNumber_Access = 4,
  Project_FieldNumber_Status = 5,
  Project_FieldNumber_Size = 6,
  Project_FieldNumber_File = 7,
  Project_FieldNumber_CreatedAt = 8,
  Project_FieldNumber_UpdatedAt = 9,
  Project_FieldNumber_AssetsArray = 10,
};

GPB_FINAL @interface Project : GPBMessage

/** ID of the project, UUIDv4 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** Title of the project */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** The ID of the organization owning the project */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ownerId;

/** The access of the project (such as public vs private) */
@property(nonatomic, readwrite) ProjectAccess access;

/** The status of the project (such as active vs inactive) */
@property(nonatomic, readwrite) ProjectStatus status;

/** The size of the project in bytes */
@property(nonatomic, readwrite) uint64_t size;

/** Project file for the project */
@property(nonatomic, readwrite, strong, null_resettable) ProjectAsset *file;
/** Test to see if @c file has been set. */
@property(nonatomic, readwrite) BOOL hasFile;

/** Time of project creation (UTC seconds epoch) */
@property(nonatomic, readwrite) uint64_t createdAt;

/** Time of last project update (UTC seconds epoch) */
@property(nonatomic, readwrite) uint64_t updatedAt;

/** The listing of all assets associated with the project */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ProjectAsset*> *assetsArray;
/** The number of items in @c assetsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger assetsArray_Count;

@end

/**
 * Fetches the raw value of a @c Project's @c access property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Project_Access_RawValue(Project *message);
/**
 * Sets the raw value of an @c Project's @c access property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetProject_Access_RawValue(Project *message, int32_t value);

/**
 * Fetches the raw value of a @c Project's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Project_Status_RawValue(Project *message);
/**
 * Sets the raw value of an @c Project's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetProject_Status_RawValue(Project *message, int32_t value);

#pragma mark - CreateProjectRequest

typedef GPB_ENUM(CreateProjectRequest_FieldNumber) {
  CreateProjectRequest_FieldNumber_Title = 1,
  CreateProjectRequest_FieldNumber_OwnerId = 2,
  CreateProjectRequest_FieldNumber_Access = 3,
  CreateProjectRequest_FieldNumber_Status = 4,
  CreateProjectRequest_FieldNumber_File = 5,
};

GPB_FINAL @interface CreateProjectRequest : GPBMessage

/** title of the project */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** The ID of the organization owning the project, empty for default org for user */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ownerId;
/** Test to see if @c ownerId has been set. */
@property(nonatomic, readwrite) BOOL hasOwnerId;

/** The access of the project (such as public vs private) */
@property(nonatomic, readwrite) ProjectAccess access;

/** The status of the project (such as active vs inactive) */
@property(nonatomic, readwrite) ProjectStatus status;

/** Project file for the project (if existing, else will create) */
@property(nonatomic, readwrite, strong, null_resettable) ProjectAsset *file;
/** Test to see if @c file has been set. */
@property(nonatomic, readwrite) BOOL hasFile;

@end

/**
 * Fetches the raw value of a @c CreateProjectRequest's @c access property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t CreateProjectRequest_Access_RawValue(CreateProjectRequest *message);
/**
 * Sets the raw value of an @c CreateProjectRequest's @c access property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetCreateProjectRequest_Access_RawValue(CreateProjectRequest *message, int32_t value);

/**
 * Fetches the raw value of a @c CreateProjectRequest's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t CreateProjectRequest_Status_RawValue(CreateProjectRequest *message);
/**
 * Sets the raw value of an @c CreateProjectRequest's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetCreateProjectRequest_Status_RawValue(CreateProjectRequest *message, int32_t value);

#pragma mark - UpdateProjectRequest

typedef GPB_ENUM(UpdateProjectRequest_FieldNumber) {
  UpdateProjectRequest_FieldNumber_Id_p = 1,
  UpdateProjectRequest_FieldNumber_OwnerId = 2,
  UpdateProjectRequest_FieldNumber_Title = 3,
  UpdateProjectRequest_FieldNumber_Access = 4,
  UpdateProjectRequest_FieldNumber_Status = 5,
  UpdateProjectRequest_FieldNumber_File = 6,
};

GPB_FINAL @interface UpdateProjectRequest : GPBMessage

/** ID of the project, UUIDv4 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** The ID of the organization owning the project, empty for default org for user */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ownerId;
/** Test to see if @c ownerId has been set. */
@property(nonatomic, readwrite) BOOL hasOwnerId;

/** Title of the project */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;
/** Test to see if @c title has been set. */
@property(nonatomic, readwrite) BOOL hasTitle;

/** The access of the project (such as public vs private) */
@property(nonatomic, readwrite) ProjectAccess access;

@property(nonatomic, readwrite) BOOL hasAccess;
/** The status of the project (such as active vs inactive) */
@property(nonatomic, readwrite) ProjectStatus status;

@property(nonatomic, readwrite) BOOL hasStatus;
/** Project file for the project */
@property(nonatomic, readwrite, strong, null_resettable) ProjectAsset *file;
/** Test to see if @c file has been set. */
@property(nonatomic, readwrite) BOOL hasFile;

@end

/**
 * Fetches the raw value of a @c UpdateProjectRequest's @c access property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UpdateProjectRequest_Access_RawValue(UpdateProjectRequest *message);
/**
 * Sets the raw value of an @c UpdateProjectRequest's @c access property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUpdateProjectRequest_Access_RawValue(UpdateProjectRequest *message, int32_t value);

/**
 * Fetches the raw value of a @c UpdateProjectRequest's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UpdateProjectRequest_Status_RawValue(UpdateProjectRequest *message);
/**
 * Sets the raw value of an @c UpdateProjectRequest's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUpdateProjectRequest_Status_RawValue(UpdateProjectRequest *message, int32_t value);

#pragma mark - ListProjectRequest

typedef GPB_ENUM(ListProjectRequest_FieldNumber) {
  ListProjectRequest_FieldNumber_OwnerId = 1,
};

GPB_FINAL @interface ListProjectRequest : GPBMessage

/** The ID of the organization owning the project, empty for default org for user */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ownerId;
/** Test to see if @c ownerId has been set. */
@property(nonatomic, readwrite) BOOL hasOwnerId;

@end

#pragma mark - GetProjectRequest

typedef GPB_ENUM(GetProjectRequest_FieldNumber) {
  GetProjectRequest_FieldNumber_Id_p = 1,
  GetProjectRequest_FieldNumber_OwnerId = 2,
};

GPB_FINAL @interface GetProjectRequest : GPBMessage

/** ID of the project to request, UUIDv4, empty string uses default project */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** The ID of the organization owning the project, empty for default org for user */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ownerId;
/** Test to see if @c ownerId has been set. */
@property(nonatomic, readwrite) BOOL hasOwnerId;

@end

#pragma mark - DeleteProjectRequest

typedef GPB_ENUM(DeleteProjectRequest_FieldNumber) {
  DeleteProjectRequest_FieldNumber_Id_p = 1,
  DeleteProjectRequest_FieldNumber_OwnerId = 2,
};

GPB_FINAL @interface DeleteProjectRequest : GPBMessage

/** ID of the project to request, UUIDv4 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** The ID of the organization owning the project, empty for default org for user */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ownerId;
/** Test to see if @c ownerId has been set. */
@property(nonatomic, readwrite) BOOL hasOwnerId;

@end

#pragma mark - QueryAssetsRequest

typedef GPB_ENUM(QueryAssetsRequest_FieldNumber) {
  QueryAssetsRequest_FieldNumber_Id_p = 1,
  QueryAssetsRequest_FieldNumber_OwnerId = 2,
  QueryAssetsRequest_FieldNumber_Since = 3,
  QueryAssetsRequest_FieldNumber_Until = 4,
  QueryAssetsRequest_FieldNumber_Limit = 5,
  QueryAssetsRequest_FieldNumber_StartKey = 6,
  QueryAssetsRequest_FieldNumber_UseArray = 7,
  QueryAssetsRequest_FieldNumber_SortDir = 8,
};

GPB_FINAL @interface QueryAssetsRequest : GPBMessage

/** ID of the project to request, UUIDv4, empty string uses default project */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** The ID of the organization owning the assets, unset for default org for user */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ownerId;
/** Test to see if @c ownerId has been set. */
@property(nonatomic, readwrite) BOOL hasOwnerId;

/** The time (UTC seconds epoch) to start listing assets from, unset for no restriction */
@property(nonatomic, readwrite) uint64_t since;

@property(nonatomic, readwrite) BOOL hasSince;
/** The time (UTC seconds epoch) to stop listing assets at, unset for no restriction */
@property(nonatomic, readwrite) uint64_t until;

@property(nonatomic, readwrite) BOOL hasUntil;
/** The maximum number of assets to return, unset for no limit */
@property(nonatomic, readwrite) uint64_t limit;

@property(nonatomic, readwrite) BOOL hasLimit;
/** The key to start from, used to paginate results, unset for no offset */
@property(nonatomic, readwrite, copy, null_resettable) NSString *startKey;
/** Test to see if @c startKey has been set. */
@property(nonatomic, readwrite) BOOL hasStartKey;

/** The asset usage to filter the assets returned, empty for no filter */
// |useArray| contains |ProjectAssetUse|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *useArray;
/** The number of items in @c useArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger useArray_Count;

/** The sort direction based on asset creation time, default is descending */
@property(nonatomic, readwrite) ProjectSortDir sortDir;

@end

/**
 * Fetches the raw value of a @c QueryAssetsRequest's @c sortDir property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t QueryAssetsRequest_SortDir_RawValue(QueryAssetsRequest *message);
/**
 * Sets the raw value of an @c QueryAssetsRequest's @c sortDir property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetQueryAssetsRequest_SortDir_RawValue(QueryAssetsRequest *message, int32_t value);

#pragma mark - QueryAssetsResponse

typedef GPB_ENUM(QueryAssetsResponse_FieldNumber) {
  QueryAssetsResponse_FieldNumber_AssetsArray = 1,
  QueryAssetsResponse_FieldNumber_LastKey = 2,
};

GPB_FINAL @interface QueryAssetsResponse : GPBMessage

/** The assets returned by the query */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ProjectAsset*> *assetsArray;
/** The number of items in @c assetsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger assetsArray_Count;

/** The last asset key returned when the results were limited, unset when not limited */
@property(nonatomic, readwrite, copy, null_resettable) NSString *lastKey;
/** Test to see if @c lastKey has been set. */
@property(nonatomic, readwrite) BOOL hasLastKey;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// Code generated by gRPC proto compiler.  DO NOT EDIT!
// source: project.proto

#if !defined(GPB_GRPC_PROTOCOL_ONLY) || !GPB_GRPC_PROTOCOL_ONLY
#import "Project.pbrpc.h"
#import "Project.pbobjc.h"
#import <ProtoRPC/ProtoRPCLegacy.h>
#import <RxLibrary/GRXWriter+Immediate.h>

#import "Generation.pbobjc.h"

@implementation ProjectService

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wobjc-designated-initializers"

// Designated initializer
- (instancetype)initWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [super initWithHost:host
                 packageName:@"gooseai"
                 serviceName:@"ProjectService"
                 callOptions:callOptions];
}

- (instancetype)initWithHost:(NSString *)host {
  return [super initWithHost:host
                 packageName:@"gooseai"
                 serviceName:@"ProjectService"];
}

#pragma clang diagnostic pop

// Override superclass initializer to disallow different package and service names.
- (instancetype)initWithHost:(NSString *)host
                 packageName:(NSString *)packageName
                 serviceName:(NSString *)serviceName {
  return [self initWithHost:host];
}

- (instancetype)initWithHost:(NSString *)host
                 packageName:(NSString *)packageName
                 serviceName:(NSString *)serviceName
                 callOptions:(GRPCCallOptions *)callOptions {
  return [self initWithHost:host callOptions:callOptions];
}

#pragma mark - Class Methods

+ (instancetype)serviceWithHost:(NSString *)host {
  return [[self alloc] initWithHost:host];
}

+ (instancetype)serviceWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [[self alloc] initWithHost:host callOptions:callOptions];
}

#pragma mark - Method Implementations

#pragma mark Create(CreateProjectRequest) returns (Project)

/**
 * Create a new project if it does not exist
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)createWithRequest:(CreateProjectRequest *)request handler:(void(^)(Project *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToCreateWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * Create a new project if it does not exist
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToCreateWithRequest:(CreateProjectRequest *)request handler:(void(^)(Project *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"Create"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Project class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * Create a new project if it does not exist
 */
- (GRPCUnaryProtoCall *)createWithMessage:(CreateProjectRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"Create"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Project class]];
}

#pragma mark Update(UpdateProjectRequest) returns (Project)

/**
 * Update an existing project
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)updateWithRequest:(UpdateProjectRequest *)request handler:(void(^)(Project *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToUpdateWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * Update an existing project
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToUpdateWithRequest:(UpdateProjectRequest *)request handler:(void(^)(Project *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"Update"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Project class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * Update an existing project
 */
- (GRPCUnaryProtoCall *)updateWithMessage:(UpdateProjectRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"Update"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Project class]];
}

#pragma mark List(ListProjectRequest) returns (stream Project)

/**
 * List all the projects for an organization
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)listWithRequest:(ListProjectRequest *)request eventHandler:(void(^)(BOOL done, Project *_Nullable response, NSError *_Nullable error))eventHandler{
  [[self RPCToListWithRequest:request eventHandler:eventHandler] start];
}
// Returns a not-yet-started RPC object.
/**
 * List all the projects for an organization
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToListWithRequest:(ListProjectRequest *)request eventHandler:(void(^)(BOOL done, Project *_Nullable response, NSError *_Nullable error))eventHandler{
  return [self RPCToMethod:@"List"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Project class]
        responsesWriteable:[GRXWriteable writeableWithEventHandler:eventHandler]];
}
/**
 * List all the projects for an organization
 */
- (GRPCUnaryProtoCall *)listWithMessage:(ListProjectRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"List"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Project class]];
}

#pragma mark Get(GetProjectRequest) returns (Project)

/**
 * Get a project
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)getWithRequest:(GetProjectRequest *)request handler:(void(^)(Project *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToGetWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * Get a project
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToGetWithRequest:(GetProjectRequest *)request handler:(void(^)(Project *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"Get"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Project class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * Get a project
 */
- (GRPCUnaryProtoCall *)getWithMessage:(GetProjectRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"Get"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Project class]];
}

#pragma mark Delete(DeleteProjectRequest) returns (Project)

/**
 * Delete a project
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)deleteWithRequest:(DeleteProjectRequest *)request handler:(void(^)(Project *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToDeleteWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * Delete a project
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToDeleteWithRequest:(DeleteProjectRequest *)request handler:(void(^)(Project *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"Delete"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Project class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * Delete a project
 */
- (GRPCUnaryProtoCall *)deleteWithMessage:(DeleteProjectRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"Delete"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Project class]];
}

#pragma mark QueryAssets(QueryAssetsRequest) returns (QueryAssetsResponse)

/**
 * Query the assets of a project, with additional filtering
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)queryAssetsWithRequest:(QueryAssetsRequest *)request handler:(void(^)(QueryAssetsResponse *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToQueryAssetsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * Query the assets of a project, with additional filtering
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToQueryAssetsWithRequest:(QueryAssetsRequest *)request handler:(void(^)(QueryAssetsResponse *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"QueryAssets"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[QueryAssetsResponse class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * Query the assets of a project, with additional filtering
 */
- (GRPCUnaryProtoCall *)queryAssetsWithMessage:(QueryAssetsRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"QueryAssets"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[QueryAssetsResponse class]];
}

@end
#endif

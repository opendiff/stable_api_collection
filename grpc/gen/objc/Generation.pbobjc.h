// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: generation.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AnswerMeta;
@class Artifact;
@class AssetParameters;
@class ClassifierCategory;
@class ClassifierConcept;
@class ClassifierParameters;
@class ConditionerParameters;
@class CutoutParameters;
@class GuidanceInstanceParameters;
@class GuidanceParameters;
@class GuidanceScheduleParameters;
@class ImageParameters;
@class Model;
@class OnStatus;
@class Prompt;
@class PromptParameters;
@class Request;
@class SamplerParameters;
@class ScheduleParameters;
@class Stage;
@class StepParameter;
@class Tensor;
@class Token;
@class Tokens;
@class TransformType;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum FinishReason

typedef GPB_ENUM(FinishReason) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  FinishReason_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  FinishReason_Null = 0,
  FinishReason_Length = 1,
  FinishReason_Stop = 2,
  FinishReason_Error = 3,
  FinishReason_Filter = 4,
};

GPBEnumDescriptor *FinishReason_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL FinishReason_IsValidValue(int32_t value);

#pragma mark - Enum ArtifactType

typedef GPB_ENUM(ArtifactType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ArtifactType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ArtifactType_ArtifactNone = 0,
  ArtifactType_ArtifactImage = 1,
  ArtifactType_ArtifactVideo = 2,
  ArtifactType_ArtifactText = 3,
  ArtifactType_ArtifactTokens = 4,
  ArtifactType_ArtifactEmbedding = 5,
  ArtifactType_ArtifactClassifications = 6,
  ArtifactType_ArtifactMask = 7,
  ArtifactType_ArtifactLatent = 8,
  ArtifactType_ArtifactTensor = 9,
};

GPBEnumDescriptor *ArtifactType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ArtifactType_IsValidValue(int32_t value);

#pragma mark - Enum MaskedAreaInit

typedef GPB_ENUM(MaskedAreaInit) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  MaskedAreaInit_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  MaskedAreaInit_MaskedAreaInitZero = 0,
  MaskedAreaInit_MaskedAreaInitRandom = 1,
  MaskedAreaInit_MaskedAreaInitOriginal = 2,
};

GPBEnumDescriptor *MaskedAreaInit_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL MaskedAreaInit_IsValidValue(int32_t value);

#pragma mark - Enum WeightMethod

typedef GPB_ENUM(WeightMethod) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  WeightMethod_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  WeightMethod_TextEncoder = 0,
  WeightMethod_CrossAttention = 1,
};

GPBEnumDescriptor *WeightMethod_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL WeightMethod_IsValidValue(int32_t value);

#pragma mark - Enum DiffusionSampler

/**
 * DiffusionSampler identifies which sampler to use for Diffusion, and represents
 * the internal set of supported samplers.
 **/
typedef GPB_ENUM(DiffusionSampler) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  DiffusionSampler_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  DiffusionSampler_SamplerDdim = 0,
  DiffusionSampler_SamplerDdpm = 1,
  DiffusionSampler_SamplerKEuler = 2,
  DiffusionSampler_SamplerKEulerAncestral = 3,
  DiffusionSampler_SamplerKHeun = 4,
  DiffusionSampler_SamplerKDpm2 = 5,
  DiffusionSampler_SamplerKDpm2Ancestral = 6,
  DiffusionSampler_SamplerKLms = 7,
  DiffusionSampler_SamplerKDpmpp2SAncestral = 8,
  DiffusionSampler_SamplerKDpmpp2M = 9,
  DiffusionSampler_SamplerKDpmppSde = 10,
};

GPBEnumDescriptor *DiffusionSampler_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DiffusionSampler_IsValidValue(int32_t value);

#pragma mark - Enum Upscaler

/** Future, unimplemented. */
typedef GPB_ENUM(Upscaler) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Upscaler_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Upscaler_UpscalerRgb = 0,
  Upscaler_UpscalerGfpgan = 1,
  Upscaler_UpscalerEsrgan = 2,
};

GPBEnumDescriptor *Upscaler_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Upscaler_IsValidValue(int32_t value);

#pragma mark - Enum GuidancePreset

/** Presets for CLIP guidance. */
typedef GPB_ENUM(GuidancePreset) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  GuidancePreset_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  GuidancePreset_GuidancePresetNone = 0,
  GuidancePreset_GuidancePresetSimple = 1,
  GuidancePreset_GuidancePresetFastBlue = 2,
  GuidancePreset_GuidancePresetFastGreen = 3,
  GuidancePreset_GuidancePresetSlow = 4,
  GuidancePreset_GuidancePresetSlower = 5,
  GuidancePreset_GuidancePresetSlowest = 6,
};

GPBEnumDescriptor *GuidancePreset_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL GuidancePreset_IsValidValue(int32_t value);

#pragma mark - Enum ModelArchitecture

typedef GPB_ENUM(ModelArchitecture) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ModelArchitecture_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ModelArchitecture_ModelArchitectureNone = 0,
  ModelArchitecture_ModelArchitectureClipVit = 1,
  ModelArchitecture_ModelArchitectureClipResnet = 2,
  ModelArchitecture_ModelArchitectureLdm = 3,
};

GPBEnumDescriptor *ModelArchitecture_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ModelArchitecture_IsValidValue(int32_t value);

#pragma mark - Enum Action

typedef GPB_ENUM(Action) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Action_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Action_ActionPassthrough = 0,
  Action_ActionRegenerateDuplicate = 1,
  Action_ActionRegenerate = 2,
  Action_ActionObfuscateDuplicate = 3,
  Action_ActionObfuscate = 4,
  Action_ActionDiscard = 5,
};

GPBEnumDescriptor *Action_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Action_IsValidValue(int32_t value);

#pragma mark - Enum ClassifierMode

typedef GPB_ENUM(ClassifierMode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ClassifierMode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ClassifierMode_ClsfrModeZeroshot = 0,

  /** CLSFR_MODE_ODDSRATIO = 2; */
  ClassifierMode_ClsfrModeMulticlass = 1,
};

GPBEnumDescriptor *ClassifierMode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ClassifierMode_IsValidValue(int32_t value);

#pragma mark - Enum AssetAction

typedef GPB_ENUM(AssetAction) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  AssetAction_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  AssetAction_AssetPut = 0,
  AssetAction_AssetGet = 1,
  AssetAction_AssetDelete = 2,
};

GPBEnumDescriptor *AssetAction_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL AssetAction_IsValidValue(int32_t value);

#pragma mark - Enum AssetUse

/**
 * AssetUse defines how the asset is used within a project.  This enum matches
 * the values the project proto.
 **/
typedef GPB_ENUM(AssetUse) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  AssetUse_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Asset does not have use defined */
  AssetUse_AssetUseUndefined = 0,

  /** Asset is used as an input for the project */
  AssetUse_AssetUseInput = 1,

  /** Asset is an output from the project */
  AssetUse_AssetUseOutput = 2,

  /** Asset is an output from an intermediate step of the project */
  AssetUse_AssetUseIntermediate = 3,

  /** Asset is used as the project file for the project */
  AssetUse_AssetUseProject = 4,
};

GPBEnumDescriptor *AssetUse_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL AssetUse_IsValidValue(int32_t value);

#pragma mark - Enum StageAction

typedef GPB_ENUM(StageAction) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  StageAction_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  StageAction_StageActionPass = 0,
  StageAction_StageActionDiscard = 1,
  StageAction_StageActionReturn = 2,
};

GPBEnumDescriptor *StageAction_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL StageAction_IsValidValue(int32_t value);

#pragma mark - GenerationRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface GenerationRoot : GPBRootObject
@end

#pragma mark - Token

typedef GPB_ENUM(Token_FieldNumber) {
  Token_FieldNumber_Text = 1,
  Token_FieldNumber_Id_p = 2,
};

/**
 * Generally, a GPT BPE 16-bit token, paired with an optional string representation.
 **/
GPB_FINAL @interface Token : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *text;
/** Test to see if @c text has been set. */
@property(nonatomic, readwrite) BOOL hasText;

@property(nonatomic, readwrite) uint32_t id_p;

@end

#pragma mark - Tokens

typedef GPB_ENUM(Tokens_FieldNumber) {
  Tokens_FieldNumber_TokensArray = 1,
  Tokens_FieldNumber_TokenizerId = 2,
};

/**
 * Sequence of tokens, paired with the id of the tokenizer used to generate them.
 **/
GPB_FINAL @interface Tokens : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Token*> *tokensArray;
/** The number of items in @c tokensArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tokensArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *tokenizerId;
/** Test to see if @c tokenizerId has been set. */
@property(nonatomic, readwrite) BOOL hasTokenizerId;

@end

#pragma mark - Artifact

typedef GPB_ENUM(Artifact_FieldNumber) {
  Artifact_FieldNumber_Id_p = 1,
  Artifact_FieldNumber_Type = 2,
  Artifact_FieldNumber_Mime = 3,
  Artifact_FieldNumber_Magic = 4,
  Artifact_FieldNumber_Binary = 5,
  Artifact_FieldNumber_Text = 6,
  Artifact_FieldNumber_Tokens = 7,
  Artifact_FieldNumber_Index = 8,
  Artifact_FieldNumber_FinishReason = 9,
  Artifact_FieldNumber_Seed = 10,
  Artifact_FieldNumber_Classifier = 11,
  Artifact_FieldNumber_Uuid = 12,
  Artifact_FieldNumber_Size = 13,
  Artifact_FieldNumber_Tensor = 14,
};

typedef GPB_ENUM(Artifact_Data_OneOfCase) {
  Artifact_Data_OneOfCase_GPBUnsetOneOfCase = 0,
  Artifact_Data_OneOfCase_Binary = 5,
  Artifact_Data_OneOfCase_Text = 6,
  Artifact_Data_OneOfCase_Tokens = 7,
  Artifact_Data_OneOfCase_Classifier = 11,
  Artifact_Data_OneOfCase_Tensor = 14,
};

/**
 * A tangible Artifact, such as an image, video, or text that is used for input
 * or output.
 **/
GPB_FINAL @interface Artifact : GPBMessage

@property(nonatomic, readwrite) uint64_t id_p;

@property(nonatomic, readwrite) ArtifactType type;

/** MIME type identifier, e.g. "image/png" */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mime;

/** Magic number, e.g. "PNG" */
@property(nonatomic, readwrite, copy, null_resettable) NSString *magic;
/** Test to see if @c magic has been set. */
@property(nonatomic, readwrite) BOOL hasMagic;

@property(nonatomic, readonly) Artifact_Data_OneOfCase dataOneOfCase;

/** Binary data, e.g. PNG image */
@property(nonatomic, readwrite, copy, null_resettable) NSData *binary;

/** Text data, e.g. text prompt */
@property(nonatomic, readwrite, copy, null_resettable) NSString *text;

/** Tokenized text data, e.g. GPT tokens */
@property(nonatomic, readwrite, strong, null_resettable) Tokens *tokens;

@property(nonatomic, readwrite, strong, null_resettable) ClassifierParameters *classifier;

/** torch.Tensor: */
@property(nonatomic, readwrite, strong, null_resettable) Tensor *tensor;

/** Index of this artifact in input/output list */
@property(nonatomic, readwrite) uint32_t index;

/** Reason for finishing, if applicable */
@property(nonatomic, readwrite) FinishReason finishReason;

/** Seed used to generate this artifact */
@property(nonatomic, readwrite) uint32_t seed;

/** UUIDv4 of the artifact, used for asset lookup */
@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;

/** Size of the artifact in bytes */
@property(nonatomic, readwrite) uint64_t size;

@end

/**
 * Fetches the raw value of a @c Artifact's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Artifact_Type_RawValue(Artifact *message);
/**
 * Sets the raw value of an @c Artifact's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetArtifact_Type_RawValue(Artifact *message, int32_t value);

/**
 * Fetches the raw value of a @c Artifact's @c finishReason property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Artifact_FinishReason_RawValue(Artifact *message);
/**
 * Sets the raw value of an @c Artifact's @c finishReason property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetArtifact_FinishReason_RawValue(Artifact *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'data'.
 **/
void Artifact_ClearDataOneOfCase(Artifact *message);

#pragma mark - PromptParameters

typedef GPB_ENUM(PromptParameters_FieldNumber) {
  PromptParameters_FieldNumber_Init_p = 1,
  PromptParameters_FieldNumber_Weight = 2,
};

/**
 * A set of parameters for each individual Prompt.
 **/
GPB_FINAL @interface PromptParameters : GPBMessage

@property(nonatomic, readwrite) BOOL init_p;

@property(nonatomic, readwrite) BOOL hasInit_p;
@property(nonatomic, readwrite) float weight;

@property(nonatomic, readwrite) BOOL hasWeight;
@end

#pragma mark - Prompt

typedef GPB_ENUM(Prompt_FieldNumber) {
  Prompt_FieldNumber_Parameters = 1,
  Prompt_FieldNumber_Text = 2,
  Prompt_FieldNumber_Tokens = 3,
  Prompt_FieldNumber_Artifact = 4,
};

typedef GPB_ENUM(Prompt_Prompt_OneOfCase) {
  Prompt_Prompt_OneOfCase_GPBUnsetOneOfCase = 0,
  Prompt_Prompt_OneOfCase_Text = 2,
  Prompt_Prompt_OneOfCase_Tokens = 3,
  Prompt_Prompt_OneOfCase_Artifact = 4,
};

/**
 * A Prompt is a special type of Artifact that is used to generate an output.
 * There can be multiple Prompts that affect the same output. Currently, the
 * only Prompts supported are:
 *   - Text (singular)
 *   - Init Image (singular, optional, type ARTIFACT_IMAGE, with init=true)
 *   - Mask (singular, optional, Artifact type ARTIFACT_MASK)
 **/
GPB_FINAL @interface Prompt : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PromptParameters *parameters;
/** Test to see if @c parameters has been set. */
@property(nonatomic, readwrite) BOOL hasParameters;

@property(nonatomic, readonly) Prompt_Prompt_OneOfCase promptOneOfCase;

@property(nonatomic, readwrite, copy, null_resettable) NSString *text;

@property(nonatomic, readwrite, strong, null_resettable) Tokens *tokens;

@property(nonatomic, readwrite, strong, null_resettable) Artifact *artifact;

@end

/**
 * Clears whatever value was set for the oneof 'prompt'.
 **/
void Prompt_ClearPromptOneOfCase(Prompt *message);

#pragma mark - SamplerParameters

typedef GPB_ENUM(SamplerParameters_FieldNumber) {
  SamplerParameters_FieldNumber_Eta = 1,
  SamplerParameters_FieldNumber_SamplingSteps = 2,
  SamplerParameters_FieldNumber_LatentChannels = 3,
  SamplerParameters_FieldNumber_DownsamplingFactor = 4,
  SamplerParameters_FieldNumber_CfgScale = 5,
  SamplerParameters_FieldNumber_InitNoiseScale = 6,
  SamplerParameters_FieldNumber_StepNoiseScale = 7,
};

/**
 * Parameters that affect the behavior of the sampler, typically used for CFG.
 **/
GPB_FINAL @interface SamplerParameters : GPBMessage

@property(nonatomic, readwrite) float eta;

@property(nonatomic, readwrite) BOOL hasEta;
@property(nonatomic, readwrite) uint64_t samplingSteps;

@property(nonatomic, readwrite) BOOL hasSamplingSteps;
@property(nonatomic, readwrite) uint64_t latentChannels;

@property(nonatomic, readwrite) BOOL hasLatentChannels;
@property(nonatomic, readwrite) uint64_t downsamplingFactor;

@property(nonatomic, readwrite) BOOL hasDownsamplingFactor;
@property(nonatomic, readwrite) float cfgScale;

@property(nonatomic, readwrite) BOOL hasCfgScale;
/** defaults to 0.99 */
@property(nonatomic, readwrite) float initNoiseScale;

@property(nonatomic, readwrite) BOOL hasInitNoiseScale;
/** defaults to 0.99 */
@property(nonatomic, readwrite) float stepNoiseScale;

@property(nonatomic, readwrite) BOOL hasStepNoiseScale;
@end

#pragma mark - ConditionerParameters

typedef GPB_ENUM(ConditionerParameters_FieldNumber) {
  ConditionerParameters_FieldNumber_VectorAdjustPrior = 1,
  ConditionerParameters_FieldNumber_Conditioner = 2,
};

/**
 * Unused, but reserved for future use. Adjustments to the latents after
 * initialization.
 **/
GPB_FINAL @interface ConditionerParameters : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *vectorAdjustPrior;
/** Test to see if @c vectorAdjustPrior has been set. */
@property(nonatomic, readwrite) BOOL hasVectorAdjustPrior;

@property(nonatomic, readwrite, strong, null_resettable) Model *conditioner;
/** Test to see if @c conditioner has been set. */
@property(nonatomic, readwrite) BOOL hasConditioner;

@end

#pragma mark - ScheduleParameters

typedef GPB_ENUM(ScheduleParameters_FieldNumber) {
  ScheduleParameters_FieldNumber_Start = 1,
  ScheduleParameters_FieldNumber_End = 2,
  ScheduleParameters_FieldNumber_Value = 3,
};

/**
 * When does this schedule definition apply?
 **/
GPB_FINAL @interface ScheduleParameters : GPBMessage

/** 0.0 to 1.0 */
@property(nonatomic, readwrite) float start;

@property(nonatomic, readwrite) BOOL hasStart;
/** 0.0 to 1.0 */
@property(nonatomic, readwrite) float end;

@property(nonatomic, readwrite) BOOL hasEnd;
/** float value to apply on this schedule */
@property(nonatomic, readwrite) float value;

@property(nonatomic, readwrite) BOOL hasValue;
@end

#pragma mark - StepParameter

typedef GPB_ENUM(StepParameter_FieldNumber) {
  StepParameter_FieldNumber_ScaledStep = 1,
  StepParameter_FieldNumber_Sampler = 2,
  StepParameter_FieldNumber_Schedule = 3,
  StepParameter_FieldNumber_Guidance = 4,
};

/**
 * Parameters that apply to this block of the schedule.
 **/
GPB_FINAL @interface StepParameter : GPBMessage

@property(nonatomic, readwrite) float scaledStep;

@property(nonatomic, readwrite, strong, null_resettable) SamplerParameters *sampler;
/** Test to see if @c sampler has been set. */
@property(nonatomic, readwrite) BOOL hasSampler;

@property(nonatomic, readwrite, strong, null_resettable) ScheduleParameters *schedule;
/** Test to see if @c schedule has been set. */
@property(nonatomic, readwrite) BOOL hasSchedule;

@property(nonatomic, readwrite, strong, null_resettable) GuidanceParameters *guidance;
/** Test to see if @c guidance has been set. */
@property(nonatomic, readwrite) BOOL hasGuidance;

@end

#pragma mark - Model

typedef GPB_ENUM(Model_FieldNumber) {
  Model_FieldNumber_Architecture = 1,
  Model_FieldNumber_Publisher = 2,
  Model_FieldNumber_Dataset = 3,
  Model_FieldNumber_Version = 4,
  Model_FieldNumber_SemanticVersion = 5,
  Model_FieldNumber_Alias = 6,
};

GPB_FINAL @interface Model : GPBMessage

@property(nonatomic, readwrite) ModelArchitecture architecture;

@property(nonatomic, readwrite, copy, null_resettable) NSString *publisher;

@property(nonatomic, readwrite, copy, null_resettable) NSString *dataset;

@property(nonatomic, readwrite) float version;

@property(nonatomic, readwrite, copy, null_resettable) NSString *semanticVersion;

@property(nonatomic, readwrite, copy, null_resettable) NSString *alias;

@end

/**
 * Fetches the raw value of a @c Model's @c architecture property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Model_Architecture_RawValue(Model *message);
/**
 * Sets the raw value of an @c Model's @c architecture property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetModel_Architecture_RawValue(Model *message, int32_t value);

#pragma mark - CutoutParameters

typedef GPB_ENUM(CutoutParameters_FieldNumber) {
  CutoutParameters_FieldNumber_CutoutsArray = 1,
  CutoutParameters_FieldNumber_Count = 2,
  CutoutParameters_FieldNumber_Gray = 3,
  CutoutParameters_FieldNumber_Blur = 4,
  CutoutParameters_FieldNumber_SizePower = 5,
};

GPB_FINAL @interface CutoutParameters : GPBMessage

/** Nested cutouts, unsupported */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<CutoutParameters*> *cutoutsArray;
/** The number of items in @c cutoutsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger cutoutsArray_Count;

/** 0 to n, usually 8 to 32, 0 inner */
@property(nonatomic, readwrite) uint32_t count;

@property(nonatomic, readwrite) BOOL hasCount;
/** 0.0 to 1.0, defaults to 0.2 */
@property(nonatomic, readwrite) float gray;

@property(nonatomic, readwrite) BOOL hasGray;
/** percentage of cutouts to blur */
@property(nonatomic, readwrite) float blur;

@property(nonatomic, readwrite) BOOL hasBlur;
/** defaults to inner: 0.5, outer: 0.0 */
@property(nonatomic, readwrite) float sizePower;

@property(nonatomic, readwrite) BOOL hasSizePower;
@end

#pragma mark - GuidanceScheduleParameters

typedef GPB_ENUM(GuidanceScheduleParameters_FieldNumber) {
  GuidanceScheduleParameters_FieldNumber_Duration = 1,
  GuidanceScheduleParameters_FieldNumber_Value = 2,
};

/**
 * GuidanceScheduleParameters are used to define a schedule for CLIP guidance, and
 * are used to define the behavior of the guidance over time. They are relative
 * to the total number of steps, and are scaled to the number of steps in the
 * current run.
 **/
GPB_FINAL @interface GuidanceScheduleParameters : GPBMessage

@property(nonatomic, readwrite) float duration;

@property(nonatomic, readwrite) float value;

@end

#pragma mark - GuidanceInstanceParameters

typedef GPB_ENUM(GuidanceInstanceParameters_FieldNumber) {
  GuidanceInstanceParameters_FieldNumber_ModelsArray = 2,
  GuidanceInstanceParameters_FieldNumber_GuidanceStrength = 3,
  GuidanceInstanceParameters_FieldNumber_ScheduleArray = 4,
  GuidanceInstanceParameters_FieldNumber_Cutouts = 5,
  GuidanceInstanceParameters_FieldNumber_Prompt = 6,
};

/**
 * Parameters that affect the behavior of the guidance, typically used for CLIP.
 * We can specify more than one model, and the guidance will be a weighted sum
 * of the models.
 **/
GPB_FINAL @interface GuidanceInstanceParameters : GPBMessage

/** models to use for this set */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Model*> *modelsArray;
/** The number of items in @c modelsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger modelsArray_Count;

/** 0.0 to 1.0, usually 0.05 to 0.225 */
@property(nonatomic, readwrite) float guidanceStrength;

@property(nonatomic, readwrite) BOOL hasGuidanceStrength;
/** when to apply guidance */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GuidanceScheduleParameters*> *scheduleArray;
/** The number of items in @c scheduleArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger scheduleArray_Count;

/** cutout parameters */
@property(nonatomic, readwrite, strong, null_resettable) CutoutParameters *cutouts;
/** Test to see if @c cutouts has been set. */
@property(nonatomic, readwrite) BOOL hasCutouts;

/** prompt to use for guidance */
@property(nonatomic, readwrite, strong, null_resettable) Prompt *prompt;
/** Test to see if @c prompt has been set. */
@property(nonatomic, readwrite) BOOL hasPrompt;

@end

#pragma mark - GuidanceParameters

typedef GPB_ENUM(GuidanceParameters_FieldNumber) {
  GuidanceParameters_FieldNumber_GuidancePreset = 1,
  GuidanceParameters_FieldNumber_InstancesArray = 2,
};

/**
 * Parameters that affect the behavior of the guidance, typically used for CLIP.
 * The omission of this field implies the default guidance of CFG.
 **/
GPB_FINAL @interface GuidanceParameters : GPBMessage

/** base preset for guidance */
@property(nonatomic, readwrite) GuidancePreset guidancePreset;

/** guidance instances */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GuidanceInstanceParameters*> *instancesArray;
/** The number of items in @c instancesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger instancesArray_Count;

@end

/**
 * Fetches the raw value of a @c GuidanceParameters's @c guidancePreset property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t GuidanceParameters_GuidancePreset_RawValue(GuidanceParameters *message);
/**
 * Sets the raw value of an @c GuidanceParameters's @c guidancePreset property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGuidanceParameters_GuidancePreset_RawValue(GuidanceParameters *message, int32_t value);

#pragma mark - TransformType

typedef GPB_ENUM(TransformType_FieldNumber) {
  TransformType_FieldNumber_Diffusion = 1,
  TransformType_FieldNumber_Upscaler = 2,
};

typedef GPB_ENUM(TransformType_Type_OneOfCase) {
  TransformType_Type_OneOfCase_GPBUnsetOneOfCase = 0,
  TransformType_Type_OneOfCase_Diffusion = 1,
  TransformType_Type_OneOfCase_Upscaler = 2,
};

GPB_FINAL @interface TransformType : GPBMessage

@property(nonatomic, readonly) TransformType_Type_OneOfCase typeOneOfCase;

@property(nonatomic, readwrite) DiffusionSampler diffusion;

@property(nonatomic, readwrite) Upscaler upscaler;

@end

/**
 * Fetches the raw value of a @c TransformType's @c diffusion property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t TransformType_Diffusion_RawValue(TransformType *message);
/**
 * Sets the raw value of an @c TransformType's @c diffusion property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetTransformType_Diffusion_RawValue(TransformType *message, int32_t value);

/**
 * Fetches the raw value of a @c TransformType's @c upscaler property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t TransformType_Upscaler_RawValue(TransformType *message);
/**
 * Sets the raw value of an @c TransformType's @c upscaler property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetTransformType_Upscaler_RawValue(TransformType *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'type'.
 **/
void TransformType_ClearTypeOneOfCase(TransformType *message);

#pragma mark - ImageParameters

typedef GPB_ENUM(ImageParameters_FieldNumber) {
  ImageParameters_FieldNumber_Height = 1,
  ImageParameters_FieldNumber_Width = 2,
  ImageParameters_FieldNumber_SeedArray = 3,
  ImageParameters_FieldNumber_Samples = 4,
  ImageParameters_FieldNumber_Steps = 5,
  ImageParameters_FieldNumber_Transform = 6,
  ImageParameters_FieldNumber_ParametersArray = 7,
  ImageParameters_FieldNumber_MaskedAreaInit = 8,
  ImageParameters_FieldNumber_WeightMethod = 9,
  ImageParameters_FieldNumber_Quantize = 10,
};

GPB_FINAL @interface ImageParameters : GPBMessage

@property(nonatomic, readwrite) uint64_t height;

@property(nonatomic, readwrite) BOOL hasHeight;
@property(nonatomic, readwrite) uint64_t width;

@property(nonatomic, readwrite) BOOL hasWidth;
@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *seedArray;
/** The number of items in @c seedArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger seedArray_Count;

@property(nonatomic, readwrite) uint64_t samples;

@property(nonatomic, readwrite) BOOL hasSamples;
@property(nonatomic, readwrite) uint64_t steps;

@property(nonatomic, readwrite) BOOL hasSteps;
@property(nonatomic, readwrite, strong, null_resettable) TransformType *transform;
/** Test to see if @c transform has been set. */
@property(nonatomic, readwrite) BOOL hasTransform;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<StepParameter*> *parametersArray;
/** The number of items in @c parametersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger parametersArray_Count;

/** defaults to MASKED_AREA_INIT_ZERO */
@property(nonatomic, readwrite) MaskedAreaInit maskedAreaInit;

@property(nonatomic, readwrite) BOOL hasMaskedAreaInit;
/** defaults to TEXT_ENCODER */
@property(nonatomic, readwrite) WeightMethod weightMethod;

@property(nonatomic, readwrite) BOOL hasWeightMethod;
/** defaults to true */
@property(nonatomic, readwrite) BOOL quantize;

@property(nonatomic, readwrite) BOOL hasQuantize;
@end

/**
 * Fetches the raw value of a @c ImageParameters's @c maskedAreaInit property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ImageParameters_MaskedAreaInit_RawValue(ImageParameters *message);
/**
 * Sets the raw value of an @c ImageParameters's @c maskedAreaInit property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetImageParameters_MaskedAreaInit_RawValue(ImageParameters *message, int32_t value);

/**
 * Fetches the raw value of a @c ImageParameters's @c weightMethod property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ImageParameters_WeightMethod_RawValue(ImageParameters *message);
/**
 * Sets the raw value of an @c ImageParameters's @c weightMethod property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetImageParameters_WeightMethod_RawValue(ImageParameters *message, int32_t value);

#pragma mark - ClassifierConcept

typedef GPB_ENUM(ClassifierConcept_FieldNumber) {
  ClassifierConcept_FieldNumber_Concept = 1,
  ClassifierConcept_FieldNumber_Threshold = 2,
};

GPB_FINAL @interface ClassifierConcept : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *concept;

@property(nonatomic, readwrite) float threshold;

@property(nonatomic, readwrite) BOOL hasThreshold;
@end

#pragma mark - ClassifierCategory

typedef GPB_ENUM(ClassifierCategory_FieldNumber) {
  ClassifierCategory_FieldNumber_Name = 1,
  ClassifierCategory_FieldNumber_ConceptsArray = 2,
  ClassifierCategory_FieldNumber_Adjustment = 3,
  ClassifierCategory_FieldNumber_Action = 4,
  ClassifierCategory_FieldNumber_ClassifierMode = 5,
};

GPB_FINAL @interface ClassifierCategory : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ClassifierConcept*> *conceptsArray;
/** The number of items in @c conceptsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger conceptsArray_Count;

@property(nonatomic, readwrite) float adjustment;

@property(nonatomic, readwrite) BOOL hasAdjustment;
@property(nonatomic, readwrite) Action action;

@property(nonatomic, readwrite) BOOL hasAction;
@property(nonatomic, readwrite) ClassifierMode classifierMode;

@property(nonatomic, readwrite) BOOL hasClassifierMode;
@end

/**
 * Fetches the raw value of a @c ClassifierCategory's @c action property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ClassifierCategory_Action_RawValue(ClassifierCategory *message);
/**
 * Sets the raw value of an @c ClassifierCategory's @c action property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetClassifierCategory_Action_RawValue(ClassifierCategory *message, int32_t value);

/**
 * Fetches the raw value of a @c ClassifierCategory's @c classifierMode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ClassifierCategory_ClassifierMode_RawValue(ClassifierCategory *message);
/**
 * Sets the raw value of an @c ClassifierCategory's @c classifierMode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetClassifierCategory_ClassifierMode_RawValue(ClassifierCategory *message, int32_t value);

#pragma mark - ClassifierParameters

typedef GPB_ENUM(ClassifierParameters_FieldNumber) {
  ClassifierParameters_FieldNumber_CategoriesArray = 1,
  ClassifierParameters_FieldNumber_ExceedsArray = 2,
  ClassifierParameters_FieldNumber_RealizedAction = 3,
};

GPB_FINAL @interface ClassifierParameters : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ClassifierCategory*> *categoriesArray;
/** The number of items in @c categoriesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger categoriesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ClassifierCategory*> *exceedsArray;
/** The number of items in @c exceedsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger exceedsArray_Count;

@property(nonatomic, readwrite) Action realizedAction;

@property(nonatomic, readwrite) BOOL hasRealizedAction;
@end

/**
 * Fetches the raw value of a @c ClassifierParameters's @c realizedAction property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ClassifierParameters_RealizedAction_RawValue(ClassifierParameters *message);
/**
 * Sets the raw value of an @c ClassifierParameters's @c realizedAction property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetClassifierParameters_RealizedAction_RawValue(ClassifierParameters *message, int32_t value);

#pragma mark - AssetParameters

typedef GPB_ENUM(AssetParameters_FieldNumber) {
  AssetParameters_FieldNumber_Action = 1,
  AssetParameters_FieldNumber_ProjectId = 2,
  AssetParameters_FieldNumber_Use = 3,
};

GPB_FINAL @interface AssetParameters : GPBMessage

@property(nonatomic, readwrite) AssetAction action;

@property(nonatomic, readwrite, copy, null_resettable) NSString *projectId;

@property(nonatomic, readwrite) AssetUse use;

@end

/**
 * Fetches the raw value of a @c AssetParameters's @c action property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t AssetParameters_Action_RawValue(AssetParameters *message);
/**
 * Sets the raw value of an @c AssetParameters's @c action property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAssetParameters_Action_RawValue(AssetParameters *message, int32_t value);

/**
 * Fetches the raw value of a @c AssetParameters's @c use property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t AssetParameters_Use_RawValue(AssetParameters *message);
/**
 * Sets the raw value of an @c AssetParameters's @c use property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAssetParameters_Use_RawValue(AssetParameters *message, int32_t value);

#pragma mark - AnswerMeta

typedef GPB_ENUM(AnswerMeta_FieldNumber) {
  AnswerMeta_FieldNumber_GpuId = 1,
  AnswerMeta_FieldNumber_CpuId = 2,
  AnswerMeta_FieldNumber_NodeId = 3,
  AnswerMeta_FieldNumber_EngineId = 4,
};

/**
 * AnswerMeta is a set of metadata about an answer, usually the operating
 * environment.
 **/
GPB_FINAL @interface AnswerMeta : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *gpuId;
/** Test to see if @c gpuId has been set. */
@property(nonatomic, readwrite) BOOL hasGpuId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *cpuId;
/** Test to see if @c cpuId has been set. */
@property(nonatomic, readwrite) BOOL hasCpuId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nodeId;
/** Test to see if @c nodeId has been set. */
@property(nonatomic, readwrite) BOOL hasNodeId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *engineId;
/** Test to see if @c engineId has been set. */
@property(nonatomic, readwrite) BOOL hasEngineId;

@end

#pragma mark - Answer

typedef GPB_ENUM(Answer_FieldNumber) {
  Answer_FieldNumber_AnswerId = 1,
  Answer_FieldNumber_RequestId = 2,
  Answer_FieldNumber_Received = 3,
  Answer_FieldNumber_Created = 4,
  Answer_FieldNumber_Meta = 6,
  Answer_FieldNumber_ArtifactsArray = 7,
};

/**
 * An Answer is a response to a Request. It is a set of Artifacts, which can be
 * of any type and forwarded to the client or the next stage.
 **/
GPB_FINAL @interface Answer : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *answerId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *requestId;

@property(nonatomic, readwrite) uint64_t received;

@property(nonatomic, readwrite) uint64_t created;

@property(nonatomic, readwrite, strong, null_resettable) AnswerMeta *meta;
/** Test to see if @c meta has been set. */
@property(nonatomic, readwrite) BOOL hasMeta;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Artifact*> *artifactsArray;
/** The number of items in @c artifactsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger artifactsArray_Count;

@end

#pragma mark - Request

typedef GPB_ENUM(Request_FieldNumber) {
  Request_FieldNumber_EngineId = 1,
  Request_FieldNumber_RequestId = 2,
  Request_FieldNumber_RequestedType = 3,
  Request_FieldNumber_PromptArray = 4,
  Request_FieldNumber_Image = 5,
  Request_FieldNumber_Conditioner = 6,
  Request_FieldNumber_Classifier = 7,
  Request_FieldNumber_Asset = 8,
};

typedef GPB_ENUM(Request_Params_OneOfCase) {
  Request_Params_OneOfCase_GPBUnsetOneOfCase = 0,
  Request_Params_OneOfCase_Image = 5,
  Request_Params_OneOfCase_Classifier = 7,
  Request_Params_OneOfCase_Asset = 8,
};

/**
 * A Request is a set of Artifacts, which can be of any type with model or
 * transform parameters. It is sent to the server, which will respond with an
 * Answer.
 **/
GPB_FINAL @interface Request : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *engineId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *requestId;

@property(nonatomic, readwrite) ArtifactType requestedType;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Prompt*> *promptArray;
/** The number of items in @c promptArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger promptArray_Count;

@property(nonatomic, readonly) Request_Params_OneOfCase paramsOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) ImageParameters *image;

@property(nonatomic, readwrite, strong, null_resettable) ClassifierParameters *classifier;

@property(nonatomic, readwrite, strong, null_resettable) AssetParameters *asset;

@property(nonatomic, readwrite, strong, null_resettable) ConditionerParameters *conditioner;
/** Test to see if @c conditioner has been set. */
@property(nonatomic, readwrite) BOOL hasConditioner;

@end

/**
 * Fetches the raw value of a @c Request's @c requestedType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Request_RequestedType_RawValue(Request *message);
/**
 * Sets the raw value of an @c Request's @c requestedType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRequest_RequestedType_RawValue(Request *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'params'.
 **/
void Request_ClearParamsOneOfCase(Request *message);

#pragma mark - OnStatus

typedef GPB_ENUM(OnStatus_FieldNumber) {
  OnStatus_FieldNumber_ReasonArray = 1,
  OnStatus_FieldNumber_Target = 2,
  OnStatus_FieldNumber_ActionArray = 3,
};

GPB_FINAL @interface OnStatus : GPBMessage

// |reasonArray| contains |FinishReason|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *reasonArray;
/** The number of items in @c reasonArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger reasonArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *target;
/** Test to see if @c target has been set. */
@property(nonatomic, readwrite) BOOL hasTarget;

// |actionArray| contains |StageAction|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *actionArray;
/** The number of items in @c actionArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger actionArray_Count;

@end

#pragma mark - Stage

typedef GPB_ENUM(Stage_FieldNumber) {
  Stage_FieldNumber_Id_p = 1,
  Stage_FieldNumber_Request = 2,
  Stage_FieldNumber_OnStatusArray = 3,
};

GPB_FINAL @interface Stage : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, strong, null_resettable) Request *request;
/** Test to see if @c request has been set. */
@property(nonatomic, readwrite) BOOL hasRequest;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OnStatus*> *onStatusArray;
/** The number of items in @c onStatusArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger onStatusArray_Count;

@end

#pragma mark - ChainRequest

typedef GPB_ENUM(ChainRequest_FieldNumber) {
  ChainRequest_FieldNumber_RequestId = 1,
  ChainRequest_FieldNumber_StageArray = 2,
};

GPB_FINAL @interface ChainRequest : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *requestId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Stage*> *stageArray;
/** The number of items in @c stageArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger stageArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// Code generated by gRPC proto compiler.  DO NOT EDIT!
// source: dashboard.proto

#if !defined(GPB_GRPC_PROTOCOL_ONLY) || !GPB_GRPC_PROTOCOL_ONLY
#import "Dashboard.pbrpc.h"
#import "Dashboard.pbobjc.h"
#import <ProtoRPC/ProtoRPCLegacy.h>
#import <RxLibrary/GRXWriter+Immediate.h>


@implementation DashboardService

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wobjc-designated-initializers"

// Designated initializer
- (instancetype)initWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [super initWithHost:host
                 packageName:@"gooseai"
                 serviceName:@"DashboardService"
                 callOptions:callOptions];
}

- (instancetype)initWithHost:(NSString *)host {
  return [super initWithHost:host
                 packageName:@"gooseai"
                 serviceName:@"DashboardService"];
}

#pragma clang diagnostic pop

// Override superclass initializer to disallow different package and service names.
- (instancetype)initWithHost:(NSString *)host
                 packageName:(NSString *)packageName
                 serviceName:(NSString *)serviceName {
  return [self initWithHost:host];
}

- (instancetype)initWithHost:(NSString *)host
                 packageName:(NSString *)packageName
                 serviceName:(NSString *)serviceName
                 callOptions:(GRPCCallOptions *)callOptions {
  return [self initWithHost:host callOptions:callOptions];
}

#pragma mark - Class Methods

+ (instancetype)serviceWithHost:(NSString *)host {
  return [[self alloc] initWithHost:host];
}

+ (instancetype)serviceWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [[self alloc] initWithHost:host callOptions:callOptions];
}

#pragma mark - Method Implementations

#pragma mark GetMe(EmptyRequest) returns (User)

/**
 * Get info
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)getMeWithRequest:(EmptyRequest *)request handler:(void(^)(User *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToGetMeWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * Get info
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToGetMeWithRequest:(EmptyRequest *)request handler:(void(^)(User *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"GetMe"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[User class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * Get info
 */
- (GRPCUnaryProtoCall *)getMeWithMessage:(EmptyRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"GetMe"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[User class]];
}

#pragma mark GetOrganization(GetOrganizationRequest) returns (Organization)

- (void)getOrganizationWithRequest:(GetOrganizationRequest *)request handler:(void(^)(Organization *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToGetOrganizationWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToGetOrganizationWithRequest:(GetOrganizationRequest *)request handler:(void(^)(Organization *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"GetOrganization"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Organization class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getOrganizationWithMessage:(GetOrganizationRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"GetOrganization"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Organization class]];
}

#pragma mark GetMetrics(GetMetricsRequest) returns (Metrics)

- (void)getMetricsWithRequest:(GetMetricsRequest *)request handler:(void(^)(Metrics *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToGetMetricsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToGetMetricsWithRequest:(GetMetricsRequest *)request handler:(void(^)(Metrics *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"GetMetrics"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Metrics class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getMetricsWithMessage:(GetMetricsRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"GetMetrics"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Metrics class]];
}

#pragma mark CreateAPIKey(APIKeyRequest) returns (APIKey)

/**
 * API key management
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)createAPIKeyWithRequest:(APIKeyRequest *)request handler:(void(^)(APIKey *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToCreateAPIKeyWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * API key management
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToCreateAPIKeyWithRequest:(APIKeyRequest *)request handler:(void(^)(APIKey *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"CreateAPIKey"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[APIKey class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * API key management
 */
- (GRPCUnaryProtoCall *)createAPIKeyWithMessage:(APIKeyRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"CreateAPIKey"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[APIKey class]];
}

#pragma mark DeleteAPIKey(APIKeyFindRequest) returns (APIKey)

- (void)deleteAPIKeyWithRequest:(APIKeyFindRequest *)request handler:(void(^)(APIKey *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToDeleteAPIKeyWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToDeleteAPIKeyWithRequest:(APIKeyFindRequest *)request handler:(void(^)(APIKey *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"DeleteAPIKey"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[APIKey class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)deleteAPIKeyWithMessage:(APIKeyFindRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"DeleteAPIKey"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[APIKey class]];
}

#pragma mark UpdateDefaultOrganization(UpdateDefaultOrganizationRequest) returns (User)

/**
 * User settings
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)updateDefaultOrganizationWithRequest:(UpdateDefaultOrganizationRequest *)request handler:(void(^)(User *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToUpdateDefaultOrganizationWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * User settings
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToUpdateDefaultOrganizationWithRequest:(UpdateDefaultOrganizationRequest *)request handler:(void(^)(User *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"UpdateDefaultOrganization"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[User class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * User settings
 */
- (GRPCUnaryProtoCall *)updateDefaultOrganizationWithMessage:(UpdateDefaultOrganizationRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"UpdateDefaultOrganization"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[User class]];
}

#pragma mark GetClientSettings(EmptyRequest) returns (ClientSettings)

- (void)getClientSettingsWithRequest:(EmptyRequest *)request handler:(void(^)(ClientSettings *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToGetClientSettingsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToGetClientSettingsWithRequest:(EmptyRequest *)request handler:(void(^)(ClientSettings *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"GetClientSettings"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ClientSettings class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getClientSettingsWithMessage:(EmptyRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"GetClientSettings"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ClientSettings class]];
}

#pragma mark SetClientSettings(ClientSettings) returns (ClientSettings)

- (void)setClientSettingsWithRequest:(ClientSettings *)request handler:(void(^)(ClientSettings *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToSetClientSettingsWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToSetClientSettingsWithRequest:(ClientSettings *)request handler:(void(^)(ClientSettings *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"SetClientSettings"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[ClientSettings class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)setClientSettingsWithMessage:(ClientSettings *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"SetClientSettings"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[ClientSettings class]];
}

#pragma mark UpdateUserInfo(UpdateUserInfoRequest) returns (User)

- (void)updateUserInfoWithRequest:(UpdateUserInfoRequest *)request handler:(void(^)(User *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToUpdateUserInfoWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToUpdateUserInfoWithRequest:(UpdateUserInfoRequest *)request handler:(void(^)(User *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"UpdateUserInfo"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[User class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)updateUserInfoWithMessage:(UpdateUserInfoRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"UpdateUserInfo"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[User class]];
}

#pragma mark CreatePasswordChangeTicket(EmptyRequest) returns (UserPasswordChangeTicket)

- (void)createPasswordChangeTicketWithRequest:(EmptyRequest *)request handler:(void(^)(UserPasswordChangeTicket *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToCreatePasswordChangeTicketWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToCreatePasswordChangeTicketWithRequest:(EmptyRequest *)request handler:(void(^)(UserPasswordChangeTicket *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"CreatePasswordChangeTicket"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[UserPasswordChangeTicket class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)createPasswordChangeTicketWithMessage:(EmptyRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"CreatePasswordChangeTicket"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[UserPasswordChangeTicket class]];
}

#pragma mark DeleteAccount(EmptyRequest) returns (User)

- (void)deleteAccountWithRequest:(EmptyRequest *)request handler:(void(^)(User *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToDeleteAccountWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToDeleteAccountWithRequest:(EmptyRequest *)request handler:(void(^)(User *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"DeleteAccount"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[User class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)deleteAccountWithMessage:(EmptyRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"DeleteAccount"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[User class]];
}

#pragma mark CreateCharge(CreateChargeRequest) returns (Charge)

/**
 * Payment functions
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)createChargeWithRequest:(CreateChargeRequest *)request handler:(void(^)(Charge *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToCreateChargeWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
/**
 * Payment functions
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToCreateChargeWithRequest:(CreateChargeRequest *)request handler:(void(^)(Charge *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"CreateCharge"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Charge class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
/**
 * Payment functions
 */
- (GRPCUnaryProtoCall *)createChargeWithMessage:(CreateChargeRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"CreateCharge"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Charge class]];
}

#pragma mark GetCharges(GetChargesRequest) returns (Charges)

- (void)getChargesWithRequest:(GetChargesRequest *)request handler:(void(^)(Charges *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToGetChargesWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToGetChargesWithRequest:(GetChargesRequest *)request handler:(void(^)(Charges *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"GetCharges"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[Charges class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getChargesWithMessage:(GetChargesRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"GetCharges"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[Charges class]];
}

#pragma mark CreateAutoChargeIntent(CreateAutoChargeIntentRequest) returns (AutoChargeIntent)

- (void)createAutoChargeIntentWithRequest:(CreateAutoChargeIntentRequest *)request handler:(void(^)(AutoChargeIntent *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToCreateAutoChargeIntentWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToCreateAutoChargeIntentWithRequest:(CreateAutoChargeIntentRequest *)request handler:(void(^)(AutoChargeIntent *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"CreateAutoChargeIntent"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[AutoChargeIntent class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)createAutoChargeIntentWithMessage:(CreateAutoChargeIntentRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"CreateAutoChargeIntent"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[AutoChargeIntent class]];
}

#pragma mark UpdateAutoChargeIntent(CreateAutoChargeIntentRequest) returns (AutoChargeIntent)

- (void)updateAutoChargeIntentWithRequest:(CreateAutoChargeIntentRequest *)request handler:(void(^)(AutoChargeIntent *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToUpdateAutoChargeIntentWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToUpdateAutoChargeIntentWithRequest:(CreateAutoChargeIntentRequest *)request handler:(void(^)(AutoChargeIntent *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"UpdateAutoChargeIntent"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[AutoChargeIntent class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)updateAutoChargeIntentWithMessage:(CreateAutoChargeIntentRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"UpdateAutoChargeIntent"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[AutoChargeIntent class]];
}

#pragma mark GetAutoChargeIntent(GetAutoChargeRequest) returns (AutoChargeIntent)

- (void)getAutoChargeIntentWithRequest:(GetAutoChargeRequest *)request handler:(void(^)(AutoChargeIntent *_Nullable response, NSError *_Nullable error))handler{
  [[self RPCToGetAutoChargeIntentWithRequest:request handler:handler] start];
}
// Returns a not-yet-started RPC object.
- (GRPCProtoCall *)RPCToGetAutoChargeIntentWithRequest:(GetAutoChargeRequest *)request handler:(void(^)(AutoChargeIntent *_Nullable response, NSError *_Nullable error))handler{
  return [self RPCToMethod:@"GetAutoChargeIntent"
            requestsWriter:[GRXWriter writerWithValue:request]
             responseClass:[AutoChargeIntent class]
        responsesWriteable:[GRXWriteable writeableWithSingleHandler:handler]];
}
- (GRPCUnaryProtoCall *)getAutoChargeIntentWithMessage:(GetAutoChargeRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions {
  return [self RPCToMethod:@"GetAutoChargeIntent"
                   message:message
           responseHandler:handler
               callOptions:callOptions
             responseClass:[AutoChargeIntent class]];
}

@end
#endif

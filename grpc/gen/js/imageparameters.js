// source: generation.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.gooseai.ImageParameters');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.gooseai.StepParameter');
goog.require('proto.gooseai.TransformType');

goog.forwardDeclare('proto.gooseai.MaskedAreaInit');
goog.forwardDeclare('proto.gooseai.WeightMethod');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gooseai.ImageParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gooseai.ImageParameters.repeatedFields_, null);
};
goog.inherits(proto.gooseai.ImageParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gooseai.ImageParameters.displayName = 'proto.gooseai.ImageParameters';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gooseai.ImageParameters.repeatedFields_ = [3,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gooseai.ImageParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.gooseai.ImageParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gooseai.ImageParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gooseai.ImageParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    height: jspb.Message.getFieldWithDefault(msg, 1, 0),
    width: jspb.Message.getFieldWithDefault(msg, 2, 0),
    seedList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    samples: jspb.Message.getFieldWithDefault(msg, 4, 0),
    steps: jspb.Message.getFieldWithDefault(msg, 5, 0),
    transform: (f = msg.getTransform()) && proto.gooseai.TransformType.toObject(includeInstance, f),
    parametersList: jspb.Message.toObjectList(msg.getParametersList(),
    proto.gooseai.StepParameter.toObject, includeInstance),
    maskedAreaInit: jspb.Message.getFieldWithDefault(msg, 8, 0),
    weightMethod: jspb.Message.getFieldWithDefault(msg, 9, 0),
    quantize: jspb.Message.getBooleanFieldWithDefault(msg, 10, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gooseai.ImageParameters}
 */
proto.gooseai.ImageParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gooseai.ImageParameters;
  return proto.gooseai.ImageParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gooseai.ImageParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gooseai.ImageParameters}
 */
proto.gooseai.ImageParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHeight(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setWidth(value);
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSeed(values[i]);
      }
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSamples(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSteps(value);
      break;
    case 6:
      var value = new proto.gooseai.TransformType;
      reader.readMessage(value,proto.gooseai.TransformType.deserializeBinaryFromReader);
      msg.setTransform(value);
      break;
    case 7:
      var value = new proto.gooseai.StepParameter;
      reader.readMessage(value,proto.gooseai.StepParameter.deserializeBinaryFromReader);
      msg.addParameters(value);
      break;
    case 8:
      var value = /** @type {!proto.gooseai.MaskedAreaInit} */ (reader.readEnum());
      msg.setMaskedAreaInit(value);
      break;
    case 9:
      var value = /** @type {!proto.gooseai.WeightMethod} */ (reader.readEnum());
      msg.setWeightMethod(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setQuantize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gooseai.ImageParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gooseai.ImageParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gooseai.ImageParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gooseai.ImageParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getSeedList();
  if (f.length > 0) {
    writer.writePackedUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getTransform();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.gooseai.TransformType.serializeBinaryToWriter
    );
  }
  f = message.getParametersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.gooseai.StepParameter.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.gooseai.MaskedAreaInit} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = /** @type {!proto.gooseai.WeightMethod} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional uint64 height = 1;
 * @return {number}
 */
proto.gooseai.ImageParameters.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gooseai.ImageParameters} returns this
 */
proto.gooseai.ImageParameters.prototype.setHeight = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gooseai.ImageParameters} returns this
 */
proto.gooseai.ImageParameters.prototype.clearHeight = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gooseai.ImageParameters.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 width = 2;
 * @return {number}
 */
proto.gooseai.ImageParameters.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.gooseai.ImageParameters} returns this
 */
proto.gooseai.ImageParameters.prototype.setWidth = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gooseai.ImageParameters} returns this
 */
proto.gooseai.ImageParameters.prototype.clearWidth = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gooseai.ImageParameters.prototype.hasWidth = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated uint32 seed = 3;
 * @return {!Array<number>}
 */
proto.gooseai.ImageParameters.prototype.getSeedList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.gooseai.ImageParameters} returns this
 */
proto.gooseai.ImageParameters.prototype.setSeedList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.gooseai.ImageParameters} returns this
 */
proto.gooseai.ImageParameters.prototype.addSeed = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gooseai.ImageParameters} returns this
 */
proto.gooseai.ImageParameters.prototype.clearSeedList = function() {
  return this.setSeedList([]);
};


/**
 * optional uint64 samples = 4;
 * @return {number}
 */
proto.gooseai.ImageParameters.prototype.getSamples = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.gooseai.ImageParameters} returns this
 */
proto.gooseai.ImageParameters.prototype.setSamples = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gooseai.ImageParameters} returns this
 */
proto.gooseai.ImageParameters.prototype.clearSamples = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gooseai.ImageParameters.prototype.hasSamples = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 steps = 5;
 * @return {number}
 */
proto.gooseai.ImageParameters.prototype.getSteps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.gooseai.ImageParameters} returns this
 */
proto.gooseai.ImageParameters.prototype.setSteps = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gooseai.ImageParameters} returns this
 */
proto.gooseai.ImageParameters.prototype.clearSteps = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gooseai.ImageParameters.prototype.hasSteps = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional TransformType transform = 6;
 * @return {?proto.gooseai.TransformType}
 */
proto.gooseai.ImageParameters.prototype.getTransform = function() {
  return /** @type{?proto.gooseai.TransformType} */ (
    jspb.Message.getWrapperField(this, proto.gooseai.TransformType, 6));
};


/**
 * @param {?proto.gooseai.TransformType|undefined} value
 * @return {!proto.gooseai.ImageParameters} returns this
*/
proto.gooseai.ImageParameters.prototype.setTransform = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gooseai.ImageParameters} returns this
 */
proto.gooseai.ImageParameters.prototype.clearTransform = function() {
  return this.setTransform(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gooseai.ImageParameters.prototype.hasTransform = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated StepParameter parameters = 7;
 * @return {!Array<!proto.gooseai.StepParameter>}
 */
proto.gooseai.ImageParameters.prototype.getParametersList = function() {
  return /** @type{!Array<!proto.gooseai.StepParameter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gooseai.StepParameter, 7));
};


/**
 * @param {!Array<!proto.gooseai.StepParameter>} value
 * @return {!proto.gooseai.ImageParameters} returns this
*/
proto.gooseai.ImageParameters.prototype.setParametersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.gooseai.StepParameter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gooseai.StepParameter}
 */
proto.gooseai.ImageParameters.prototype.addParameters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.gooseai.StepParameter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gooseai.ImageParameters} returns this
 */
proto.gooseai.ImageParameters.prototype.clearParametersList = function() {
  return this.setParametersList([]);
};


/**
 * optional MaskedAreaInit masked_area_init = 8;
 * @return {!proto.gooseai.MaskedAreaInit}
 */
proto.gooseai.ImageParameters.prototype.getMaskedAreaInit = function() {
  return /** @type {!proto.gooseai.MaskedAreaInit} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.gooseai.MaskedAreaInit} value
 * @return {!proto.gooseai.ImageParameters} returns this
 */
proto.gooseai.ImageParameters.prototype.setMaskedAreaInit = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gooseai.ImageParameters} returns this
 */
proto.gooseai.ImageParameters.prototype.clearMaskedAreaInit = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gooseai.ImageParameters.prototype.hasMaskedAreaInit = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional WeightMethod weight_method = 9;
 * @return {!proto.gooseai.WeightMethod}
 */
proto.gooseai.ImageParameters.prototype.getWeightMethod = function() {
  return /** @type {!proto.gooseai.WeightMethod} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.gooseai.WeightMethod} value
 * @return {!proto.gooseai.ImageParameters} returns this
 */
proto.gooseai.ImageParameters.prototype.setWeightMethod = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gooseai.ImageParameters} returns this
 */
proto.gooseai.ImageParameters.prototype.clearWeightMethod = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gooseai.ImageParameters.prototype.hasWeightMethod = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool quantize = 10;
 * @return {boolean}
 */
proto.gooseai.ImageParameters.prototype.getQuantize = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gooseai.ImageParameters} returns this
 */
proto.gooseai.ImageParameters.prototype.setQuantize = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gooseai.ImageParameters} returns this
 */
proto.gooseai.ImageParameters.prototype.clearQuantize = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gooseai.ImageParameters.prototype.hasQuantize = function() {
  return jspb.Message.getField(this, 10) != null;
};



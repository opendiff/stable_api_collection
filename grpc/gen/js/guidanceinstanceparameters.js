// source: generation.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.gooseai.GuidanceInstanceParameters');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.gooseai.CutoutParameters');
goog.require('proto.gooseai.GuidanceScheduleParameters');
goog.require('proto.gooseai.Model');
goog.require('proto.gooseai.Prompt');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gooseai.GuidanceInstanceParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gooseai.GuidanceInstanceParameters.repeatedFields_, null);
};
goog.inherits(proto.gooseai.GuidanceInstanceParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gooseai.GuidanceInstanceParameters.displayName = 'proto.gooseai.GuidanceInstanceParameters';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gooseai.GuidanceInstanceParameters.repeatedFields_ = [2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gooseai.GuidanceInstanceParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.gooseai.GuidanceInstanceParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gooseai.GuidanceInstanceParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gooseai.GuidanceInstanceParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelsList: jspb.Message.toObjectList(msg.getModelsList(),
    proto.gooseai.Model.toObject, includeInstance),
    guidanceStrength: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    scheduleList: jspb.Message.toObjectList(msg.getScheduleList(),
    proto.gooseai.GuidanceScheduleParameters.toObject, includeInstance),
    cutouts: (f = msg.getCutouts()) && proto.gooseai.CutoutParameters.toObject(includeInstance, f),
    prompt: (f = msg.getPrompt()) && proto.gooseai.Prompt.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gooseai.GuidanceInstanceParameters}
 */
proto.gooseai.GuidanceInstanceParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gooseai.GuidanceInstanceParameters;
  return proto.gooseai.GuidanceInstanceParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gooseai.GuidanceInstanceParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gooseai.GuidanceInstanceParameters}
 */
proto.gooseai.GuidanceInstanceParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.gooseai.Model;
      reader.readMessage(value,proto.gooseai.Model.deserializeBinaryFromReader);
      msg.addModels(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setGuidanceStrength(value);
      break;
    case 4:
      var value = new proto.gooseai.GuidanceScheduleParameters;
      reader.readMessage(value,proto.gooseai.GuidanceScheduleParameters.deserializeBinaryFromReader);
      msg.addSchedule(value);
      break;
    case 5:
      var value = new proto.gooseai.CutoutParameters;
      reader.readMessage(value,proto.gooseai.CutoutParameters.deserializeBinaryFromReader);
      msg.setCutouts(value);
      break;
    case 6:
      var value = new proto.gooseai.Prompt;
      reader.readMessage(value,proto.gooseai.Prompt.deserializeBinaryFromReader);
      msg.setPrompt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gooseai.GuidanceInstanceParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gooseai.GuidanceInstanceParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gooseai.GuidanceInstanceParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gooseai.GuidanceInstanceParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.gooseai.Model.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getScheduleList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.gooseai.GuidanceScheduleParameters.serializeBinaryToWriter
    );
  }
  f = message.getCutouts();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.gooseai.CutoutParameters.serializeBinaryToWriter
    );
  }
  f = message.getPrompt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.gooseai.Prompt.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Model models = 2;
 * @return {!Array<!proto.gooseai.Model>}
 */
proto.gooseai.GuidanceInstanceParameters.prototype.getModelsList = function() {
  return /** @type{!Array<!proto.gooseai.Model>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gooseai.Model, 2));
};


/**
 * @param {!Array<!proto.gooseai.Model>} value
 * @return {!proto.gooseai.GuidanceInstanceParameters} returns this
*/
proto.gooseai.GuidanceInstanceParameters.prototype.setModelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.gooseai.Model=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gooseai.Model}
 */
proto.gooseai.GuidanceInstanceParameters.prototype.addModels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.gooseai.Model, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gooseai.GuidanceInstanceParameters} returns this
 */
proto.gooseai.GuidanceInstanceParameters.prototype.clearModelsList = function() {
  return this.setModelsList([]);
};


/**
 * optional float guidance_strength = 3;
 * @return {number}
 */
proto.gooseai.GuidanceInstanceParameters.prototype.getGuidanceStrength = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gooseai.GuidanceInstanceParameters} returns this
 */
proto.gooseai.GuidanceInstanceParameters.prototype.setGuidanceStrength = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gooseai.GuidanceInstanceParameters} returns this
 */
proto.gooseai.GuidanceInstanceParameters.prototype.clearGuidanceStrength = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gooseai.GuidanceInstanceParameters.prototype.hasGuidanceStrength = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated GuidanceScheduleParameters schedule = 4;
 * @return {!Array<!proto.gooseai.GuidanceScheduleParameters>}
 */
proto.gooseai.GuidanceInstanceParameters.prototype.getScheduleList = function() {
  return /** @type{!Array<!proto.gooseai.GuidanceScheduleParameters>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gooseai.GuidanceScheduleParameters, 4));
};


/**
 * @param {!Array<!proto.gooseai.GuidanceScheduleParameters>} value
 * @return {!proto.gooseai.GuidanceInstanceParameters} returns this
*/
proto.gooseai.GuidanceInstanceParameters.prototype.setScheduleList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.gooseai.GuidanceScheduleParameters=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gooseai.GuidanceScheduleParameters}
 */
proto.gooseai.GuidanceInstanceParameters.prototype.addSchedule = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.gooseai.GuidanceScheduleParameters, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gooseai.GuidanceInstanceParameters} returns this
 */
proto.gooseai.GuidanceInstanceParameters.prototype.clearScheduleList = function() {
  return this.setScheduleList([]);
};


/**
 * optional CutoutParameters cutouts = 5;
 * @return {?proto.gooseai.CutoutParameters}
 */
proto.gooseai.GuidanceInstanceParameters.prototype.getCutouts = function() {
  return /** @type{?proto.gooseai.CutoutParameters} */ (
    jspb.Message.getWrapperField(this, proto.gooseai.CutoutParameters, 5));
};


/**
 * @param {?proto.gooseai.CutoutParameters|undefined} value
 * @return {!proto.gooseai.GuidanceInstanceParameters} returns this
*/
proto.gooseai.GuidanceInstanceParameters.prototype.setCutouts = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gooseai.GuidanceInstanceParameters} returns this
 */
proto.gooseai.GuidanceInstanceParameters.prototype.clearCutouts = function() {
  return this.setCutouts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gooseai.GuidanceInstanceParameters.prototype.hasCutouts = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Prompt prompt = 6;
 * @return {?proto.gooseai.Prompt}
 */
proto.gooseai.GuidanceInstanceParameters.prototype.getPrompt = function() {
  return /** @type{?proto.gooseai.Prompt} */ (
    jspb.Message.getWrapperField(this, proto.gooseai.Prompt, 6));
};


/**
 * @param {?proto.gooseai.Prompt|undefined} value
 * @return {!proto.gooseai.GuidanceInstanceParameters} returns this
*/
proto.gooseai.GuidanceInstanceParameters.prototype.setPrompt = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gooseai.GuidanceInstanceParameters} returns this
 */
proto.gooseai.GuidanceInstanceParameters.prototype.clearPrompt = function() {
  return this.setPrompt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gooseai.GuidanceInstanceParameters.prototype.hasPrompt = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * @fileoverview gRPC-Web generated client stub for gooseai
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v0.0.0
// source: engines.proto


/* eslint-disable */
// @ts-nocheck


goog.provide('proto.gooseai.EnginesServiceClient');
goog.provide('proto.gooseai.EnginesServicePromiseClient');

goog.require('grpc.web.MethodDescriptor');
goog.require('grpc.web.MethodType');
goog.require('grpc.web.GrpcWebClientBase');
goog.require('grpc.web.AbstractClientBase');
goog.require('grpc.web.ClientReadableStream');
goog.require('grpc.web.RpcError');
goog.require('proto.gooseai.Engines');
goog.require('proto.gooseai.ListEnginesRequest');

goog.requireType('grpc.web.ClientOptions');



goog.scope(function() {

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.gooseai.EnginesServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.gooseai.EnginesServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.gooseai.ListEnginesRequest,
 *   !proto.gooseai.Engines>}
 */
const methodDescriptor_EnginesService_ListEngines = new grpc.web.MethodDescriptor(
  '/gooseai.EnginesService/ListEngines',
  grpc.web.MethodType.UNARY,
  proto.gooseai.ListEnginesRequest,
  proto.gooseai.Engines,
  /**
   * @param {!proto.gooseai.ListEnginesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.gooseai.Engines.deserializeBinary
);


/**
 * @param {!proto.gooseai.ListEnginesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.gooseai.Engines)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.gooseai.Engines>|undefined}
 *     The XHR Node Readable Stream
 */
proto.gooseai.EnginesServiceClient.prototype.listEngines =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/gooseai.EnginesService/ListEngines',
      request,
      metadata || {},
      methodDescriptor_EnginesService_ListEngines,
      callback);
};


/**
 * @param {!proto.gooseai.ListEnginesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.gooseai.Engines>}
 *     Promise that resolves to the response
 */
proto.gooseai.EnginesServicePromiseClient.prototype.listEngines =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/gooseai.EnginesService/ListEngines',
      request,
      metadata || {},
      methodDescriptor_EnginesService_ListEngines);
};


}); // goog.scope


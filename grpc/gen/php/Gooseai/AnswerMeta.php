<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: generation.proto

namespace Gooseai;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * AnswerMeta is a set of metadata about an answer, usually the operating
 * environment.
 *
 * Generated from protobuf message <code>gooseai.AnswerMeta</code>
 */
class AnswerMeta extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional string gpu_id = 1 [json_name = "gpuId"];</code>
     */
    protected $gpu_id = null;
    /**
     * Generated from protobuf field <code>optional string cpu_id = 2 [json_name = "cpuId"];</code>
     */
    protected $cpu_id = null;
    /**
     * Generated from protobuf field <code>optional string node_id = 3 [json_name = "nodeId"];</code>
     */
    protected $node_id = null;
    /**
     * Generated from protobuf field <code>optional string engine_id = 4 [json_name = "engineId"];</code>
     */
    protected $engine_id = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $gpu_id
     *     @type string $cpu_id
     *     @type string $node_id
     *     @type string $engine_id
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Generation::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional string gpu_id = 1 [json_name = "gpuId"];</code>
     * @return string
     */
    public function getGpuId()
    {
        return isset($this->gpu_id) ? $this->gpu_id : '';
    }

    public function hasGpuId()
    {
        return isset($this->gpu_id);
    }

    public function clearGpuId()
    {
        unset($this->gpu_id);
    }

    /**
     * Generated from protobuf field <code>optional string gpu_id = 1 [json_name = "gpuId"];</code>
     * @param string $var
     * @return $this
     */
    public function setGpuId($var)
    {
        GPBUtil::checkString($var, True);
        $this->gpu_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string cpu_id = 2 [json_name = "cpuId"];</code>
     * @return string
     */
    public function getCpuId()
    {
        return isset($this->cpu_id) ? $this->cpu_id : '';
    }

    public function hasCpuId()
    {
        return isset($this->cpu_id);
    }

    public function clearCpuId()
    {
        unset($this->cpu_id);
    }

    /**
     * Generated from protobuf field <code>optional string cpu_id = 2 [json_name = "cpuId"];</code>
     * @param string $var
     * @return $this
     */
    public function setCpuId($var)
    {
        GPBUtil::checkString($var, True);
        $this->cpu_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string node_id = 3 [json_name = "nodeId"];</code>
     * @return string
     */
    public function getNodeId()
    {
        return isset($this->node_id) ? $this->node_id : '';
    }

    public function hasNodeId()
    {
        return isset($this->node_id);
    }

    public function clearNodeId()
    {
        unset($this->node_id);
    }

    /**
     * Generated from protobuf field <code>optional string node_id = 3 [json_name = "nodeId"];</code>
     * @param string $var
     * @return $this
     */
    public function setNodeId($var)
    {
        GPBUtil::checkString($var, True);
        $this->node_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string engine_id = 4 [json_name = "engineId"];</code>
     * @return string
     */
    public function getEngineId()
    {
        return isset($this->engine_id) ? $this->engine_id : '';
    }

    public function hasEngineId()
    {
        return isset($this->engine_id);
    }

    public function clearEngineId()
    {
        unset($this->engine_id);
    }

    /**
     * Generated from protobuf field <code>optional string engine_id = 4 [json_name = "engineId"];</code>
     * @param string $var
     * @return $this
     */
    public function setEngineId($var)
    {
        GPBUtil::checkString($var, True);
        $this->engine_id = $var;

        return $this;
    }

}


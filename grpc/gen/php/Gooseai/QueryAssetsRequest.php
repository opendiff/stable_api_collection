<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: project.proto

namespace Gooseai;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>gooseai.QueryAssetsRequest</code>
 */
class QueryAssetsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * ID of the project to request, UUIDv4, empty string uses default project
     *
     * Generated from protobuf field <code>string id = 1 [json_name = "id"];</code>
     */
    protected $id = '';
    /**
     * The ID of the organization owning the assets, unset for default org for user
     *
     * Generated from protobuf field <code>optional string owner_id = 2 [json_name = "ownerId"];</code>
     */
    protected $owner_id = null;
    /**
     * The time (UTC seconds epoch) to start listing assets from, unset for no restriction
     *
     * Generated from protobuf field <code>optional uint64 since = 3 [json_name = "since"];</code>
     */
    protected $since = null;
    /**
     * The time (UTC seconds epoch) to stop listing assets at, unset for no restriction
     *
     * Generated from protobuf field <code>optional uint64 until = 4 [json_name = "until"];</code>
     */
    protected $until = null;
    /**
     * The maximum number of assets to return, unset for no limit
     *
     * Generated from protobuf field <code>optional uint64 limit = 5 [json_name = "limit"];</code>
     */
    protected $limit = null;
    /**
     * The key to start from, used to paginate results, unset for no offset
     *
     * Generated from protobuf field <code>optional string start_key = 6 [json_name = "startKey"];</code>
     */
    protected $start_key = null;
    /**
     * The asset usage to filter the assets returned, empty for no filter
     *
     * Generated from protobuf field <code>repeated .gooseai.ProjectAssetUse use = 7 [json_name = "use"];</code>
     */
    private $use;
    /**
     * The sort direction based on asset creation time, default is descending
     *
     * Generated from protobuf field <code>.gooseai.ProjectSortDir sort_dir = 8 [json_name = "sortDir"];</code>
     */
    protected $sort_dir = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           ID of the project to request, UUIDv4, empty string uses default project
     *     @type string $owner_id
     *           The ID of the organization owning the assets, unset for default org for user
     *     @type int|string $since
     *           The time (UTC seconds epoch) to start listing assets from, unset for no restriction
     *     @type int|string $until
     *           The time (UTC seconds epoch) to stop listing assets at, unset for no restriction
     *     @type int|string $limit
     *           The maximum number of assets to return, unset for no limit
     *     @type string $start_key
     *           The key to start from, used to paginate results, unset for no offset
     *     @type array<int>|\Google\Protobuf\Internal\RepeatedField $use
     *           The asset usage to filter the assets returned, empty for no filter
     *     @type int $sort_dir
     *           The sort direction based on asset creation time, default is descending
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Project::initOnce();
        parent::__construct($data);
    }

    /**
     * ID of the project to request, UUIDv4, empty string uses default project
     *
     * Generated from protobuf field <code>string id = 1 [json_name = "id"];</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * ID of the project to request, UUIDv4, empty string uses default project
     *
     * Generated from protobuf field <code>string id = 1 [json_name = "id"];</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * The ID of the organization owning the assets, unset for default org for user
     *
     * Generated from protobuf field <code>optional string owner_id = 2 [json_name = "ownerId"];</code>
     * @return string
     */
    public function getOwnerId()
    {
        return isset($this->owner_id) ? $this->owner_id : '';
    }

    public function hasOwnerId()
    {
        return isset($this->owner_id);
    }

    public function clearOwnerId()
    {
        unset($this->owner_id);
    }

    /**
     * The ID of the organization owning the assets, unset for default org for user
     *
     * Generated from protobuf field <code>optional string owner_id = 2 [json_name = "ownerId"];</code>
     * @param string $var
     * @return $this
     */
    public function setOwnerId($var)
    {
        GPBUtil::checkString($var, True);
        $this->owner_id = $var;

        return $this;
    }

    /**
     * The time (UTC seconds epoch) to start listing assets from, unset for no restriction
     *
     * Generated from protobuf field <code>optional uint64 since = 3 [json_name = "since"];</code>
     * @return int|string
     */
    public function getSince()
    {
        return isset($this->since) ? $this->since : 0;
    }

    public function hasSince()
    {
        return isset($this->since);
    }

    public function clearSince()
    {
        unset($this->since);
    }

    /**
     * The time (UTC seconds epoch) to start listing assets from, unset for no restriction
     *
     * Generated from protobuf field <code>optional uint64 since = 3 [json_name = "since"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setSince($var)
    {
        GPBUtil::checkUint64($var);
        $this->since = $var;

        return $this;
    }

    /**
     * The time (UTC seconds epoch) to stop listing assets at, unset for no restriction
     *
     * Generated from protobuf field <code>optional uint64 until = 4 [json_name = "until"];</code>
     * @return int|string
     */
    public function getUntil()
    {
        return isset($this->until) ? $this->until : 0;
    }

    public function hasUntil()
    {
        return isset($this->until);
    }

    public function clearUntil()
    {
        unset($this->until);
    }

    /**
     * The time (UTC seconds epoch) to stop listing assets at, unset for no restriction
     *
     * Generated from protobuf field <code>optional uint64 until = 4 [json_name = "until"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setUntil($var)
    {
        GPBUtil::checkUint64($var);
        $this->until = $var;

        return $this;
    }

    /**
     * The maximum number of assets to return, unset for no limit
     *
     * Generated from protobuf field <code>optional uint64 limit = 5 [json_name = "limit"];</code>
     * @return int|string
     */
    public function getLimit()
    {
        return isset($this->limit) ? $this->limit : 0;
    }

    public function hasLimit()
    {
        return isset($this->limit);
    }

    public function clearLimit()
    {
        unset($this->limit);
    }

    /**
     * The maximum number of assets to return, unset for no limit
     *
     * Generated from protobuf field <code>optional uint64 limit = 5 [json_name = "limit"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setLimit($var)
    {
        GPBUtil::checkUint64($var);
        $this->limit = $var;

        return $this;
    }

    /**
     * The key to start from, used to paginate results, unset for no offset
     *
     * Generated from protobuf field <code>optional string start_key = 6 [json_name = "startKey"];</code>
     * @return string
     */
    public function getStartKey()
    {
        return isset($this->start_key) ? $this->start_key : '';
    }

    public function hasStartKey()
    {
        return isset($this->start_key);
    }

    public function clearStartKey()
    {
        unset($this->start_key);
    }

    /**
     * The key to start from, used to paginate results, unset for no offset
     *
     * Generated from protobuf field <code>optional string start_key = 6 [json_name = "startKey"];</code>
     * @param string $var
     * @return $this
     */
    public function setStartKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->start_key = $var;

        return $this;
    }

    /**
     * The asset usage to filter the assets returned, empty for no filter
     *
     * Generated from protobuf field <code>repeated .gooseai.ProjectAssetUse use = 7 [json_name = "use"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getUse()
    {
        return $this->use;
    }

    /**
     * The asset usage to filter the assets returned, empty for no filter
     *
     * Generated from protobuf field <code>repeated .gooseai.ProjectAssetUse use = 7 [json_name = "use"];</code>
     * @param array<int>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setUse($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::ENUM, \Gooseai\ProjectAssetUse::class);
        $this->use = $arr;

        return $this;
    }

    /**
     * The sort direction based on asset creation time, default is descending
     *
     * Generated from protobuf field <code>.gooseai.ProjectSortDir sort_dir = 8 [json_name = "sortDir"];</code>
     * @return int
     */
    public function getSortDir()
    {
        return $this->sort_dir;
    }

    /**
     * The sort direction based on asset creation time, default is descending
     *
     * Generated from protobuf field <code>.gooseai.ProjectSortDir sort_dir = 8 [json_name = "sortDir"];</code>
     * @param int $var
     * @return $this
     */
    public function setSortDir($var)
    {
        GPBUtil::checkEnum($var, \Gooseai\ProjectSortDir::class);
        $this->sort_dir = $var;

        return $this;
    }

}


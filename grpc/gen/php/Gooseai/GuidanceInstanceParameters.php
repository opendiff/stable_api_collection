<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: generation.proto

namespace Gooseai;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Parameters that affect the behavior of the guidance, typically used for CLIP.
 * We can specify more than one model, and the guidance will be a weighted sum
 * of the models.
 *
 * Generated from protobuf message <code>gooseai.GuidanceInstanceParameters</code>
 */
class GuidanceInstanceParameters extends \Google\Protobuf\Internal\Message
{
    /**
     * models to use for this set
     *
     * Generated from protobuf field <code>repeated .gooseai.Model models = 2 [json_name = "models"];</code>
     */
    private $models;
    /**
     * 0.0 to 1.0, usually 0.05 to 0.225
     *
     * Generated from protobuf field <code>optional float guidance_strength = 3 [json_name = "guidanceStrength"];</code>
     */
    protected $guidance_strength = null;
    /**
     * when to apply guidance
     *
     * Generated from protobuf field <code>repeated .gooseai.GuidanceScheduleParameters schedule = 4 [json_name = "schedule"];</code>
     */
    private $schedule;
    /**
     * cutout parameters
     *
     * Generated from protobuf field <code>optional .gooseai.CutoutParameters cutouts = 5 [json_name = "cutouts"];</code>
     */
    protected $cutouts = null;
    /**
     * prompt to use for guidance
     *
     * Generated from protobuf field <code>optional .gooseai.Prompt prompt = 6 [json_name = "prompt"];</code>
     */
    protected $prompt = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<\Gooseai\Model>|\Google\Protobuf\Internal\RepeatedField $models
     *           models to use for this set
     *     @type float $guidance_strength
     *           0.0 to 1.0, usually 0.05 to 0.225
     *     @type array<\Gooseai\GuidanceScheduleParameters>|\Google\Protobuf\Internal\RepeatedField $schedule
     *           when to apply guidance
     *     @type \Gooseai\CutoutParameters $cutouts
     *           cutout parameters
     *     @type \Gooseai\Prompt $prompt
     *           prompt to use for guidance
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Generation::initOnce();
        parent::__construct($data);
    }

    /**
     * models to use for this set
     *
     * Generated from protobuf field <code>repeated .gooseai.Model models = 2 [json_name = "models"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getModels()
    {
        return $this->models;
    }

    /**
     * models to use for this set
     *
     * Generated from protobuf field <code>repeated .gooseai.Model models = 2 [json_name = "models"];</code>
     * @param array<\Gooseai\Model>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setModels($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Gooseai\Model::class);
        $this->models = $arr;

        return $this;
    }

    /**
     * 0.0 to 1.0, usually 0.05 to 0.225
     *
     * Generated from protobuf field <code>optional float guidance_strength = 3 [json_name = "guidanceStrength"];</code>
     * @return float
     */
    public function getGuidanceStrength()
    {
        return isset($this->guidance_strength) ? $this->guidance_strength : 0.0;
    }

    public function hasGuidanceStrength()
    {
        return isset($this->guidance_strength);
    }

    public function clearGuidanceStrength()
    {
        unset($this->guidance_strength);
    }

    /**
     * 0.0 to 1.0, usually 0.05 to 0.225
     *
     * Generated from protobuf field <code>optional float guidance_strength = 3 [json_name = "guidanceStrength"];</code>
     * @param float $var
     * @return $this
     */
    public function setGuidanceStrength($var)
    {
        GPBUtil::checkFloat($var);
        $this->guidance_strength = $var;

        return $this;
    }

    /**
     * when to apply guidance
     *
     * Generated from protobuf field <code>repeated .gooseai.GuidanceScheduleParameters schedule = 4 [json_name = "schedule"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSchedule()
    {
        return $this->schedule;
    }

    /**
     * when to apply guidance
     *
     * Generated from protobuf field <code>repeated .gooseai.GuidanceScheduleParameters schedule = 4 [json_name = "schedule"];</code>
     * @param array<\Gooseai\GuidanceScheduleParameters>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSchedule($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Gooseai\GuidanceScheduleParameters::class);
        $this->schedule = $arr;

        return $this;
    }

    /**
     * cutout parameters
     *
     * Generated from protobuf field <code>optional .gooseai.CutoutParameters cutouts = 5 [json_name = "cutouts"];</code>
     * @return \Gooseai\CutoutParameters|null
     */
    public function getCutouts()
    {
        return $this->cutouts;
    }

    public function hasCutouts()
    {
        return isset($this->cutouts);
    }

    public function clearCutouts()
    {
        unset($this->cutouts);
    }

    /**
     * cutout parameters
     *
     * Generated from protobuf field <code>optional .gooseai.CutoutParameters cutouts = 5 [json_name = "cutouts"];</code>
     * @param \Gooseai\CutoutParameters $var
     * @return $this
     */
    public function setCutouts($var)
    {
        GPBUtil::checkMessage($var, \Gooseai\CutoutParameters::class);
        $this->cutouts = $var;

        return $this;
    }

    /**
     * prompt to use for guidance
     *
     * Generated from protobuf field <code>optional .gooseai.Prompt prompt = 6 [json_name = "prompt"];</code>
     * @return \Gooseai\Prompt|null
     */
    public function getPrompt()
    {
        return $this->prompt;
    }

    public function hasPrompt()
    {
        return isset($this->prompt);
    }

    public function clearPrompt()
    {
        unset($this->prompt);
    }

    /**
     * prompt to use for guidance
     *
     * Generated from protobuf field <code>optional .gooseai.Prompt prompt = 6 [json_name = "prompt"];</code>
     * @param \Gooseai\Prompt $var
     * @return $this
     */
    public function setPrompt($var)
    {
        GPBUtil::checkMessage($var, \Gooseai\Prompt::class);
        $this->prompt = $var;

        return $this;
    }

}


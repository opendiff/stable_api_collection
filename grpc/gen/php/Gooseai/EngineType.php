<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: engines.proto

namespace Gooseai;

use UnexpectedValueException;

/**
 * Possible engine type
 *
 * Protobuf type <code>gooseai.EngineType</code>
 */
class EngineType
{
    /**
     * Generated from protobuf enum <code>TEXT = 0;</code>
     */
    const TEXT = 0;
    /**
     * Generated from protobuf enum <code>PICTURE = 1;</code>
     */
    const PICTURE = 1;
    /**
     * Generated from protobuf enum <code>AUDIO = 2;</code>
     */
    const AUDIO = 2;
    /**
     * Generated from protobuf enum <code>VIDEO = 3;</code>
     */
    const VIDEO = 3;
    /**
     * Generated from protobuf enum <code>CLASSIFICATION = 4;</code>
     */
    const CLASSIFICATION = 4;
    /**
     * Generated from protobuf enum <code>STORAGE = 5;</code>
     */
    const STORAGE = 5;

    private static $valueToName = [
        self::TEXT => 'TEXT',
        self::PICTURE => 'PICTURE',
        self::AUDIO => 'AUDIO',
        self::VIDEO => 'VIDEO',
        self::CLASSIFICATION => 'CLASSIFICATION',
        self::STORAGE => 'STORAGE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


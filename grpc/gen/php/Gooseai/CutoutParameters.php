<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: generation.proto

namespace Gooseai;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>gooseai.CutoutParameters</code>
 */
class CutoutParameters extends \Google\Protobuf\Internal\Message
{
    /**
     * Nested cutouts, unsupported
     *
     * Generated from protobuf field <code>repeated .gooseai.CutoutParameters cutouts = 1 [json_name = "cutouts"];</code>
     */
    private $cutouts;
    /**
     * 0 to n, usually 8 to 32, 0 inner
     *
     * Generated from protobuf field <code>optional uint32 count = 2 [json_name = "count"];</code>
     */
    protected $count = null;
    /**
     * 0.0 to 1.0, defaults to 0.2
     *
     * Generated from protobuf field <code>optional float gray = 3 [json_name = "gray"];</code>
     */
    protected $gray = null;
    /**
     * percentage of cutouts to blur
     *
     * Generated from protobuf field <code>optional float blur = 4 [json_name = "blur"];</code>
     */
    protected $blur = null;
    /**
     * defaults to inner: 0.5, outer: 0.0
     *
     * Generated from protobuf field <code>optional float size_power = 5 [json_name = "sizePower"];</code>
     */
    protected $size_power = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<\Gooseai\CutoutParameters>|\Google\Protobuf\Internal\RepeatedField $cutouts
     *           Nested cutouts, unsupported
     *     @type int $count
     *           0 to n, usually 8 to 32, 0 inner
     *     @type float $gray
     *           0.0 to 1.0, defaults to 0.2
     *     @type float $blur
     *           percentage of cutouts to blur
     *     @type float $size_power
     *           defaults to inner: 0.5, outer: 0.0
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Generation::initOnce();
        parent::__construct($data);
    }

    /**
     * Nested cutouts, unsupported
     *
     * Generated from protobuf field <code>repeated .gooseai.CutoutParameters cutouts = 1 [json_name = "cutouts"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getCutouts()
    {
        return $this->cutouts;
    }

    /**
     * Nested cutouts, unsupported
     *
     * Generated from protobuf field <code>repeated .gooseai.CutoutParameters cutouts = 1 [json_name = "cutouts"];</code>
     * @param array<\Gooseai\CutoutParameters>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setCutouts($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Gooseai\CutoutParameters::class);
        $this->cutouts = $arr;

        return $this;
    }

    /**
     * 0 to n, usually 8 to 32, 0 inner
     *
     * Generated from protobuf field <code>optional uint32 count = 2 [json_name = "count"];</code>
     * @return int
     */
    public function getCount()
    {
        return isset($this->count) ? $this->count : 0;
    }

    public function hasCount()
    {
        return isset($this->count);
    }

    public function clearCount()
    {
        unset($this->count);
    }

    /**
     * 0 to n, usually 8 to 32, 0 inner
     *
     * Generated from protobuf field <code>optional uint32 count = 2 [json_name = "count"];</code>
     * @param int $var
     * @return $this
     */
    public function setCount($var)
    {
        GPBUtil::checkUint32($var);
        $this->count = $var;

        return $this;
    }

    /**
     * 0.0 to 1.0, defaults to 0.2
     *
     * Generated from protobuf field <code>optional float gray = 3 [json_name = "gray"];</code>
     * @return float
     */
    public function getGray()
    {
        return isset($this->gray) ? $this->gray : 0.0;
    }

    public function hasGray()
    {
        return isset($this->gray);
    }

    public function clearGray()
    {
        unset($this->gray);
    }

    /**
     * 0.0 to 1.0, defaults to 0.2
     *
     * Generated from protobuf field <code>optional float gray = 3 [json_name = "gray"];</code>
     * @param float $var
     * @return $this
     */
    public function setGray($var)
    {
        GPBUtil::checkFloat($var);
        $this->gray = $var;

        return $this;
    }

    /**
     * percentage of cutouts to blur
     *
     * Generated from protobuf field <code>optional float blur = 4 [json_name = "blur"];</code>
     * @return float
     */
    public function getBlur()
    {
        return isset($this->blur) ? $this->blur : 0.0;
    }

    public function hasBlur()
    {
        return isset($this->blur);
    }

    public function clearBlur()
    {
        unset($this->blur);
    }

    /**
     * percentage of cutouts to blur
     *
     * Generated from protobuf field <code>optional float blur = 4 [json_name = "blur"];</code>
     * @param float $var
     * @return $this
     */
    public function setBlur($var)
    {
        GPBUtil::checkFloat($var);
        $this->blur = $var;

        return $this;
    }

    /**
     * defaults to inner: 0.5, outer: 0.0
     *
     * Generated from protobuf field <code>optional float size_power = 5 [json_name = "sizePower"];</code>
     * @return float
     */
    public function getSizePower()
    {
        return isset($this->size_power) ? $this->size_power : 0.0;
    }

    public function hasSizePower()
    {
        return isset($this->size_power);
    }

    public function clearSizePower()
    {
        unset($this->size_power);
    }

    /**
     * defaults to inner: 0.5, outer: 0.0
     *
     * Generated from protobuf field <code>optional float size_power = 5 [json_name = "sizePower"];</code>
     * @param float $var
     * @return $this
     */
    public function setSizePower($var)
    {
        GPBUtil::checkFloat($var);
        $this->size_power = $var;

        return $this;
    }

}


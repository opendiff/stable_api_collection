<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: project.proto

namespace Gooseai;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>gooseai.GetProjectRequest</code>
 */
class GetProjectRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * ID of the project to request, UUIDv4, empty string uses default project
     *
     * Generated from protobuf field <code>string id = 1 [json_name = "id"];</code>
     */
    protected $id = '';
    /**
     * The ID of the organization owning the project, empty for default org for user
     *
     * Generated from protobuf field <code>optional string owner_id = 2 [json_name = "ownerId"];</code>
     */
    protected $owner_id = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           ID of the project to request, UUIDv4, empty string uses default project
     *     @type string $owner_id
     *           The ID of the organization owning the project, empty for default org for user
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Project::initOnce();
        parent::__construct($data);
    }

    /**
     * ID of the project to request, UUIDv4, empty string uses default project
     *
     * Generated from protobuf field <code>string id = 1 [json_name = "id"];</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * ID of the project to request, UUIDv4, empty string uses default project
     *
     * Generated from protobuf field <code>string id = 1 [json_name = "id"];</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * The ID of the organization owning the project, empty for default org for user
     *
     * Generated from protobuf field <code>optional string owner_id = 2 [json_name = "ownerId"];</code>
     * @return string
     */
    public function getOwnerId()
    {
        return isset($this->owner_id) ? $this->owner_id : '';
    }

    public function hasOwnerId()
    {
        return isset($this->owner_id);
    }

    public function clearOwnerId()
    {
        unset($this->owner_id);
    }

    /**
     * The ID of the organization owning the project, empty for default org for user
     *
     * Generated from protobuf field <code>optional string owner_id = 2 [json_name = "ownerId"];</code>
     * @param string $var
     * @return $this
     */
    public function setOwnerId($var)
    {
        GPBUtil::checkString($var, True);
        $this->owner_id = $var;

        return $this;
    }

}


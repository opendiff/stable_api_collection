/**
 * Stability.ai REST API
 * Welcome to the Stability.ai REST API developer preview!  Please note, this is an alpha version of our new REST API, and is subject to change according to your feedback.  Feedback during this test is crucial for us to understand what the pain points are and how we can improve it going forward.  Changes will be communicated here, as well as on our online REST API documentation, which can be found at: https://api.stability.ai/docs  Your DreamStudio API key will be required for authentication. You can learn more about API keys here: https://platform.stability.ai/docs/getting-started/authentication  If you encounter any issues, please let us know in the #API discord channel: https://discord.gg/stablediffusion 
 *
 * The version of the OpenAPI document: 0.1
 * Contact: info@stability.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITextToImageRequestBody.h
 *
 * 
 */

#ifndef OAITextToImageRequestBody_H
#define OAITextToImageRequestBody_H

#include <QJsonObject>

#include "OAITextPrompt.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITextPrompt;

class OAITextToImageRequestBody : public OAIObject {
public:
    OAITextToImageRequestBody();
    OAITextToImageRequestBody(QString json);
    ~OAITextToImageRequestBody() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getCfgScale() const;
    void setCfgScale(const double &cfg_scale);
    bool is_cfg_scale_Set() const;
    bool is_cfg_scale_Valid() const;

    QString getClipGuidancePreset() const;
    void setClipGuidancePreset(const QString &clip_guidance_preset);
    bool is_clip_guidance_preset_Set() const;
    bool is_clip_guidance_preset_Valid() const;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    QString getSampler() const;
    void setSampler(const QString &sampler);
    bool is_sampler_Set() const;
    bool is_sampler_Valid() const;

    qint32 getSamples() const;
    void setSamples(const qint32 &samples);
    bool is_samples_Set() const;
    bool is_samples_Valid() const;

    qint32 getSeed() const;
    void setSeed(const qint32 &seed);
    bool is_seed_Set() const;
    bool is_seed_Valid() const;

    qint32 getSteps() const;
    void setSteps(const qint32 &steps);
    bool is_steps_Set() const;
    bool is_steps_Valid() const;

    QList<OAITextPrompt> getTextPrompts() const;
    void setTextPrompts(const QList<OAITextPrompt> &text_prompts);
    bool is_text_prompts_Set() const;
    bool is_text_prompts_Valid() const;

    qint32 getWidth() const;
    void setWidth(const qint32 &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double cfg_scale;
    bool m_cfg_scale_isSet;
    bool m_cfg_scale_isValid;

    QString clip_guidance_preset;
    bool m_clip_guidance_preset_isSet;
    bool m_clip_guidance_preset_isValid;

    qint32 height;
    bool m_height_isSet;
    bool m_height_isValid;

    QString sampler;
    bool m_sampler_isSet;
    bool m_sampler_isValid;

    qint32 samples;
    bool m_samples_isSet;
    bool m_samples_isValid;

    qint32 seed;
    bool m_seed_isSet;
    bool m_seed_isValid;

    qint32 steps;
    bool m_steps_isSet;
    bool m_steps_isValid;

    QList<OAITextPrompt> text_prompts;
    bool m_text_prompts_isSet;
    bool m_text_prompts_isValid;

    qint32 width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITextToImageRequestBody)

#endif // OAITextToImageRequestBody_H

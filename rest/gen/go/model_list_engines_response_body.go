/*
Stability.ai REST API

Welcome to the Stability.ai REST API developer preview!  Please note, this is an alpha version of our new REST API, and is subject to change according to your feedback.  Feedback during this test is crucial for us to understand what the pain points are and how we can improve it going forward.  Changes will be communicated here, as well as on our online REST API documentation, which can be found at: https://api.stability.ai/docs  Your DreamStudio API key will be required for authentication. You can learn more about API keys here: https://platform.stability.ai/docs/getting-started/authentication  If you encounter any issues, please let us know in the #API discord channel: https://discord.gg/stablediffusion 

API version: 0.1
Contact: info@stability.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ListEnginesResponseBody struct for ListEnginesResponseBody
type ListEnginesResponseBody struct {
	// The engines available to your user/organization
	Engines []Engine `json:"engines"`
}

// NewListEnginesResponseBody instantiates a new ListEnginesResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListEnginesResponseBody(engines []Engine) *ListEnginesResponseBody {
	this := ListEnginesResponseBody{}
	this.Engines = engines
	return &this
}

// NewListEnginesResponseBodyWithDefaults instantiates a new ListEnginesResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListEnginesResponseBodyWithDefaults() *ListEnginesResponseBody {
	this := ListEnginesResponseBody{}
	return &this
}

// GetEngines returns the Engines field value
func (o *ListEnginesResponseBody) GetEngines() []Engine {
	if o == nil {
		var ret []Engine
		return ret
	}

	return o.Engines
}

// GetEnginesOk returns a tuple with the Engines field value
// and a boolean to check if the value has been set.
func (o *ListEnginesResponseBody) GetEnginesOk() ([]Engine, bool) {
	if o == nil {
		return nil, false
	}
	return o.Engines, true
}

// SetEngines sets field value
func (o *ListEnginesResponseBody) SetEngines(v []Engine) {
	o.Engines = v
}

func (o ListEnginesResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["engines"] = o.Engines
	}
	return json.Marshal(toSerialize)
}

type NullableListEnginesResponseBody struct {
	value *ListEnginesResponseBody
	isSet bool
}

func (v NullableListEnginesResponseBody) Get() *ListEnginesResponseBody {
	return v.value
}

func (v *NullableListEnginesResponseBody) Set(val *ListEnginesResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableListEnginesResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableListEnginesResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListEnginesResponseBody(val *ListEnginesResponseBody) *NullableListEnginesResponseBody {
	return &NullableListEnginesResponseBody{value: val, isSet: true}
}

func (v NullableListEnginesResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListEnginesResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



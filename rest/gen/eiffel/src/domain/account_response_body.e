note
 description:"[
		Stability.ai REST API
 		Welcome to the Stability.ai REST API developer preview!  Please note, this is an alpha version of our new REST API, and is subject to change according to your feedback.  Feedback during this test is crucial for us to understand what the pain points are and how we can improve it going forward.  Changes will be communicated here, as well as on our online REST API documentation, which can be found at: https://api.stability.ai/docs  Your DreamStudio API key will be required for authentication. You can learn more about API keys here: https://platform.stability.ai/docs/getting-started/authentication  If you encounter any issues, please let us know in the #API discord channel: https://discord.gg/stablediffusion 
  		The version of the OpenAPI document: 0.1
 	    Contact: info@stability.ai

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ACCOUNT_RESPONSE_BODY




feature --Access

    email: detachable STRING_32
      -- The user's email
    id: detachable STRING_32
      -- The user's ID
    organizations: detachable LIST [ORGANIZATION_MEMBERSHIP]
      -- The user's organizations
    profile_picture: detachable STRING
      -- The user's profile picture

feature -- Change Element

    set_email (a_name: like email)
        -- Set 'email' with 'a_name'.
      do
        email := a_name
      ensure
        email_set: email = a_name
      end

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_organizations (a_name: like organizations)
        -- Set 'organizations' with 'a_name'.
      do
        organizations := a_name
      ensure
        organizations_set: organizations = a_name
      end

    set_profile_picture (a_name: like profile_picture)
        -- Set 'profile_picture' with 'a_name'.
      do
        profile_picture := a_name
      ensure
        profile_picture_set: profile_picture = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ACCOUNT_RESPONSE_BODY%N")
        if attached email as l_email then
          Result.append ("%Nemail:")
          Result.append (l_email.out)
          Result.append ("%N")
        end
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached organizations as l_organizations then
          across l_organizations as ic loop
            Result.append ("%N organizations:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached profile_picture as l_profile_picture then
          Result.append ("%Nprofile_picture:")
          Result.append (l_profile_picture.out)
          Result.append ("%N")
        end
      end
end


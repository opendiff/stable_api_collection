note
 description:"[
		Stability.ai REST API
 		Welcome to the Stability.ai REST API developer preview!  Please note, this is an alpha version of our new REST API, and is subject to change according to your feedback.  Feedback during this test is crucial for us to understand what the pain points are and how we can improve it going forward.  Changes will be communicated here, as well as on our online REST API documentation, which can be found at: https://api.stability.ai/docs  Your DreamStudio API key will be required for authentication. You can learn more about API keys here: https://platform.stability.ai/docs/getting-started/authentication  If you encounter any issues, please let us know in the #API discord channel: https://discord.gg/stablediffusion 
  		The version of the OpenAPI document: 0.1
 	    Contact: info@stability.ai

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ERROR




feature --Access

 	fault: BOOLEAN
    	 -- Is the error a server-side fault?
    id: detachable STRING_32
      -- ID is a unique identifier for this particular occurrence of the problem.
    message: detachable STRING_32
      -- Message is a human-readable explanation specific to this occurrence of the problem.
    name: detachable STRING_32
      -- Name is the name of this class of errors.
 	temporary: BOOLEAN
    	 -- Is the error temporary?
 	timeout: BOOLEAN
    	 -- Is the error a timeout?

feature -- Change Element

    set_fault (a_name: like fault)
        -- Set 'fault' with 'a_name'.
      do
        fault := a_name
      ensure
        fault_set: fault = a_name
      end

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_message (a_name: like message)
        -- Set 'message' with 'a_name'.
      do
        message := a_name
      ensure
        message_set: message = a_name
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_temporary (a_name: like temporary)
        -- Set 'temporary' with 'a_name'.
      do
        temporary := a_name
      ensure
        temporary_set: temporary = a_name
      end

    set_timeout (a_name: like timeout)
        -- Set 'timeout' with 'a_name'.
      do
        timeout := a_name
      ensure
        timeout_set: timeout = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ERROR%N")
        if attached fault as l_fault then
          Result.append ("%Nfault:")
          Result.append (l_fault.out)
          Result.append ("%N")
        end
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached message as l_message then
          Result.append ("%Nmessage:")
          Result.append (l_message.out)
          Result.append ("%N")
        end
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached temporary as l_temporary then
          Result.append ("%Ntemporary:")
          Result.append (l_temporary.out)
          Result.append ("%N")
        end
        if attached timeout as l_timeout then
          Result.append ("%Ntimeout:")
          Result.append (l_timeout.out)
          Result.append ("%N")
        end
      end
end


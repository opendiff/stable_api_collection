/**
 * Stability.ai REST API
 * Welcome to the Stability.ai REST API developer preview!  Please note, this is an alpha version of our new REST API, and is subject to change according to your feedback.  Feedback during this test is crucial for us to understand what the pain points are and how we can improve it going forward.  Changes will be communicated here, as well as on our online REST API documentation, which can be found at: https://api.stability.ai/docs  Your DreamStudio API key will be required for authentication. You can learn more about API keys here: https://platform.stability.ai/docs/getting-started/authentication  If you encounter any issues, please let us know in the #API discord channel: https://discord.gg/stablediffusion 
 *
 * OpenAPI spec version: 0.1
 * Contact: info@stability.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIV1alphaGenerationApi.h"

#include "OpenAPIHelpers.h"
#include "OpenAPIError.h"
#include "OpenAPIImageToImageOptions.h"
#include "OpenAPIMaskingOptions.h"
#include "OpenAPITextToImageRequestBody.h"

namespace OpenAPI
{

/* image-to-image
 *
 * Generate big fancy pictures from small fancy pictures
*/
class OPENAPI_API OpenAPIV1alphaGenerationApi::V1alphaGenerationImageToImageRequest : public Request
{
public:
    virtual ~V1alphaGenerationImageToImageRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/*   */
	FString EngineId;
	enum class AcceptEnum
	{
		ImagePng,
		ApplicationJson,
  	};

	static FString EnumToString(const AcceptEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, AcceptEnum& EnumValue);
	/*   */
	AcceptEnum Accept;
	/* Initial image to use for the image-to-image generation */
	HttpFileInput InitImage;
	OpenAPIImageToImageOptions Options;
	/* Optional: Allows for requests to be scoped to an organization other than the user's default.  If not provided, the user's default organization will be used. */
	TOptional<FString> Organization;
};

class OPENAPI_API OpenAPIV1alphaGenerationApi::V1alphaGenerationImageToImageResponse : public Response
{
public:
    virtual ~V1alphaGenerationImageToImageResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

/* image-to-image/masking
 *
 * Paint fancy things into fancy pictures
*/
class OPENAPI_API OpenAPIV1alphaGenerationApi::V1alphaGenerationMaskingRequest : public Request
{
public:
    virtual ~V1alphaGenerationMaskingRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/*   */
	FString EngineId;
	enum class AcceptEnum
	{
		ImagePng,
		ApplicationJson,
  	};

	static FString EnumToString(const AcceptEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, AcceptEnum& EnumValue);
	/*   */
	AcceptEnum Accept;
	/* Initial image to use for the image-to-image generation */
	HttpFileInput InitImage;
	OpenAPIMaskingOptions Options;
	/* Optional: Allows for requests to be scoped to an organization other than the user's default.  If not provided, the user's default organization will be used. */
	TOptional<FString> Organization;
	/* Optional mask image to use for masking. Must be the same dimensions as the `init_image`. Use the `mask_source` option to specify whether the white or black pixels should be inpainted. (Note: if you set `mask_source` to `INIT_IMAGE_ALPHA` you can omit the `mask_image` parameter completely.) */
	TOptional<HttpFileInput> MaskImage;
};

class OPENAPI_API OpenAPIV1alphaGenerationApi::V1alphaGenerationMaskingResponse : public Response
{
public:
    virtual ~V1alphaGenerationMaskingResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

/* text-to-image
 *
 * Generate an image from text
*/
class OPENAPI_API OpenAPIV1alphaGenerationApi::V1alphaGenerationTextToImageRequest : public Request
{
public:
    virtual ~V1alphaGenerationTextToImageRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/*   */
	FString EngineId;
	enum class AcceptEnum
	{
		ImagePng,
		ApplicationJson,
  	};

	static FString EnumToString(const AcceptEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, AcceptEnum& EnumValue);
	/*   */
	AcceptEnum Accept;
	OpenAPITextToImageRequestBody OpenAPITextToImageRequestBody;
	/* Optional: Allows for requests to be scoped to an organization other than the user's default.  If not provided, the user's default organization will be used. */
	TOptional<FString> Organization;
};

class OPENAPI_API OpenAPIV1alphaGenerationApi::V1alphaGenerationTextToImageResponse : public Response
{
public:
    virtual ~V1alphaGenerationTextToImageResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

}

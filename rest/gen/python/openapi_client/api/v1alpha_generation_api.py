"""
    Stability.ai REST API

    Welcome to the Stability.ai REST API developer preview!  Please note, this is an alpha version of our new REST API, and is subject to change according to your feedback.  Feedback during this test is crucial for us to understand what the pain points are and how we can improve it going forward.  Changes will be communicated here, as well as on our online REST API documentation, which can be found at: https://api.stability.ai/docs  Your DreamStudio API key will be required for authentication. You can learn more about API keys here: https://platform.stability.ai/docs/getting-started/authentication  If you encounter any issues, please let us know in the #API discord channel: https://discord.gg/stablediffusion   # noqa: E501

    The version of the OpenAPI document: 0.1
    Contact: info@stability.ai
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from openapi_client.api_client import ApiClient, Endpoint as _Endpoint
from openapi_client.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from openapi_client.model.error import Error
from openapi_client.model.image_to_image_options import ImageToImageOptions
from openapi_client.model.masking_options import MaskingOptions
from openapi_client.model.text_to_image_request_body import TextToImageRequestBody


class V1alphaGenerationApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.v1alpha_generation_image_to_image_endpoint = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'api_key_header_Authorization'
                ],
                'endpoint_path': '/v1alpha/generation/{engine_id}/image-to-image',
                'operation_id': 'v1alpha_generation_image_to_image',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'engine_id',
                    'accept',
                    'init_image',
                    'options',
                    'organization',
                ],
                'required': [
                    'engine_id',
                    'accept',
                    'init_image',
                    'options',
                ],
                'nullable': [
                ],
                'enum': [
                    'accept',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('accept',): {

                        "IMAGE/PNG": "image/png",
                        "APPLICATION/JSON": "application/json"
                    },
                },
                'openapi_types': {
                    'engine_id':
                        (str,),
                    'accept':
                        (str,),
                    'init_image':
                        (file_type,),
                    'options':
                        (ImageToImageOptions,),
                    'organization':
                        (str,),
                },
                'attribute_map': {
                    'engine_id': 'engine_id',
                    'accept': 'Accept',
                    'init_image': 'init_image',
                    'options': 'options',
                    'organization': 'Organization',
                },
                'location_map': {
                    'engine_id': 'path',
                    'accept': 'header',
                    'init_image': 'form',
                    'options': 'form',
                    'organization': 'header',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/vnd.goa.error'
                ],
                'content_type': [
                    'multipart/form-data'
                ]
            },
            api_client=api_client
        )
        self.v1alpha_generation_masking_endpoint = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'api_key_header_Authorization'
                ],
                'endpoint_path': '/v1alpha/generation/{engine_id}/image-to-image/masking',
                'operation_id': 'v1alpha_generation_masking',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'engine_id',
                    'accept',
                    'init_image',
                    'options',
                    'organization',
                    'mask_image',
                ],
                'required': [
                    'engine_id',
                    'accept',
                    'init_image',
                    'options',
                ],
                'nullable': [
                ],
                'enum': [
                    'accept',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('accept',): {

                        "IMAGE/PNG": "image/png",
                        "APPLICATION/JSON": "application/json"
                    },
                },
                'openapi_types': {
                    'engine_id':
                        (str,),
                    'accept':
                        (str,),
                    'init_image':
                        (file_type,),
                    'options':
                        (MaskingOptions,),
                    'organization':
                        (str,),
                    'mask_image':
                        (file_type,),
                },
                'attribute_map': {
                    'engine_id': 'engine_id',
                    'accept': 'Accept',
                    'init_image': 'init_image',
                    'options': 'options',
                    'organization': 'Organization',
                    'mask_image': 'mask_image',
                },
                'location_map': {
                    'engine_id': 'path',
                    'accept': 'header',
                    'init_image': 'form',
                    'options': 'form',
                    'organization': 'header',
                    'mask_image': 'form',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/vnd.goa.error'
                ],
                'content_type': [
                    'multipart/form-data'
                ]
            },
            api_client=api_client
        )
        self.v1alpha_generation_text_to_image_endpoint = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'api_key_header_Authorization'
                ],
                'endpoint_path': '/v1alpha/generation/{engine_id}/text-to-image',
                'operation_id': 'v1alpha_generation_text_to_image',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'engine_id',
                    'accept',
                    'text_to_image_request_body',
                    'organization',
                ],
                'required': [
                    'engine_id',
                    'accept',
                    'text_to_image_request_body',
                ],
                'nullable': [
                ],
                'enum': [
                    'accept',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('accept',): {

                        "IMAGE/PNG": "image/png",
                        "APPLICATION/JSON": "application/json"
                    },
                },
                'openapi_types': {
                    'engine_id':
                        (str,),
                    'accept':
                        (str,),
                    'text_to_image_request_body':
                        (TextToImageRequestBody,),
                    'organization':
                        (str,),
                },
                'attribute_map': {
                    'engine_id': 'engine_id',
                    'accept': 'Accept',
                    'organization': 'Organization',
                },
                'location_map': {
                    'engine_id': 'path',
                    'accept': 'header',
                    'text_to_image_request_body': 'body',
                    'organization': 'header',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/vnd.goa.error'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

    def v1alpha_generation_image_to_image(
        self,
        engine_id,
        accept,
        init_image,
        options,
        **kwargs
    ):
        """image-to-image  # noqa: E501

        Generate big fancy pictures from small fancy pictures  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.v1alpha_generation_image_to_image(engine_id, accept, init_image, options, async_req=True)
        >>> result = thread.get()

        Args:
            engine_id (str):  
            accept (str):  
            init_image (file_type): Initial image to use for the image-to-image generation
            options (ImageToImageOptions):

        Keyword Args:
            organization (str): Optional: Allows for requests to be scoped to an organization other than the user's default.  If not provided, the user's default organization will be used.. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            None
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['engine_id'] = \
            engine_id
        kwargs['accept'] = \
            accept
        kwargs['init_image'] = \
            init_image
        kwargs['options'] = \
            options
        return self.v1alpha_generation_image_to_image_endpoint.call_with_http_info(**kwargs)

    def v1alpha_generation_masking(
        self,
        engine_id,
        accept,
        init_image,
        options,
        **kwargs
    ):
        """image-to-image/masking  # noqa: E501

        Paint fancy things into fancy pictures  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.v1alpha_generation_masking(engine_id, accept, init_image, options, async_req=True)
        >>> result = thread.get()

        Args:
            engine_id (str):  
            accept (str):  
            init_image (file_type): Initial image to use for the image-to-image generation
            options (MaskingOptions):

        Keyword Args:
            organization (str): Optional: Allows for requests to be scoped to an organization other than the user's default.  If not provided, the user's default organization will be used.. [optional]
            mask_image (file_type): Optional mask image to use for masking. Must be the same dimensions as the `init_image`. Use the `mask_source` option to specify whether the white or black pixels should be inpainted. (Note: if you set `mask_source` to `INIT_IMAGE_ALPHA` you can omit the `mask_image` parameter completely.). [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            None
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['engine_id'] = \
            engine_id
        kwargs['accept'] = \
            accept
        kwargs['init_image'] = \
            init_image
        kwargs['options'] = \
            options
        return self.v1alpha_generation_masking_endpoint.call_with_http_info(**kwargs)

    def v1alpha_generation_text_to_image(
        self,
        engine_id,
        accept,
        text_to_image_request_body,
        **kwargs
    ):
        """text-to-image  # noqa: E501

        Generate an image from text  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.v1alpha_generation_text_to_image(engine_id, accept, text_to_image_request_body, async_req=True)
        >>> result = thread.get()

        Args:
            engine_id (str):  
            accept (str):  
            text_to_image_request_body (TextToImageRequestBody):

        Keyword Args:
            organization (str): Optional: Allows for requests to be scoped to an organization other than the user's default.  If not provided, the user's default organization will be used.. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            None
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['engine_id'] = \
            engine_id
        kwargs['accept'] = \
            accept
        kwargs['text_to_image_request_body'] = \
            text_to_image_request_body
        return self.v1alpha_generation_text_to_image_endpoint.call_with_http_info(**kwargs)


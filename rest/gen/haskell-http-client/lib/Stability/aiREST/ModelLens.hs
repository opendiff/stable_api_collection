{-
   Stability.ai REST API

   Welcome to the Stability.ai REST API developer preview!  Please note, this is an alpha version of our new REST API, and is subject to change according to your feedback.  Feedback during this test is crucial for us to understand what the pain points are and how we can improve it going forward.  Changes will be communicated here, as well as on our online REST API documentation, which can be found at: https://api.stability.ai/docs  Your DreamStudio API key will be required for authentication. You can learn more about API keys here: https://platform.stability.ai/docs/getting-started/authentication  If you encounter any issues, please let us know in the #API discord channel: https://discord.gg/stablediffusion 

   OpenAPI Version: 3.0.3
   Stability.ai REST API API version: 0.1
   Contact: info@stability.ai
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Stability.aiREST.Lens
-}

{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Stability.aiREST.ModelLens where

import qualified Data.Aeson as A
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Data, Typeable)
import qualified Data.Map as Map
import qualified Data.Set as Set
import qualified Data.Time as TI

import Data.Text (Text)

import Prelude (($), (.),(<$>),(<*>),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

import Stability.aiREST.Model
import Stability.aiREST.Core


-- * AccountResponseBody

-- | 'accountResponseBodyEmail' Lens
accountResponseBodyEmailL :: Lens_' AccountResponseBody (Text)
accountResponseBodyEmailL f AccountResponseBody{..} = (\accountResponseBodyEmail -> AccountResponseBody { accountResponseBodyEmail, ..} ) <$> f accountResponseBodyEmail
{-# INLINE accountResponseBodyEmailL #-}

-- | 'accountResponseBodyId' Lens
accountResponseBodyIdL :: Lens_' AccountResponseBody (Text)
accountResponseBodyIdL f AccountResponseBody{..} = (\accountResponseBodyId -> AccountResponseBody { accountResponseBodyId, ..} ) <$> f accountResponseBodyId
{-# INLINE accountResponseBodyIdL #-}

-- | 'accountResponseBodyOrganizations' Lens
accountResponseBodyOrganizationsL :: Lens_' AccountResponseBody ([OrganizationMembership])
accountResponseBodyOrganizationsL f AccountResponseBody{..} = (\accountResponseBodyOrganizations -> AccountResponseBody { accountResponseBodyOrganizations, ..} ) <$> f accountResponseBodyOrganizations
{-# INLINE accountResponseBodyOrganizationsL #-}

-- | 'accountResponseBodyProfilePicture' Lens
accountResponseBodyProfilePictureL :: Lens_' AccountResponseBody (Maybe Text)
accountResponseBodyProfilePictureL f AccountResponseBody{..} = (\accountResponseBodyProfilePicture -> AccountResponseBody { accountResponseBodyProfilePicture, ..} ) <$> f accountResponseBodyProfilePicture
{-# INLINE accountResponseBodyProfilePictureL #-}



-- * BalanceResponseBody

-- | 'balanceResponseBodyCredits' Lens
balanceResponseBodyCreditsL :: Lens_' BalanceResponseBody (Double)
balanceResponseBodyCreditsL f BalanceResponseBody{..} = (\balanceResponseBodyCredits -> BalanceResponseBody { balanceResponseBodyCredits, ..} ) <$> f balanceResponseBodyCredits
{-# INLINE balanceResponseBodyCreditsL #-}



-- * Engine

-- | 'engineDescription' Lens
engineDescriptionL :: Lens_' Engine (Text)
engineDescriptionL f Engine{..} = (\engineDescription -> Engine { engineDescription, ..} ) <$> f engineDescription
{-# INLINE engineDescriptionL #-}

-- | 'engineId' Lens
engineIdL :: Lens_' Engine (Text)
engineIdL f Engine{..} = (\engineId -> Engine { engineId, ..} ) <$> f engineId
{-# INLINE engineIdL #-}

-- | 'engineName' Lens
engineNameL :: Lens_' Engine (Text)
engineNameL f Engine{..} = (\engineName -> Engine { engineName, ..} ) <$> f engineName
{-# INLINE engineNameL #-}

-- | 'engineType' Lens
engineTypeL :: Lens_' Engine (E'Type)
engineTypeL f Engine{..} = (\engineType -> Engine { engineType, ..} ) <$> f engineType
{-# INLINE engineTypeL #-}



-- * Error

-- | 'errorFault' Lens
errorFaultL :: Lens_' Error (Bool)
errorFaultL f Error{..} = (\errorFault -> Error { errorFault, ..} ) <$> f errorFault
{-# INLINE errorFaultL #-}

-- | 'errorId' Lens
errorIdL :: Lens_' Error (Text)
errorIdL f Error{..} = (\errorId -> Error { errorId, ..} ) <$> f errorId
{-# INLINE errorIdL #-}

-- | 'errorMessage' Lens
errorMessageL :: Lens_' Error (Text)
errorMessageL f Error{..} = (\errorMessage -> Error { errorMessage, ..} ) <$> f errorMessage
{-# INLINE errorMessageL #-}

-- | 'errorName' Lens
errorNameL :: Lens_' Error (Text)
errorNameL f Error{..} = (\errorName -> Error { errorName, ..} ) <$> f errorName
{-# INLINE errorNameL #-}

-- | 'errorTemporary' Lens
errorTemporaryL :: Lens_' Error (Bool)
errorTemporaryL f Error{..} = (\errorTemporary -> Error { errorTemporary, ..} ) <$> f errorTemporary
{-# INLINE errorTemporaryL #-}

-- | 'errorTimeout' Lens
errorTimeoutL :: Lens_' Error (Bool)
errorTimeoutL f Error{..} = (\errorTimeout -> Error { errorTimeout, ..} ) <$> f errorTimeout
{-# INLINE errorTimeoutL #-}



-- * ListEnginesResponseBody

-- | 'listEnginesResponseBodyEngines' Lens
listEnginesResponseBodyEnginesL :: Lens_' ListEnginesResponseBody ([Engine])
listEnginesResponseBodyEnginesL f ListEnginesResponseBody{..} = (\listEnginesResponseBodyEngines -> ListEnginesResponseBody { listEnginesResponseBodyEngines, ..} ) <$> f listEnginesResponseBodyEngines
{-# INLINE listEnginesResponseBodyEnginesL #-}



-- * OrganizationMembership

-- | 'organizationMembershipId' Lens
organizationMembershipIdL :: Lens_' OrganizationMembership (Text)
organizationMembershipIdL f OrganizationMembership{..} = (\organizationMembershipId -> OrganizationMembership { organizationMembershipId, ..} ) <$> f organizationMembershipId
{-# INLINE organizationMembershipIdL #-}

-- | 'organizationMembershipIsDefault' Lens
organizationMembershipIsDefaultL :: Lens_' OrganizationMembership (Bool)
organizationMembershipIsDefaultL f OrganizationMembership{..} = (\organizationMembershipIsDefault -> OrganizationMembership { organizationMembershipIsDefault, ..} ) <$> f organizationMembershipIsDefault
{-# INLINE organizationMembershipIsDefaultL #-}

-- | 'organizationMembershipName' Lens
organizationMembershipNameL :: Lens_' OrganizationMembership (Text)
organizationMembershipNameL f OrganizationMembership{..} = (\organizationMembershipName -> OrganizationMembership { organizationMembershipName, ..} ) <$> f organizationMembershipName
{-# INLINE organizationMembershipNameL #-}

-- | 'organizationMembershipRole' Lens
organizationMembershipRoleL :: Lens_' OrganizationMembership (Text)
organizationMembershipRoleL f OrganizationMembership{..} = (\organizationMembershipRole -> OrganizationMembership { organizationMembershipRole, ..} ) <$> f organizationMembershipRole
{-# INLINE organizationMembershipRoleL #-}



-- * TextPrompt

-- | 'textPromptText' Lens
textPromptTextL :: Lens_' TextPrompt (Text)
textPromptTextL f TextPrompt{..} = (\textPromptText -> TextPrompt { textPromptText, ..} ) <$> f textPromptText
{-# INLINE textPromptTextL #-}

-- | 'textPromptWeight' Lens
textPromptWeightL :: Lens_' TextPrompt (Maybe Float)
textPromptWeightL f TextPrompt{..} = (\textPromptWeight -> TextPrompt { textPromptWeight, ..} ) <$> f textPromptWeight
{-# INLINE textPromptWeightL #-}



-- * TextToImageRequestBody

-- | 'textToImageRequestBodyCfgScale' Lens
textToImageRequestBodyCfgScaleL :: Lens_' TextToImageRequestBody (Maybe Double)
textToImageRequestBodyCfgScaleL f TextToImageRequestBody{..} = (\textToImageRequestBodyCfgScale -> TextToImageRequestBody { textToImageRequestBodyCfgScale, ..} ) <$> f textToImageRequestBodyCfgScale
{-# INLINE textToImageRequestBodyCfgScaleL #-}

-- | 'textToImageRequestBodyClipGuidancePreset' Lens
textToImageRequestBodyClipGuidancePresetL :: Lens_' TextToImageRequestBody (Maybe E'ClipGuidancePreset)
textToImageRequestBodyClipGuidancePresetL f TextToImageRequestBody{..} = (\textToImageRequestBodyClipGuidancePreset -> TextToImageRequestBody { textToImageRequestBodyClipGuidancePreset, ..} ) <$> f textToImageRequestBodyClipGuidancePreset
{-# INLINE textToImageRequestBodyClipGuidancePresetL #-}

-- | 'textToImageRequestBodyHeight' Lens
textToImageRequestBodyHeightL :: Lens_' TextToImageRequestBody (Maybe Int)
textToImageRequestBodyHeightL f TextToImageRequestBody{..} = (\textToImageRequestBodyHeight -> TextToImageRequestBody { textToImageRequestBodyHeight, ..} ) <$> f textToImageRequestBodyHeight
{-# INLINE textToImageRequestBodyHeightL #-}

-- | 'textToImageRequestBodySampler' Lens
textToImageRequestBodySamplerL :: Lens_' TextToImageRequestBody (Maybe E'Sampler)
textToImageRequestBodySamplerL f TextToImageRequestBody{..} = (\textToImageRequestBodySampler -> TextToImageRequestBody { textToImageRequestBodySampler, ..} ) <$> f textToImageRequestBodySampler
{-# INLINE textToImageRequestBodySamplerL #-}

-- | 'textToImageRequestBodySamples' Lens
textToImageRequestBodySamplesL :: Lens_' TextToImageRequestBody (Maybe Int)
textToImageRequestBodySamplesL f TextToImageRequestBody{..} = (\textToImageRequestBodySamples -> TextToImageRequestBody { textToImageRequestBodySamples, ..} ) <$> f textToImageRequestBodySamples
{-# INLINE textToImageRequestBodySamplesL #-}

-- | 'textToImageRequestBodySeed' Lens
textToImageRequestBodySeedL :: Lens_' TextToImageRequestBody (Maybe Int)
textToImageRequestBodySeedL f TextToImageRequestBody{..} = (\textToImageRequestBodySeed -> TextToImageRequestBody { textToImageRequestBodySeed, ..} ) <$> f textToImageRequestBodySeed
{-# INLINE textToImageRequestBodySeedL #-}

-- | 'textToImageRequestBodySteps' Lens
textToImageRequestBodyStepsL :: Lens_' TextToImageRequestBody (Maybe Int)
textToImageRequestBodyStepsL f TextToImageRequestBody{..} = (\textToImageRequestBodySteps -> TextToImageRequestBody { textToImageRequestBodySteps, ..} ) <$> f textToImageRequestBodySteps
{-# INLINE textToImageRequestBodyStepsL #-}

-- | 'textToImageRequestBodyTextPrompts' Lens
textToImageRequestBodyTextPromptsL :: Lens_' TextToImageRequestBody ([TextPrompt])
textToImageRequestBodyTextPromptsL f TextToImageRequestBody{..} = (\textToImageRequestBodyTextPrompts -> TextToImageRequestBody { textToImageRequestBodyTextPrompts, ..} ) <$> f textToImageRequestBodyTextPrompts
{-# INLINE textToImageRequestBodyTextPromptsL #-}

-- | 'textToImageRequestBodyWidth' Lens
textToImageRequestBodyWidthL :: Lens_' TextToImageRequestBody (Maybe Int)
textToImageRequestBodyWidthL f TextToImageRequestBody{..} = (\textToImageRequestBodyWidth -> TextToImageRequestBody { textToImageRequestBodyWidth, ..} ) <$> f textToImageRequestBodyWidth
{-# INLINE textToImageRequestBodyWidthL #-}



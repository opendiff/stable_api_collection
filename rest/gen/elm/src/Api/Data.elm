{-
   Stability.ai REST API
   Welcome to the Stability.ai REST API developer preview!  Please note, this is an alpha version of our new REST API, and is subject to change according to your feedback.  Feedback during this test is crucial for us to understand what the pain points are and how we can improve it going forward.  Changes will be communicated here, as well as on our online REST API documentation, which can be found at: https://api.stability.ai/docs  Your DreamStudio API key will be required for authentication. You can learn more about API keys here: https://platform.stability.ai/docs/getting-started/authentication  If you encounter any issues, please let us know in the #API discord channel: https://discord.gg/stablediffusion 

   The version of the OpenAPI document: 0.1
   Contact: info@stability.ai

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Data exposing
    ( AccountResponseBody
    , BalanceResponseBody
    , Engine, EngineType(..), engineTypeVariants
    , Error
    , ListEnginesResponseBody
    , OrganizationMembership
    , TextPrompt
    , TextToImageRequestBody, TextToImageRequestBodyClipGuidancePreset(..), textToImageRequestBodyClipGuidancePresetVariants, TextToImageRequestBodySampler(..), textToImageRequestBodySamplerVariants
    , encodeAccountResponseBody
    , encodeBalanceResponseBody
    , encodeEngine
    , encodeError
    , encodeListEnginesResponseBody
    , encodeOrganizationMembership
    , encodeTextPrompt
    , encodeTextToImageRequestBody
    , accountResponseBodyDecoder
    , balanceResponseBodyDecoder
    , engineDecoder
    , errorDecoder
    , listEnginesResponseBodyDecoder
    , organizationMembershipDecoder
    , textPromptDecoder
    , textToImageRequestBodyDecoder
    )

import Api
import Dict
import Json.Decode
import Json.Encode


-- MODEL


type alias AccountResponseBody =
    { email : String
    , id : String
    , organizations : List (OrganizationMembership)
    , profilePicture : Maybe String
    }


type alias BalanceResponseBody =
    { credits : Float
    }


type alias Engine =
    { description : String
    , id : String
    , name : String
    , type_ : EngineType
    }


type EngineType
    = EngineTypeAUDIO
    | EngineTypeCLASSIFICATION
    | EngineTypePICTURE
    | EngineTypeSTORAGE
    | EngineTypeTEXT
    | EngineTypeVIDEO


engineTypeVariants : List EngineType
engineTypeVariants =
    [ EngineTypeAUDIO
    , EngineTypeCLASSIFICATION
    , EngineTypePICTURE
    , EngineTypeSTORAGE
    , EngineTypeTEXT
    , EngineTypeVIDEO
    ]


type alias Error =
    { fault : Bool
    , id : String
    , message : String
    , name : String
    , temporary : Bool
    , timeout : Bool
    }


type alias ListEnginesResponseBody =
    { engines : List (Engine)
    }


type alias OrganizationMembership =
    { id : String
    , isDefault : Bool
    , name : String
    , role : String
    }


{-| Text prompt for image generation
-}
type alias TextPrompt =
    { text : String
    , weight : Maybe Float
    }


type alias TextToImageRequestBody =
    { cfgScale : Maybe Float
    , clipGuidancePreset : Maybe TextToImageRequestBodyClipGuidancePreset
    , height : Maybe Int
    , sampler : Maybe TextToImageRequestBodySampler
    , samples : Maybe Int
    , seed : Maybe Int
    , steps : Maybe Int
    , textPrompts : List (TextPrompt)
    , width : Maybe Int
    }


type TextToImageRequestBodyClipGuidancePreset
    = TextToImageRequestBodyClipGuidancePresetFASTBLUE
    | TextToImageRequestBodyClipGuidancePresetFASTGREEN
    | TextToImageRequestBodyClipGuidancePresetNONE
    | TextToImageRequestBodyClipGuidancePresetSIMPLE
    | TextToImageRequestBodyClipGuidancePresetSLOW
    | TextToImageRequestBodyClipGuidancePresetSLOWER
    | TextToImageRequestBodyClipGuidancePresetSLOWEST


textToImageRequestBodyClipGuidancePresetVariants : List TextToImageRequestBodyClipGuidancePreset
textToImageRequestBodyClipGuidancePresetVariants =
    [ TextToImageRequestBodyClipGuidancePresetFASTBLUE
    , TextToImageRequestBodyClipGuidancePresetFASTGREEN
    , TextToImageRequestBodyClipGuidancePresetNONE
    , TextToImageRequestBodyClipGuidancePresetSIMPLE
    , TextToImageRequestBodyClipGuidancePresetSLOW
    , TextToImageRequestBodyClipGuidancePresetSLOWER
    , TextToImageRequestBodyClipGuidancePresetSLOWEST
    ]


type TextToImageRequestBodySampler
    = TextToImageRequestBodySamplerDDIM
    | TextToImageRequestBodySamplerDDPM
    | TextToImageRequestBodySamplerKDPMPP2M
    | TextToImageRequestBodySamplerKDPMPP2SANCESTRAL
    | TextToImageRequestBodySamplerKDPM2
    | TextToImageRequestBodySamplerKDPM2ANCESTRAL
    | TextToImageRequestBodySamplerKEULER
    | TextToImageRequestBodySamplerKEULERANCESTRAL
    | TextToImageRequestBodySamplerKHEUN
    | TextToImageRequestBodySamplerKLMS


textToImageRequestBodySamplerVariants : List TextToImageRequestBodySampler
textToImageRequestBodySamplerVariants =
    [ TextToImageRequestBodySamplerDDIM
    , TextToImageRequestBodySamplerDDPM
    , TextToImageRequestBodySamplerKDPMPP2M
    , TextToImageRequestBodySamplerKDPMPP2SANCESTRAL
    , TextToImageRequestBodySamplerKDPM2
    , TextToImageRequestBodySamplerKDPM2ANCESTRAL
    , TextToImageRequestBodySamplerKEULER
    , TextToImageRequestBodySamplerKEULERANCESTRAL
    , TextToImageRequestBodySamplerKHEUN
    , TextToImageRequestBodySamplerKLMS
    ]


-- ENCODER


encodeAccountResponseBody : AccountResponseBody -> Json.Encode.Value
encodeAccountResponseBody =
    encodeObject << encodeAccountResponseBodyPairs


encodeAccountResponseBodyWithTag : ( String, String ) -> AccountResponseBody -> Json.Encode.Value
encodeAccountResponseBodyWithTag (tagField, tag) model =
    encodeObject (encodeAccountResponseBodyPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeAccountResponseBodyPairs : AccountResponseBody -> List EncodedField
encodeAccountResponseBodyPairs model =
    let
        pairs =
            [ encode "email" Json.Encode.string model.email
            , encode "id" Json.Encode.string model.id
            , encode "organizations" (Json.Encode.list encodeOrganizationMembership) model.organizations
            , maybeEncode "profile_picture" Json.Encode.string model.profilePicture
            ]
    in
    pairs


encodeBalanceResponseBody : BalanceResponseBody -> Json.Encode.Value
encodeBalanceResponseBody =
    encodeObject << encodeBalanceResponseBodyPairs


encodeBalanceResponseBodyWithTag : ( String, String ) -> BalanceResponseBody -> Json.Encode.Value
encodeBalanceResponseBodyWithTag (tagField, tag) model =
    encodeObject (encodeBalanceResponseBodyPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeBalanceResponseBodyPairs : BalanceResponseBody -> List EncodedField
encodeBalanceResponseBodyPairs model =
    let
        pairs =
            [ encode "credits" Json.Encode.float model.credits
            ]
    in
    pairs


encodeEngine : Engine -> Json.Encode.Value
encodeEngine =
    encodeObject << encodeEnginePairs


encodeEngineWithTag : ( String, String ) -> Engine -> Json.Encode.Value
encodeEngineWithTag (tagField, tag) model =
    encodeObject (encodeEnginePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeEnginePairs : Engine -> List EncodedField
encodeEnginePairs model =
    let
        pairs =
            [ encode "description" Json.Encode.string model.description
            , encode "id" Json.Encode.string model.id
            , encode "name" Json.Encode.string model.name
            , encode "type" encodeEngineType model.type_
            ]
    in
    pairs

stringFromEngineType : EngineType -> String
stringFromEngineType model =
    case model of
        EngineTypeAUDIO ->
            "AUDIO"

        EngineTypeCLASSIFICATION ->
            "CLASSIFICATION"

        EngineTypePICTURE ->
            "PICTURE"

        EngineTypeSTORAGE ->
            "STORAGE"

        EngineTypeTEXT ->
            "TEXT"

        EngineTypeVIDEO ->
            "VIDEO"


encodeEngineType : EngineType -> Json.Encode.Value
encodeEngineType =
    Json.Encode.string << stringFromEngineType



encodeError : Error -> Json.Encode.Value
encodeError =
    encodeObject << encodeErrorPairs


encodeErrorWithTag : ( String, String ) -> Error -> Json.Encode.Value
encodeErrorWithTag (tagField, tag) model =
    encodeObject (encodeErrorPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeErrorPairs : Error -> List EncodedField
encodeErrorPairs model =
    let
        pairs =
            [ encode "fault" Json.Encode.bool model.fault
            , encode "id" Json.Encode.string model.id
            , encode "message" Json.Encode.string model.message
            , encode "name" Json.Encode.string model.name
            , encode "temporary" Json.Encode.bool model.temporary
            , encode "timeout" Json.Encode.bool model.timeout
            ]
    in
    pairs


encodeListEnginesResponseBody : ListEnginesResponseBody -> Json.Encode.Value
encodeListEnginesResponseBody =
    encodeObject << encodeListEnginesResponseBodyPairs


encodeListEnginesResponseBodyWithTag : ( String, String ) -> ListEnginesResponseBody -> Json.Encode.Value
encodeListEnginesResponseBodyWithTag (tagField, tag) model =
    encodeObject (encodeListEnginesResponseBodyPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeListEnginesResponseBodyPairs : ListEnginesResponseBody -> List EncodedField
encodeListEnginesResponseBodyPairs model =
    let
        pairs =
            [ encode "engines" (Json.Encode.list encodeEngine) model.engines
            ]
    in
    pairs


encodeOrganizationMembership : OrganizationMembership -> Json.Encode.Value
encodeOrganizationMembership =
    encodeObject << encodeOrganizationMembershipPairs


encodeOrganizationMembershipWithTag : ( String, String ) -> OrganizationMembership -> Json.Encode.Value
encodeOrganizationMembershipWithTag (tagField, tag) model =
    encodeObject (encodeOrganizationMembershipPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeOrganizationMembershipPairs : OrganizationMembership -> List EncodedField
encodeOrganizationMembershipPairs model =
    let
        pairs =
            [ encode "id" Json.Encode.string model.id
            , encode "is_default" Json.Encode.bool model.isDefault
            , encode "name" Json.Encode.string model.name
            , encode "role" Json.Encode.string model.role
            ]
    in
    pairs


encodeTextPrompt : TextPrompt -> Json.Encode.Value
encodeTextPrompt =
    encodeObject << encodeTextPromptPairs


encodeTextPromptWithTag : ( String, String ) -> TextPrompt -> Json.Encode.Value
encodeTextPromptWithTag (tagField, tag) model =
    encodeObject (encodeTextPromptPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeTextPromptPairs : TextPrompt -> List EncodedField
encodeTextPromptPairs model =
    let
        pairs =
            [ encode "text" Json.Encode.string model.text
            , maybeEncode "weight" Json.Encode.float model.weight
            ]
    in
    pairs


encodeTextToImageRequestBody : TextToImageRequestBody -> Json.Encode.Value
encodeTextToImageRequestBody =
    encodeObject << encodeTextToImageRequestBodyPairs


encodeTextToImageRequestBodyWithTag : ( String, String ) -> TextToImageRequestBody -> Json.Encode.Value
encodeTextToImageRequestBodyWithTag (tagField, tag) model =
    encodeObject (encodeTextToImageRequestBodyPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeTextToImageRequestBodyPairs : TextToImageRequestBody -> List EncodedField
encodeTextToImageRequestBodyPairs model =
    let
        pairs =
            [ maybeEncode "cfg_scale" Json.Encode.float model.cfgScale
            , maybeEncode "clip_guidance_preset" encodeTextToImageRequestBodyClipGuidancePreset model.clipGuidancePreset
            , maybeEncode "height" Json.Encode.int model.height
            , maybeEncode "sampler" encodeTextToImageRequestBodySampler model.sampler
            , maybeEncode "samples" Json.Encode.int model.samples
            , maybeEncode "seed" Json.Encode.int model.seed
            , maybeEncode "steps" Json.Encode.int model.steps
            , encode "text_prompts" (Json.Encode.list encodeTextPrompt) model.textPrompts
            , maybeEncode "width" Json.Encode.int model.width
            ]
    in
    pairs

stringFromTextToImageRequestBodyClipGuidancePreset : TextToImageRequestBodyClipGuidancePreset -> String
stringFromTextToImageRequestBodyClipGuidancePreset model =
    case model of
        TextToImageRequestBodyClipGuidancePresetFASTBLUE ->
            "FAST_BLUE"

        TextToImageRequestBodyClipGuidancePresetFASTGREEN ->
            "FAST_GREEN"

        TextToImageRequestBodyClipGuidancePresetNONE ->
            "NONE"

        TextToImageRequestBodyClipGuidancePresetSIMPLE ->
            "SIMPLE"

        TextToImageRequestBodyClipGuidancePresetSLOW ->
            "SLOW"

        TextToImageRequestBodyClipGuidancePresetSLOWER ->
            "SLOWER"

        TextToImageRequestBodyClipGuidancePresetSLOWEST ->
            "SLOWEST"


encodeTextToImageRequestBodyClipGuidancePreset : TextToImageRequestBodyClipGuidancePreset -> Json.Encode.Value
encodeTextToImageRequestBodyClipGuidancePreset =
    Json.Encode.string << stringFromTextToImageRequestBodyClipGuidancePreset


stringFromTextToImageRequestBodySampler : TextToImageRequestBodySampler -> String
stringFromTextToImageRequestBodySampler model =
    case model of
        TextToImageRequestBodySamplerDDIM ->
            "DDIM"

        TextToImageRequestBodySamplerDDPM ->
            "DDPM"

        TextToImageRequestBodySamplerKDPMPP2M ->
            "K_DPMPP_2M"

        TextToImageRequestBodySamplerKDPMPP2SANCESTRAL ->
            "K_DPMPP_2S_ANCESTRAL"

        TextToImageRequestBodySamplerKDPM2 ->
            "K_DPM_2"

        TextToImageRequestBodySamplerKDPM2ANCESTRAL ->
            "K_DPM_2_ANCESTRAL"

        TextToImageRequestBodySamplerKEULER ->
            "K_EULER"

        TextToImageRequestBodySamplerKEULERANCESTRAL ->
            "K_EULER_ANCESTRAL"

        TextToImageRequestBodySamplerKHEUN ->
            "K_HEUN"

        TextToImageRequestBodySamplerKLMS ->
            "K_LMS"


encodeTextToImageRequestBodySampler : TextToImageRequestBodySampler -> Json.Encode.Value
encodeTextToImageRequestBodySampler =
    Json.Encode.string << stringFromTextToImageRequestBodySampler



-- DECODER


accountResponseBodyDecoder : Json.Decode.Decoder AccountResponseBody
accountResponseBodyDecoder =
    Json.Decode.succeed AccountResponseBody
        |> decode "email" Json.Decode.string 
        |> decode "id" Json.Decode.string 
        |> decode "organizations" (Json.Decode.list organizationMembershipDecoder) 
        |> maybeDecode "profile_picture" Json.Decode.string Nothing


balanceResponseBodyDecoder : Json.Decode.Decoder BalanceResponseBody
balanceResponseBodyDecoder =
    Json.Decode.succeed BalanceResponseBody
        |> decode "credits" Json.Decode.float 


engineDecoder : Json.Decode.Decoder Engine
engineDecoder =
    Json.Decode.succeed Engine
        |> decode "description" Json.Decode.string 
        |> decode "id" Json.Decode.string 
        |> decode "name" Json.Decode.string 
        |> decode "type" engineTypeDecoder 


engineTypeDecoder : Json.Decode.Decoder EngineType
engineTypeDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "AUDIO" ->
                        Json.Decode.succeed EngineTypeAUDIO

                    "CLASSIFICATION" ->
                        Json.Decode.succeed EngineTypeCLASSIFICATION

                    "PICTURE" ->
                        Json.Decode.succeed EngineTypePICTURE

                    "STORAGE" ->
                        Json.Decode.succeed EngineTypeSTORAGE

                    "TEXT" ->
                        Json.Decode.succeed EngineTypeTEXT

                    "VIDEO" ->
                        Json.Decode.succeed EngineTypeVIDEO

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )



errorDecoder : Json.Decode.Decoder Error
errorDecoder =
    Json.Decode.succeed Error
        |> decode "fault" Json.Decode.bool 
        |> decode "id" Json.Decode.string 
        |> decode "message" Json.Decode.string 
        |> decode "name" Json.Decode.string 
        |> decode "temporary" Json.Decode.bool 
        |> decode "timeout" Json.Decode.bool 


listEnginesResponseBodyDecoder : Json.Decode.Decoder ListEnginesResponseBody
listEnginesResponseBodyDecoder =
    Json.Decode.succeed ListEnginesResponseBody
        |> decode "engines" (Json.Decode.list engineDecoder) 


organizationMembershipDecoder : Json.Decode.Decoder OrganizationMembership
organizationMembershipDecoder =
    Json.Decode.succeed OrganizationMembership
        |> decode "id" Json.Decode.string 
        |> decode "is_default" Json.Decode.bool 
        |> decode "name" Json.Decode.string 
        |> decode "role" Json.Decode.string 


textPromptDecoder : Json.Decode.Decoder TextPrompt
textPromptDecoder =
    Json.Decode.succeed TextPrompt
        |> decode "text" Json.Decode.string 
        |> maybeDecode "weight" Json.Decode.float Nothing


textToImageRequestBodyDecoder : Json.Decode.Decoder TextToImageRequestBody
textToImageRequestBodyDecoder =
    Json.Decode.succeed TextToImageRequestBody
        |> maybeDecode "cfg_scale" Json.Decode.float (Just 7)
        |> maybeDecode "clip_guidance_preset" textToImageRequestBodyClipGuidancePresetDecoder (Just "NONE")
        |> maybeDecode "height" Json.Decode.int (Just 512)
        |> maybeDecode "sampler" textToImageRequestBodySamplerDecoder Nothing
        |> maybeDecode "samples" Json.Decode.int (Just 1)
        |> maybeDecode "seed" Json.Decode.int Nothing
        |> maybeDecode "steps" Json.Decode.int (Just 50)
        |> decode "text_prompts" (Json.Decode.list textPromptDecoder) 
        |> maybeDecode "width" Json.Decode.int (Just 512)


textToImageRequestBodyClipGuidancePresetDecoder : Json.Decode.Decoder TextToImageRequestBodyClipGuidancePreset
textToImageRequestBodyClipGuidancePresetDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "FAST_BLUE" ->
                        Json.Decode.succeed TextToImageRequestBodyClipGuidancePresetFASTBLUE

                    "FAST_GREEN" ->
                        Json.Decode.succeed TextToImageRequestBodyClipGuidancePresetFASTGREEN

                    "NONE" ->
                        Json.Decode.succeed TextToImageRequestBodyClipGuidancePresetNONE

                    "SIMPLE" ->
                        Json.Decode.succeed TextToImageRequestBodyClipGuidancePresetSIMPLE

                    "SLOW" ->
                        Json.Decode.succeed TextToImageRequestBodyClipGuidancePresetSLOW

                    "SLOWER" ->
                        Json.Decode.succeed TextToImageRequestBodyClipGuidancePresetSLOWER

                    "SLOWEST" ->
                        Json.Decode.succeed TextToImageRequestBodyClipGuidancePresetSLOWEST

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )



textToImageRequestBodySamplerDecoder : Json.Decode.Decoder TextToImageRequestBodySampler
textToImageRequestBodySamplerDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "DDIM" ->
                        Json.Decode.succeed TextToImageRequestBodySamplerDDIM

                    "DDPM" ->
                        Json.Decode.succeed TextToImageRequestBodySamplerDDPM

                    "K_DPMPP_2M" ->
                        Json.Decode.succeed TextToImageRequestBodySamplerKDPMPP2M

                    "K_DPMPP_2S_ANCESTRAL" ->
                        Json.Decode.succeed TextToImageRequestBodySamplerKDPMPP2SANCESTRAL

                    "K_DPM_2" ->
                        Json.Decode.succeed TextToImageRequestBodySamplerKDPM2

                    "K_DPM_2_ANCESTRAL" ->
                        Json.Decode.succeed TextToImageRequestBodySamplerKDPM2ANCESTRAL

                    "K_EULER" ->
                        Json.Decode.succeed TextToImageRequestBodySamplerKEULER

                    "K_EULER_ANCESTRAL" ->
                        Json.Decode.succeed TextToImageRequestBodySamplerKEULERANCESTRAL

                    "K_HEUN" ->
                        Json.Decode.succeed TextToImageRequestBodySamplerKHEUN

                    "K_LMS" ->
                        Json.Decode.succeed TextToImageRequestBodySamplerKLMS

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )





-- HELPER


type alias EncodedField =
    Maybe ( String, Json.Encode.Value )


encodeObject : List EncodedField -> Json.Encode.Value
encodeObject =
    Json.Encode.object << List.filterMap identity


encode : String -> (a -> Json.Encode.Value) -> a -> EncodedField
encode key encoder value =
    Just ( key, encoder value )


encodeNullable : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
encodeNullable key encoder value =
    Just ( key, Maybe.withDefault Json.Encode.null (Maybe.map encoder value) )


maybeEncode : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
maybeEncode key encoder =
    Maybe.map (Tuple.pair key << encoder)


maybeEncodeNullable : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
maybeEncodeNullable =
    encodeNullable


decode : String -> Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b
decode key decoder =
    decodeChain (Json.Decode.field key decoder)


decodeLazy : (a -> c) -> String -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeLazy f key decoder =
    decodeChainLazy f (Json.Decode.field key decoder)


decodeNullable : String -> Json.Decode.Decoder a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
decodeNullable key decoder =
    decodeChain (maybeField key decoder Nothing)


decodeNullableLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeNullableLazy f key decoder =
    decodeChainLazy f (maybeField key decoder Nothing)


maybeDecode : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
maybeDecode key decoder fallback =
    -- let's be kind to null-values as well
    decodeChain (maybeField key decoder fallback)


maybeDecodeLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
maybeDecodeLazy f key decoder fallback =
    -- let's be kind to null-values as well
    decodeChainLazy f (maybeField key decoder fallback)


maybeDecodeNullable : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
maybeDecodeNullable key decoder fallback =
    decodeChain (maybeField key decoder fallback)


maybeDecodeNullableLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
maybeDecodeNullableLazy f key decoder fallback =
    decodeChainLazy f (maybeField key decoder fallback)


maybeField : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a)
maybeField key decoder fallback =
    let
        fieldDecoder =
            Json.Decode.field key Json.Decode.value

        valueDecoder =
            Json.Decode.oneOf [ Json.Decode.map Just decoder, Json.Decode.null fallback ]

        decodeObject rawObject =
            case Json.Decode.decodeValue fieldDecoder rawObject of
                Ok rawValue ->
                    case Json.Decode.decodeValue valueDecoder rawValue of
                        Ok value ->
                            Json.Decode.succeed value

                        Err error ->
                            Json.Decode.fail (Json.Decode.errorToString error)

                Err _ ->
                    Json.Decode.succeed fallback
    in
    Json.Decode.value
        |> Json.Decode.andThen decodeObject


decodeChain : Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b
decodeChain =
    Json.Decode.map2 (|>)


decodeChainLazy : (a -> c) -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeChainLazy f =
    decodeChain << Json.Decode.map f
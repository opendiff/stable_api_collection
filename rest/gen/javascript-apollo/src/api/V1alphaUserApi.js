/**
 * Stability.ai REST API
 * Welcome to the Stability.ai REST API developer preview!  Please note, this is an alpha version of our new REST API, and is subject to change according to your feedback.  Feedback during this test is crucial for us to understand what the pain points are and how we can improve it going forward.  Changes will be communicated here, as well as on our online REST API documentation, which can be found at: https://api.stability.ai/docs  Your DreamStudio API key will be required for authentication. You can learn more about API keys here: https://platform.stability.ai/docs/getting-started/authentication  If you encounter any issues, please let us know in the #API discord channel: https://discord.gg/stablediffusion 
 *
 * The version of the OpenAPI document: 0.1
 * Contact: info@stability.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */



import ApiClient from "../ApiClient";
import AccountResponseBody from '../model/AccountResponseBody';
import BalanceResponseBody from '../model/BalanceResponseBody';

/**
* V1alphaUser service.
* @module api/V1alphaUserApi
* @version 0.1
*/
export default class V1alphaUserApi extends ApiClient {

    /**
    * Constructs a new V1alphaUserApi. 
    * @alias module:api/V1alphaUserApi
    * @class
    */
    constructor() {
      super();
      this.baseURL = null;
    }


    /**
     * account
     * Get information about the account associated with the provided API key
     * @return {Promise<AccountResponseBody>}
     */
    async v1alphaUserAccount() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'User-Agent': 'OpenAPI-Generator/0.1/Javascript',
      };
      let formParams = {
      };

      let authNames = ['api_key_header_Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AccountResponseBody;

      return this.callApi(
        '/v1alpha/user/account', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * balance
     * Get the credit balance of the account/organization associated with the API key
     * @param {Object} opts Optional parameters
     * @param {String} opts.organization Optional: Allows for requests to be scoped to an organization other than the user's default.  If not provided, the user's default organization will be used.
     * @return {Promise<BalanceResponseBody>}
     */
    async v1alphaUserBalance(opts) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'User-Agent': 'OpenAPI-Generator/0.1/Javascript',
        'Organization': opts['organization']
      };
      let formParams = {
      };

      let authNames = ['api_key_header_Authorization'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BalanceResponseBody;

      return this.callApi(
        '/v1alpha/user/balance', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }


}

=begin comment

Stability.ai REST API

Welcome to the Stability.ai REST API developer preview!  Please note, this is an alpha version of our new REST API, and is subject to change according to your feedback.  Feedback during this test is crucial for us to understand what the pain points are and how we can improve it going forward.  Changes will be communicated here, as well as on our online REST API documentation, which can be found at: https://api.stability.ai/docs  Your DreamStudio API key will be required for authentication. You can learn more about API keys here: https://platform.stability.ai/docs/getting-started/authentication  If you encounter any issues, please let us know in the #API discord channel: https://discord.gg/stablediffusion 

The version of the OpenAPI document: 0.1
Contact: info@stability.ai
Generated by: https://openapi-generator.tech

=end comment

=cut

#
# NOTE: This class is auto generated by OpenAPI Generator
# Please update the test cases below to test the API endpoints.
# Ref: https://openapi-generator.tech
#
use Test::More tests => 1; #TODO update number of test cases
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('WWW::OpenAPIClient::V1alphaGenerationApi');

my $api = WWW::OpenAPIClient::V1alphaGenerationApi->new();
isa_ok($api, 'WWW::OpenAPIClient::V1alphaGenerationApi');

#
# v1alpha_generation_image_to_image test
#
# uncomment below and update the test
#my $v1alpha_generation_image_to_image_engine_id = undef; # replace NULL with a proper value
#my $v1alpha_generation_image_to_image_accept = undef; # replace NULL with a proper value
#my $v1alpha_generation_image_to_image_init_image = undef; # replace NULL with a proper value
#my $v1alpha_generation_image_to_image_options = undef; # replace NULL with a proper value
#my $v1alpha_generation_image_to_image_organization = undef; # replace NULL with a proper value
#my $v1alpha_generation_image_to_image_result = $api->v1alpha_generation_image_to_image(engine_id => $v1alpha_generation_image_to_image_engine_id, accept => $v1alpha_generation_image_to_image_accept, init_image => $v1alpha_generation_image_to_image_init_image, options => $v1alpha_generation_image_to_image_options, organization => $v1alpha_generation_image_to_image_organization);

#
# v1alpha_generation_masking test
#
# uncomment below and update the test
#my $v1alpha_generation_masking_engine_id = undef; # replace NULL with a proper value
#my $v1alpha_generation_masking_accept = undef; # replace NULL with a proper value
#my $v1alpha_generation_masking_init_image = undef; # replace NULL with a proper value
#my $v1alpha_generation_masking_options = undef; # replace NULL with a proper value
#my $v1alpha_generation_masking_organization = undef; # replace NULL with a proper value
#my $v1alpha_generation_masking_mask_image = undef; # replace NULL with a proper value
#my $v1alpha_generation_masking_result = $api->v1alpha_generation_masking(engine_id => $v1alpha_generation_masking_engine_id, accept => $v1alpha_generation_masking_accept, init_image => $v1alpha_generation_masking_init_image, options => $v1alpha_generation_masking_options, organization => $v1alpha_generation_masking_organization, mask_image => $v1alpha_generation_masking_mask_image);

#
# v1alpha_generation_text_to_image test
#
# uncomment below and update the test
#my $v1alpha_generation_text_to_image_engine_id = undef; # replace NULL with a proper value
#my $v1alpha_generation_text_to_image_accept = undef; # replace NULL with a proper value
#my $v1alpha_generation_text_to_image_text_to_image_request_body = undef; # replace NULL with a proper value
#my $v1alpha_generation_text_to_image_organization = undef; # replace NULL with a proper value
#my $v1alpha_generation_text_to_image_result = $api->v1alpha_generation_text_to_image(engine_id => $v1alpha_generation_text_to_image_engine_id, accept => $v1alpha_generation_text_to_image_accept, text_to_image_request_body => $v1alpha_generation_text_to_image_text_to_image_request_body, organization => $v1alpha_generation_text_to_image_organization);


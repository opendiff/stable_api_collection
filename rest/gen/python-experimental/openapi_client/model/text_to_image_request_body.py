# coding: utf-8

"""
    Stability.ai REST API

    Welcome to the Stability.ai REST API developer preview!  Please note, this is an alpha version of our new REST API, and is subject to change according to your feedback.  Feedback during this test is crucial for us to understand what the pain points are and how we can improve it going forward.  Changes will be communicated here, as well as on our online REST API documentation, which can be found at: https://api.stability.ai/docs  Your DreamStudio API key will be required for authentication. You can learn more about API keys here: https://platform.stability.ai/docs/getting-started/authentication  If you encounter any issues, please let us know in the #API discord channel: https://discord.gg/stablediffusion   # noqa: E501

    The version of the OpenAPI document: 0.1
    Contact: info@stability.ai
    Generated by: https://openapi-generator.tech
"""

import re  # noqa: F401
import sys  # noqa: F401
import typing  # noqa: F401
import functools  # noqa: F401

from frozendict import frozendict  # noqa: F401

import decimal  # noqa: F401
from datetime import date, datetime  # noqa: F401
from frozendict import frozendict  # noqa: F401

from openapi_client.schemas import (  # noqa: F401
    AnyTypeSchema,
    ComposedSchema,
    DictSchema,
    ListSchema,
    StrSchema,
    IntSchema,
    Int32Schema,
    Int64Schema,
    Float32Schema,
    Float64Schema,
    NumberSchema,
    UUIDSchema,
    DateSchema,
    DateTimeSchema,
    DecimalSchema,
    BoolSchema,
    BinarySchema,
    NoneSchema,
    none_type,
    Configuration,
    Unset,
    unset,
    ComposedBase,
    ListBase,
    DictBase,
    NoneBase,
    StrBase,
    IntBase,
    Int32Base,
    Int64Base,
    Float32Base,
    Float64Base,
    NumberBase,
    UUIDBase,
    DateBase,
    DateTimeBase,
    BoolBase,
    BinaryBase,
    Schema,
    NoneClass,
    BoolClass,
    _SchemaValidator,
    _SchemaTypeChecker,
    _SchemaEnumMaker
)


class TextToImageRequestBody(
    DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    _required_property_names = set((
        'text_prompts',
    ))
    
    
    class cfg_scale(
        _SchemaValidator(
            inclusive_maximum=35,
            inclusive_minimum=0,
        ),
        NumberSchema
    ):
        pass
    
    
    class clip_guidance_preset(
        _SchemaEnumMaker(
            enum_value_to_name={
                "FAST_BLUE": "FAST_BLUE",
                "FAST_GREEN": "FAST_GREEN",
                "NONE": "NONE",
                "SIMPLE": "SIMPLE",
                "SLOW": "SLOW",
                "SLOWER": "SLOWER",
                "SLOWEST": "SLOWEST",
            }
        ),
        StrSchema
    ):
        
        @classmethod
        @property
        def FAST_BLUE(cls):
            return cls("FAST_BLUE")
        
        @classmethod
        @property
        def FAST_GREEN(cls):
            return cls("FAST_GREEN")
        
        @classmethod
        @property
        def NONE(cls):
            return cls("NONE")
        
        @classmethod
        @property
        def SIMPLE(cls):
            return cls("SIMPLE")
        
        @classmethod
        @property
        def SLOW(cls):
            return cls("SLOW")
        
        @classmethod
        @property
        def SLOWER(cls):
            return cls("SLOWER")
        
        @classmethod
        @property
        def SLOWEST(cls):
            return cls("SLOWEST")
    
    
    class height(
        _SchemaValidator(
            inclusive_maximum=2048,
            inclusive_minimum=512,
        ),
        IntSchema
    ):
        pass
    
    
    class sampler(
        _SchemaEnumMaker(
            enum_value_to_name={
                "DDIM": "DDIM",
                "DDPM": "DDPM",
                "K_DPMPP_2M": "K_DPMPP_2M",
                "K_DPMPP_2S_ANCESTRAL": "K_DPMPP_2S_ANCESTRAL",
                "K_DPM_2": "K_DPM_2",
                "K_DPM_2_ANCESTRAL": "K_DPM_2_ANCESTRAL",
                "K_EULER": "K_EULER",
                "K_EULER_ANCESTRAL": "K_EULER_ANCESTRAL",
                "K_HEUN": "K_HEUN",
                "K_LMS": "K_LMS",
            }
        ),
        StrSchema
    ):
        
        @classmethod
        @property
        def DDIM(cls):
            return cls("DDIM")
        
        @classmethod
        @property
        def DDPM(cls):
            return cls("DDPM")
        
        @classmethod
        @property
        def K_DPMPP_2M(cls):
            return cls("K_DPMPP_2M")
        
        @classmethod
        @property
        def K_DPMPP_2S_ANCESTRAL(cls):
            return cls("K_DPMPP_2S_ANCESTRAL")
        
        @classmethod
        @property
        def K_DPM_2(cls):
            return cls("K_DPM_2")
        
        @classmethod
        @property
        def K_DPM_2_ANCESTRAL(cls):
            return cls("K_DPM_2_ANCESTRAL")
        
        @classmethod
        @property
        def K_EULER(cls):
            return cls("K_EULER")
        
        @classmethod
        @property
        def K_EULER_ANCESTRAL(cls):
            return cls("K_EULER_ANCESTRAL")
        
        @classmethod
        @property
        def K_HEUN(cls):
            return cls("K_HEUN")
        
        @classmethod
        @property
        def K_LMS(cls):
            return cls("K_LMS")
    
    
    class samples(
        _SchemaValidator(
            inclusive_maximum=10,
            inclusive_minimum=1,
        ),
        IntSchema
    ):
        pass
    
    
    class seed(
        _SchemaValidator(
            inclusive_maximum=2147483647,
            inclusive_minimum=0,
        ),
        IntSchema
    ):
        pass
    
    
    class steps(
        _SchemaValidator(
            inclusive_maximum=150,
            inclusive_minimum=10,
        ),
        IntSchema
    ):
        pass
    
    
    class text_prompts(
        _SchemaValidator(
            min_items=1,
        ),
        ListSchema
    ):
    
        @classmethod
        @property
        def _items(cls) -> typing.Type['TextPrompt']:
            return TextPrompt
    
    
    class width(
        _SchemaValidator(
            inclusive_maximum=2048,
            inclusive_minimum=512,
        ),
        IntSchema
    ):
        pass


    def __new__(
        cls,
        *args: typing.Union[dict, frozendict, ],
        text_prompts: text_prompts,
        cfg_scale: typing.Union[cfg_scale, Unset] = unset,
        clip_guidance_preset: typing.Union[clip_guidance_preset, Unset] = unset,
        height: typing.Union[height, Unset] = unset,
        sampler: typing.Union[sampler, Unset] = unset,
        samples: typing.Union[samples, Unset] = unset,
        seed: typing.Union[seed, Unset] = unset,
        steps: typing.Union[steps, Unset] = unset,
        width: typing.Union[width, Unset] = unset,
        _configuration: typing.Optional[Configuration] = None,
        **kwargs: typing.Type[Schema],
    ) -> 'TextToImageRequestBody':
        return super().__new__(
            cls,
            *args,
            text_prompts=text_prompts,
            cfg_scale=cfg_scale,
            clip_guidance_preset=clip_guidance_preset,
            height=height,
            sampler=sampler,
            samples=samples,
            seed=seed,
            steps=steps,
            width=width,
            _configuration=_configuration,
            **kwargs,
        )

from openapi_client.model.text_prompt import TextPrompt

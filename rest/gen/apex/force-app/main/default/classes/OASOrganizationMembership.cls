/*
 * Stability.ai REST API
 * Welcome to the Stability.ai REST API developer preview!\n\nPlease note, this is an alpha version of our new REST API, and is subject to change according to\nyour feedback.\n\nFeedback during this test is crucial for us to understand what the pain points are and how we can\nimprove it going forward.\n\nChanges will be communicated here, as well as on our online REST API documentation, which can be\nfound at: https://api.stability.ai/docs\n\nYour DreamStudio API key will be required for authentication. You can learn more about API keys\nhere: https://platform.stability.ai/docs/getting-started/authentication\n\nIf you encounter any issues, please let us know in the #API discord channel:\nhttps://discord.gg/stablediffusion\n
 *
 * The version of the OpenAPI document: 0.1
 * Contact: info@stability.ai
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASOrganizationMembership
 */
public class OASOrganizationMembership implements OAS.MappedProperties {
    /**
     * Get id
     * @return id
     */
    public String id { get; set; }

    /**
     * Get isDefault
     * @return isDefault
     */
    public Boolean isDefault { get; set; }

    /**
     * Get name
     * @return name
     */
    public String name { get; set; }

    /**
     * Get role
     * @return role
     */
    public String role { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_default' => 'isDefault'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASOrganizationMembership getExample() {
        OASOrganizationMembership organizationMembership = new OASOrganizationMembership();
          organizationMembership.id = 'org-123456';
          organizationMembership.isDefault = false;
          organizationMembership.name = 'My Organization';
          organizationMembership.role = 'MEMBER';
        return organizationMembership;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOrganizationMembership) {           
            OASOrganizationMembership organizationMembership = (OASOrganizationMembership) obj;
            return this.id == organizationMembership.id
                && this.isDefault == organizationMembership.isDefault
                && this.name == organizationMembership.name
                && this.role == organizationMembership.role;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (isDefault == null ? 0 : System.hashCode(isDefault));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (role == null ? 0 : System.hashCode(role));
        return hashCode;
    }
}


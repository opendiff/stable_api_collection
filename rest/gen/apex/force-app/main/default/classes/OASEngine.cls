/*
 * Stability.ai REST API
 * Welcome to the Stability.ai REST API developer preview!\n\nPlease note, this is an alpha version of our new REST API, and is subject to change according to\nyour feedback.\n\nFeedback during this test is crucial for us to understand what the pain points are and how we can\nimprove it going forward.\n\nChanges will be communicated here, as well as on our online REST API documentation, which can be\nfound at: https://api.stability.ai/docs\n\nYour DreamStudio API key will be required for authentication. You can learn more about API keys\nhere: https://platform.stability.ai/docs/getting-started/authentication\n\nIf you encounter any issues, please let us know in the #API discord channel:\nhttps://discord.gg/stablediffusion\n
 *
 * The version of the OpenAPI document: 0.1
 * Contact: info@stability.ai
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASEngine
 */
public class OASEngine {
    /**
     * Get description
     * @return description
     */
    public String description { get; set; }

    /**
     * Unique identifier for the engine
     * @return id
     */
    public String id { get; set; }

    /**
     * Name of the engine
     * @return name
     */
    public String name { get; set; }

    /**
     * The type of content this engine produces
     */
    public enum TypeEnum {
        AUDIO,
        CLASSIFICATION,
        PICTURE,
        STORAGE,
        TEXT,
        VIDEO
    }

    /**
     * The type of content this engine produces
     * @return type
     */
    public TypeEnum type { get; set; }

    public static OASEngine getExample() {
        OASEngine engine = new OASEngine();
          engine.description = 'Saepe nam magni deserunt eligendi ducimus.';
          engine.id = 'Sunt ut recusandae perspiciatis.';
          engine.name = 'Eos repellendus est.';
          engine.type = TypeEnum.PICTURE;
        return engine;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASEngine) {           
            OASEngine engine = (OASEngine) obj;
            return this.description == engine.description
                && this.id == engine.id
                && this.name == engine.name
                && this.type == engine.type;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (description == null ? 0 : System.hashCode(description));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        return hashCode;
    }
}


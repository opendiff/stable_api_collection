/*
 * Stability.ai REST API
 * Welcome to the Stability.ai REST API developer preview!  Please note, this is an alpha version of our new REST API, and is subject to change according to your feedback.  Feedback during this test is crucial for us to understand what the pain points are and how we can improve it going forward.  Changes will be communicated here, as well as on our online REST API documentation, which can be found at: https://api.stability.ai/docs  Your DreamStudio API key will be required for authentication. You can learn more about API keys here: https://platform.stability.ai/docs/getting-started/authentication  If you encounter any issues, please let us know in the #API discord channel: https://discord.gg/stablediffusion 
 *
 * The version of the OpenAPI document: 0.1
 * Contact: info@stability.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.model.OrganizationMembership;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * AccountResponseBody
 */
@JsonPropertyOrder({
  AccountResponseBody.JSON_PROPERTY_EMAIL,
  AccountResponseBody.JSON_PROPERTY_ID,
  AccountResponseBody.JSON_PROPERTY_ORGANIZATIONS,
  AccountResponseBody.JSON_PROPERTY_PROFILE_PICTURE
})
@JsonTypeName("AccountResponseBody")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2022-12-31T22:15:06.514954-05:00[America/New_York]")
@Introspected
public class AccountResponseBody {
    public static final String JSON_PROPERTY_EMAIL = "email";
    private String email;

    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_ORGANIZATIONS = "organizations";
    private List<OrganizationMembership> organizations = new ArrayList<>();

    public static final String JSON_PROPERTY_PROFILE_PICTURE = "profile_picture";
    private URI profilePicture;

    public AccountResponseBody(String email, String id, List<OrganizationMembership> organizations) {
        this.email = email;
        this.id = id;
        this.organizations = organizations;
    }

    public AccountResponseBody email(String email) {
        this.email = email;
        return this;
    }

    /**
     * The user&#39;s email
     * @return email
     **/
    @NotNull
    @Email
    @JsonProperty(JSON_PROPERTY_EMAIL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getEmail() {
        return email;
    }

    @JsonProperty(JSON_PROPERTY_EMAIL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEmail(String email) {
        this.email = email;
    }

    public AccountResponseBody id(String id) {
        this.id = id;
        return this;
    }

    /**
     * The user&#39;s ID
     * @return id
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setId(String id) {
        this.id = id;
    }

    public AccountResponseBody organizations(List<OrganizationMembership> organizations) {
        this.organizations = organizations;
        return this;
    }

    public AccountResponseBody addOrganizationsItem(OrganizationMembership organizationsItem) {
        this.organizations.add(organizationsItem);
        return this;
    }

    /**
     * The user&#39;s organizations
     * @return organizations
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_ORGANIZATIONS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<OrganizationMembership> getOrganizations() {
        return organizations;
    }

    @JsonProperty(JSON_PROPERTY_ORGANIZATIONS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setOrganizations(List<OrganizationMembership> organizations) {
        this.organizations = organizations;
    }

    public AccountResponseBody profilePicture(URI profilePicture) {
        this.profilePicture = profilePicture;
        return this;
    }

    /**
     * The user&#39;s profile picture
     * @return profilePicture
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROFILE_PICTURE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public URI getProfilePicture() {
        return profilePicture;
    }

    @JsonProperty(JSON_PROPERTY_PROFILE_PICTURE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProfilePicture(URI profilePicture) {
        this.profilePicture = profilePicture;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AccountResponseBody accountResponseBody = (AccountResponseBody) o;
        return Objects.equals(this.email, accountResponseBody.email) &&
            Objects.equals(this.id, accountResponseBody.id) &&
            Objects.equals(this.organizations, accountResponseBody.organizations) &&
            Objects.equals(this.profilePicture, accountResponseBody.profilePicture);
    }

    @Override
    public int hashCode() {
        return Objects.hash(email, id, organizations, profilePicture);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AccountResponseBody {\n");
        sb.append("    email: ").append(toIndentedString(email)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    organizations: ").append(toIndentedString(organizations)).append("\n");
        sb.append("    profilePicture: ").append(toIndentedString(profilePicture)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

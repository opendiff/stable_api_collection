/**
 * Stability.ai REST API
 * Welcome to the Stability.ai REST API developer preview!  Please note, this is an alpha version of our new REST API, and is subject to change according to your feedback.  Feedback during this test is crucial for us to understand what the pain points are and how we can improve it going forward.  Changes will be communicated here, as well as on our online REST API documentation, which can be found at: https://api.stability.ai/docs  Your DreamStudio API key will be required for authentication. You can learn more about API keys here: https://platform.stability.ai/docs/getting-started/authentication  If you encounter any issues, please let us know in the #API discord channel: https://discord.gg/stablediffusion 
 *
 * The version of the OpenAPI document: 0.1
 * Contact: info@stability.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.net.URI;
import java.util.*;
import org.openapitools.client.model.OrganizationMembership;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class AccountResponseBody {
  
  @SerializedName("email")
  private String email = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("organizations")
  private List<OrganizationMembership> organizations = null;
  @SerializedName("profile_picture")
  private URI profilePicture = null;

  /**
   * The user's email
   **/
  @ApiModelProperty(required = true, value = "The user's email")
  public String getEmail() {
    return email;
  }
  public void setEmail(String email) {
    this.email = email;
  }

  /**
   * The user's ID
   **/
  @ApiModelProperty(required = true, value = "The user's ID")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * The user's organizations
   **/
  @ApiModelProperty(required = true, value = "The user's organizations")
  public List<OrganizationMembership> getOrganizations() {
    return organizations;
  }
  public void setOrganizations(List<OrganizationMembership> organizations) {
    this.organizations = organizations;
  }

  /**
   * The user's profile picture
   **/
  @ApiModelProperty(value = "The user's profile picture")
  public URI getProfilePicture() {
    return profilePicture;
  }
  public void setProfilePicture(URI profilePicture) {
    this.profilePicture = profilePicture;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountResponseBody accountResponseBody = (AccountResponseBody) o;
    return (this.email == null ? accountResponseBody.email == null : this.email.equals(accountResponseBody.email)) &&
        (this.id == null ? accountResponseBody.id == null : this.id.equals(accountResponseBody.id)) &&
        (this.organizations == null ? accountResponseBody.organizations == null : this.organizations.equals(accountResponseBody.organizations)) &&
        (this.profilePicture == null ? accountResponseBody.profilePicture == null : this.profilePicture.equals(accountResponseBody.profilePicture));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.email == null ? 0: this.email.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.organizations == null ? 0: this.organizations.hashCode());
    result = 31 * result + (this.profilePicture == null ? 0: this.profilePicture.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountResponseBody {\n");
    
    sb.append("  email: ").append(email).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  organizations: ").append(organizations).append("\n");
    sb.append("  profilePicture: ").append(profilePicture).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}

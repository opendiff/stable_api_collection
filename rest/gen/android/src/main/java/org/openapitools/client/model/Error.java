/**
 * Stability.ai REST API
 * Welcome to the Stability.ai REST API developer preview!  Please note, this is an alpha version of our new REST API, and is subject to change according to your feedback.  Feedback during this test is crucial for us to understand what the pain points are and how we can improve it going forward.  Changes will be communicated here, as well as on our online REST API documentation, which can be found at: https://api.stability.ai/docs  Your DreamStudio API key will be required for authentication. You can learn more about API keys here: https://platform.stability.ai/docs/getting-started/authentication  If you encounter any issues, please let us know in the #API discord channel: https://discord.gg/stablediffusion 
 *
 * The version of the OpenAPI document: 0.1
 * Contact: info@stability.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Error {
  
  @SerializedName("fault")
  private Boolean fault = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("message")
  private String message = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("temporary")
  private Boolean temporary = null;
  @SerializedName("timeout")
  private Boolean timeout = null;

  /**
   * Is the error a server-side fault?
   **/
  @ApiModelProperty(required = true, value = "Is the error a server-side fault?")
  public Boolean getFault() {
    return fault;
  }
  public void setFault(Boolean fault) {
    this.fault = fault;
  }

  /**
   * ID is a unique identifier for this particular occurrence of the problem.
   **/
  @ApiModelProperty(required = true, value = "ID is a unique identifier for this particular occurrence of the problem.")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Message is a human-readable explanation specific to this occurrence of the problem.
   **/
  @ApiModelProperty(required = true, value = "Message is a human-readable explanation specific to this occurrence of the problem.")
  public String getMessage() {
    return message;
  }
  public void setMessage(String message) {
    this.message = message;
  }

  /**
   * Name is the name of this class of errors.
   **/
  @ApiModelProperty(required = true, value = "Name is the name of this class of errors.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Is the error temporary?
   **/
  @ApiModelProperty(required = true, value = "Is the error temporary?")
  public Boolean getTemporary() {
    return temporary;
  }
  public void setTemporary(Boolean temporary) {
    this.temporary = temporary;
  }

  /**
   * Is the error a timeout?
   **/
  @ApiModelProperty(required = true, value = "Is the error a timeout?")
  public Boolean getTimeout() {
    return timeout;
  }
  public void setTimeout(Boolean timeout) {
    this.timeout = timeout;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Error error = (Error) o;
    return (this.fault == null ? error.fault == null : this.fault.equals(error.fault)) &&
        (this.id == null ? error.id == null : this.id.equals(error.id)) &&
        (this.message == null ? error.message == null : this.message.equals(error.message)) &&
        (this.name == null ? error.name == null : this.name.equals(error.name)) &&
        (this.temporary == null ? error.temporary == null : this.temporary.equals(error.temporary)) &&
        (this.timeout == null ? error.timeout == null : this.timeout.equals(error.timeout));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.fault == null ? 0: this.fault.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.message == null ? 0: this.message.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.temporary == null ? 0: this.temporary.hashCode());
    result = 31 * result + (this.timeout == null ? 0: this.timeout.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Error {\n");
    
    sb.append("  fault: ").append(fault).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  message: ").append(message).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  temporary: ").append(temporary).append("\n");
    sb.append("  timeout: ").append(timeout).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}

/**
 * Stability.ai REST API
 * Welcome to the Stability.ai REST API developer preview!  Please note, this is an alpha version of our new REST API, and is subject to change according to your feedback.  Feedback during this test is crucial for us to understand what the pain points are and how we can improve it going forward.  Changes will be communicated here, as well as on our online REST API documentation, which can be found at: https://api.stability.ai/docs  Your DreamStudio API key will be required for authentication. You can learn more about API keys here: https://platform.stability.ai/docs/getting-started/authentication  If you encounter any issues, please let us know in the #API discord channel: https://discord.gg/stablediffusion 
 *
 * The version of the OpenAPI document: 0.1
 * Contact: info@stability.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export interface AccountResponseBody {
  /**
   * The user\'s email
   */
  email: string;
  /**
   * The user\'s ID
   */
  id: string;
  /**
   * The user\'s organizations
   */
  organizations: Array<OrganizationMembership>;
  /**
   * The user\'s profile picture
   */
  profile_picture?: string;
}


export interface BalanceResponseBody {
  /**
   * The balance of the account/organization associated with the API key
   */
  credits: number;
}


export interface Engine {
  description: string;
  /**
   * Unique identifier for the engine
   */
  id: string;
  /**
   * Name of the engine
   */
  name: string;
  /**
   * The type of content this engine produces
   */
  type: EngineTypeEnum;
}

/**
 * Enum for the type property.
 */
export type EngineTypeEnum = 'AUDIO' | 'CLASSIFICATION' | 'PICTURE' | 'STORAGE' | 'TEXT' | 'VIDEO';


export interface ListEnginesResponseBody {
  /**
   * The engines available to your user/organization
   */
  engines: Array<Engine>;
}


export interface ModelError {
  /**
   * Is the error a server-side fault?
   */
  fault: boolean;
  /**
   * ID is a unique identifier for this particular occurrence of the problem.
   */
  id: string;
  /**
   * Message is a human-readable explanation specific to this occurrence of the problem.
   */
  message: string;
  /**
   * Name is the name of this class of errors.
   */
  name: string;
  /**
   * Is the error temporary?
   */
  temporary: boolean;
  /**
   * Is the error a timeout?
   */
  timeout: boolean;
}


export interface OrganizationMembership {
  id: string;
  is_default: boolean;
  name: string;
  role: string;
}


/**
 * Text prompt for image generation
 */
export interface TextPrompt {
  text: string;
  /**
   * Weight of the prompt (use negative numbers for negative prompts)
   */
  weight?: number;
}


export interface TextToImageRequestBody {
  /**
   * How strictly the diffusion process adheres to the prompt text (higher values keep your image closer to your prompt)
   */
  cfg_scale?: number;
  clip_guidance_preset?: TextToImageRequestBodyClipGuidancePresetEnum;
  /**
   * Height of the image (note: `height * width` must be <= 1 Megapixel)
   */
  height?: number;
  /**
   * Which sampler to use for the diffusion process. If this value is omitted we\'ll automatically select an appropriate sampler for you.
   */
  sampler?: TextToImageRequestBodySamplerEnum;
  /**
   * Number of images to generate
   */
  samples?: number;
  /**
   * Random noise seed (omit this option or use `0` for a random seed)
   */
  seed?: number;
  /**
   * Number of diffusion steps to run
   */
  steps?: number;
  text_prompts: Array<TextPrompt>;
  /**
   * Width of the image (note: `height * width` must be <= 1 Megapixel)
   */
  width?: number;
}

/**
 * Enum for the clip_guidance_preset property.
 */
export type TextToImageRequestBodyClipGuidancePresetEnum = 'FAST_BLUE' | 'FAST_GREEN' | 'NONE' | 'SIMPLE' | 'SLOW' | 'SLOWER' | 'SLOWEST';

/**
 * Enum for the sampler property.
 */
export type TextToImageRequestBodySamplerEnum = 'DDIM' | 'DDPM' | 'K_DPMPP_2M' | 'K_DPMPP_2S_ANCESTRAL' | 'K_DPM_2' | 'K_DPM_2_ANCESTRAL' | 'K_EULER' | 'K_EULER_ANCESTRAL' | 'K_HEUN' | 'K_LMS';


#
# Stability.ai REST API
# 
# Welcome to the Stability.ai REST API developer preview!  Please note, this is an alpha version of our new REST API, and is subject to change according to your feedback.  Feedback during this test is crucial for us to understand what the pain points are and how we can improve it going forward.  Changes will be communicated here, as well as on our online REST API documentation, which can be found at: https://api.stability.ai/docs  Your DreamStudio API key will be required for authentication. You can learn more about API keys here: https://platform.stability.ai/docs/getting-started/authentication  If you encounter any issues, please let us know in the #API discord channel: https://discord.gg/stablediffusion 
# The version of the OpenAPI document: 0.1
# Contact: info@stability.ai
# Generated by: https://openapi-generator.tech
#

import json
import tables

import model_text_prompt

type ClipGuidancePreset* {.pure.} = enum
  FASTBLUE
  FASTGREEN
  NONE
  SIMPLE
  SLOW
  SLOWER
  SLOWEST

type Sampler* {.pure.} = enum
  DDIM
  DDPM
  KDPMPP2M
  KDPMPP2SANCESTRAL
  KDPM2
  KDPM2ANCESTRAL
  KEULER
  KEULERANCESTRAL
  KHEUN
  KLMS

type TextToImageRequestBody* = object
  ## 
  cfgScale*: float ## How strictly the diffusion process adheres to the prompt text (higher values keep your image closer to your prompt)
  clipGuidancePreset*: ClipGuidancePreset
  height*: int ## Height of the image (note: `height * width` must be <= 1 Megapixel)
  sampler*: Sampler ## Which sampler to use for the diffusion process. If this value is omitted we'll automatically select an appropriate sampler for you.
  samples*: int ## Number of images to generate
  seed*: int ## Random noise seed (omit this option or use `0` for a random seed)
  steps*: int ## Number of diffusion steps to run
  textPrompts*: seq[TextPrompt]
  width*: int ## Width of the image (note: `height * width` must be <= 1 Megapixel)

func `%`*(v: ClipGuidancePreset): JsonNode =
  let str = case v:
    of ClipGuidancePreset.FASTBLUE: "FAST_BLUE"
    of ClipGuidancePreset.FASTGREEN: "FAST_GREEN"
    of ClipGuidancePreset.NONE: "NONE"
    of ClipGuidancePreset.SIMPLE: "SIMPLE"
    of ClipGuidancePreset.SLOW: "SLOW"
    of ClipGuidancePreset.SLOWER: "SLOWER"
    of ClipGuidancePreset.SLOWEST: "SLOWEST"

  JsonNode(kind: JString, str: str)

func `$`*(v: ClipGuidancePreset): string =
  result = case v:
    of ClipGuidancePreset.FASTBLUE: "FAST_BLUE"
    of ClipGuidancePreset.FASTGREEN: "FAST_GREEN"
    of ClipGuidancePreset.NONE: "NONE"
    of ClipGuidancePreset.SIMPLE: "SIMPLE"
    of ClipGuidancePreset.SLOW: "SLOW"
    of ClipGuidancePreset.SLOWER: "SLOWER"
    of ClipGuidancePreset.SLOWEST: "SLOWEST"

func `%`*(v: Sampler): JsonNode =
  let str = case v:
    of Sampler.DDIM: "DDIM"
    of Sampler.DDPM: "DDPM"
    of Sampler.KDPMPP2M: "K_DPMPP_2M"
    of Sampler.KDPMPP2SANCESTRAL: "K_DPMPP_2S_ANCESTRAL"
    of Sampler.KDPM2: "K_DPM_2"
    of Sampler.KDPM2ANCESTRAL: "K_DPM_2_ANCESTRAL"
    of Sampler.KEULER: "K_EULER"
    of Sampler.KEULERANCESTRAL: "K_EULER_ANCESTRAL"
    of Sampler.KHEUN: "K_HEUN"
    of Sampler.KLMS: "K_LMS"

  JsonNode(kind: JString, str: str)

func `$`*(v: Sampler): string =
  result = case v:
    of Sampler.DDIM: "DDIM"
    of Sampler.DDPM: "DDPM"
    of Sampler.KDPMPP2M: "K_DPMPP_2M"
    of Sampler.KDPMPP2SANCESTRAL: "K_DPMPP_2S_ANCESTRAL"
    of Sampler.KDPM2: "K_DPM_2"
    of Sampler.KDPM2ANCESTRAL: "K_DPM_2_ANCESTRAL"
    of Sampler.KEULER: "K_EULER"
    of Sampler.KEULERANCESTRAL: "K_EULER_ANCESTRAL"
    of Sampler.KHEUN: "K_HEUN"
    of Sampler.KLMS: "K_LMS"
